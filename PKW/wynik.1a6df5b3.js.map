{"mappings":"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","sources":["<anon>","wynik.ts","reszty.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $1JI8o = parcelRequire(\"1JI8o\");\n\nvar $geIQo = parcelRequire(\"geIQo\");\nconst $ff4aaba79393e733$export$50e1bf1df3d1c967 = {\n    PIS: {\n        150000: 1,\n        160000: 4,\n        170000: 8,\n        180000: 18,\n        190000: 33,\n        200000: 61,\n        210000: 68,\n        220000: 145,\n        230000: 249,\n        240000: 374,\n        250000: 573,\n        260000: 810,\n        270000: 1134,\n        280000: 1599,\n        290000: 2207,\n        300000: 2890,\n        310000: 3682,\n        320000: 4503,\n        330000: 5617,\n        340000: 6582,\n        350000: 7568,\n        360000: 8713,\n        370000: 9674,\n        380000: 10327,\n        390000: 11054,\n        400000: 11277,\n        410000: 11450,\n        420000: 11516,\n        430000: 11161,\n        440000: 10590,\n        450000: 9744,\n        460000: 9114,\n        470000: 8350,\n        480000: 7414,\n        490000: 6367,\n        500000: 5285,\n        510000: 4560,\n        520000: 3684,\n        530000: 2855,\n        540000: 2362,\n        550000: 1751,\n        560000: 1337,\n        570000: 992,\n        580000: 684,\n        590000: 534,\n        600000: 388,\n        610000: 251,\n        620000: 153,\n        630000: 112,\n        640000: 60,\n        650000: 35,\n        660000: 30,\n        670000: 25,\n        680000: 13,\n        690000: 6,\n        700000: 3,\n        710000: 1,\n        720000: 2\n    },\n    KO: {\n        210000: 3,\n        220000: 1,\n        230000: 6,\n        240000: 8,\n        250000: 16,\n        260000: 29,\n        270000: 67,\n        280000: 106,\n        290000: 170,\n        300000: 243,\n        310000: 373,\n        320000: 596,\n        330000: 830,\n        340000: 1208,\n        350000: 1660,\n        360000: 2271,\n        370000: 3009,\n        380000: 3771,\n        390000: 4719,\n        400000: 5737,\n        410000: 6614,\n        420000: 7807,\n        430000: 8765,\n        440000: 9742,\n        450000: 10477,\n        460000: 11020,\n        470000: 11459,\n        480000: 11656,\n        490000: 11669,\n        500000: 11488,\n        510000: 10520,\n        520000: 10034,\n        530000: 9226,\n        540000: 8245,\n        550000: 7095,\n        560000: 6139,\n        570000: 5184,\n        580000: 4170,\n        590000: 3441,\n        600000: 2747,\n        610000: 2069,\n        620000: 1595,\n        630000: 1223,\n        640000: 886,\n        650000: 620,\n        660000: 399,\n        670000: 311,\n        680000: 201,\n        690000: 147,\n        700000: 95,\n        710000: 59,\n        720000: 29,\n        730000: 15,\n        740000: 16,\n        750000: 8,\n        760000: 3,\n        770000: 2,\n        800000: 1\n    },\n    TD: {\n        280000: 2,\n        290000: 3,\n        300000: 4,\n        310000: 7,\n        320000: 19,\n        330000: 28,\n        340000: 59,\n        350000: 80,\n        360000: 150,\n        370000: 251,\n        380000: 369,\n        390000: 572,\n        400000: 933,\n        410000: 1220,\n        420000: 1701,\n        430000: 2407,\n        440000: 3015,\n        450000: 3767,\n        460000: 4943,\n        470000: 5926,\n        480000: 7148,\n        490000: 8184,\n        500000: 9328,\n        510000: 10186,\n        520000: 11042,\n        530000: 11995,\n        540000: 12280,\n        550000: 12195,\n        560000: 12101,\n        570000: 11431,\n        580000: 10853,\n        590000: 9836,\n        600000: 9139,\n        610000: 7653,\n        620000: 6791,\n        630000: 5585,\n        640000: 4687,\n        650000: 3706,\n        660000: 2870,\n        670000: 2255,\n        680000: 1573,\n        690000: 1172,\n        700000: 854,\n        710000: 571,\n        720000: 407,\n        730000: 284,\n        740000: 154,\n        750000: 106,\n        760000: 72,\n        770000: 38,\n        780000: 24,\n        790000: 11,\n        800000: 7,\n        810000: 4,\n        820000: 2\n    },\n    LEWICA: {\n        340000: 1,\n        350000: 2,\n        360000: 1,\n        370000: 9,\n        380000: 8,\n        390000: 17,\n        400000: 31,\n        410000: 59,\n        420000: 117,\n        430000: 190,\n        440000: 294,\n        450000: 399,\n        460000: 658,\n        470000: 988,\n        480000: 1432,\n        490000: 1955,\n        500000: 2785,\n        510000: 3677,\n        520000: 4571,\n        530000: 5863,\n        540000: 6975,\n        550000: 8506,\n        560000: 9490,\n        570000: 10811,\n        580000: 11985,\n        590000: 12672,\n        600000: 12903,\n        610000: 12957,\n        620000: 12819,\n        630000: 12053,\n        640000: 11387,\n        650000: 10184,\n        660000: 9292,\n        670000: 7785,\n        680000: 6407,\n        690000: 5370,\n        700000: 4268,\n        710000: 3188,\n        720000: 2448,\n        730000: 1768,\n        740000: 1272,\n        750000: 856,\n        760000: 601,\n        770000: 391,\n        780000: 237,\n        790000: 137,\n        800000: 88,\n        810000: 43,\n        820000: 17,\n        830000: 19,\n        840000: 7,\n        850000: 2,\n        860000: 3,\n        870000: 2\n    },\n    KONF: {\n        300000: 2,\n        310000: 3,\n        320000: 9,\n        330000: 8,\n        340000: 25,\n        350000: 47,\n        360000: 69,\n        370000: 108,\n        380000: 202,\n        390000: 359,\n        400000: 528,\n        410000: 831,\n        420000: 1244,\n        430000: 1766,\n        440000: 2412,\n        450000: 3266,\n        460000: 4160,\n        470000: 5426,\n        480000: 6570,\n        490000: 7675,\n        500000: 8990,\n        510000: 10200,\n        520000: 11313,\n        530000: 12047,\n        540000: 12723,\n        550000: 13089,\n        560000: 12898,\n        570000: 12380,\n        580000: 11836,\n        590000: 10726,\n        600000: 9760,\n        610000: 8427,\n        620000: 7113,\n        630000: 5769,\n        640000: 4838,\n        650000: 3690,\n        660000: 2828,\n        670000: 2087,\n        680000: 1521,\n        690000: 1057,\n        700000: 696,\n        710000: 474,\n        720000: 307,\n        730000: 222,\n        740000: 128,\n        750000: 74,\n        760000: 40,\n        770000: 23,\n        780000: 20,\n        790000: 5,\n        800000: 5,\n        810000: 4\n    }\n};\n\n\n\nvar $3i35a = parcelRequire(\"3i35a\");\n\nvar $cWeek = parcelRequire(\"cWeek\");\nfunction $ff3ca12ef39815af$export$5a3cb4f2b47b54fa(wynik) {\n    const rozkladReszt = {\n        PIS: {},\n        KO: {},\n        TD: {},\n        LEWICA: {},\n        KONF: {}\n    };\n    for(let i = 1; i <= (0, $cWeek.ILE_SYMULACJI); i++){\n        const sumaReszt = {\n            KO: 0,\n            PIS: 0,\n            LEWICA: 0,\n            TD: 0,\n            KONF: 0\n        };\n        const sumaMandatow = {\n            KO: 0,\n            PIS: 0,\n            LEWICA: 0,\n            TD: 0,\n            KONF: 0\n        };\n        for (const okreg of (0, $geIQo.okregi)){\n            const { wynikWOkregu: wynikWOkregu, odchylenieWOkregu: odchylenieWOkregu } = (0, $3i35a.PoparcieWOkregu)(wynik, okreg);\n            const procentyWOkreguSrednia = (0, $3i35a.NormalizujWynik)(wynikWOkregu);\n            const bucketFn = (num, bucket)=>Math.round(num * bucket) / bucket;\n            // Losowanie poparcia dla partii\n            let { procentWOkreguLosoweUncapped: procentWOkreguLosoweUncapped, procentWOkreguLosoweCapped: procentWOkreguLosoweCapped } = (0, $3i35a.losowanieWyniku)(procentyWOkreguSrednia, odchylenieWOkregu, bucketFn);\n            // Podział mandatów\n            const mandatyWOkregu = (0, $3i35a.PodzialMandatowWOkregu)(procentWOkreguLosoweUncapped, okreg);\n            const glosy = (0, $geIQo.glosy2019)[okreg.nr - 1].reduce((accumulator, currentValue)=>{\n                return accumulator + currentValue;\n            }, 0);\n            const glosyFn = (procent)=>Math.round(glosy * procent / 100);\n            const resztaFn = (glosy)=>// Math.round(\n                //   (glosy % mandatyWOkregu.cenaMandatu)\n                // );\n                Math.max(0, (glosy % mandatyWOkregu.cenaMandatu + 8) % mandatyWOkregu.cenaMandatu - 10);\n            // console.log(procentWOkreguLosoweUncapped, mandatyWOkregu);\n            for (const partia of (0, $geIQo.PARTIE)){\n                const glosyPartia = glosyFn(procentWOkreguLosoweUncapped[partia]);\n                const reszta = resztaFn(glosyPartia);\n                // console.log(partia, glosyPartia, reszta);\n                sumaReszt[partia] += reszta || 0;\n                sumaMandatow[partia] += mandatyWOkregu[partia] || 0;\n            }\n        }\n        // console.log(sumaMandatow, sumaReszt);\n        for (const partia of (0, $geIQo.PARTIE)){\n            const bucket = `${Math.round(sumaReszt[partia] / 10000) * 10000}`;\n            // console.log(rozkladReszt);\n            if (rozkladReszt[partia][bucket]) rozkladReszt[partia][bucket] += 1;\n            else rozkladReszt[partia][bucket] = 1;\n        }\n    } // FOR\n    return rozkladReszt;\n}\n// const rozkladReszt = RozkladResztWOkregach(sredniaSondazy);\n// console.log(rozkladReszt);\nconst $ff3ca12ef39815af$var$rozkladReszt = (0, $ff4aaba79393e733$export$50e1bf1df3d1c967);\nfor (const partia of (0, $geIQo.PARTIE))$ff3ca12ef39815af$export$7a22f047cf18a648($ff3ca12ef39815af$var$rozkladReszt[partia], partia);\nfunction $ff3ca12ef39815af$export$7a22f047cf18a648(rozkladReszt, partia) {\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(\"HistogramReszt\" + partia).appendChild(canvas);\n    const color = (0, $geIQo.KOLOR_PARTII)[partia];\n    new (0, $1JI8o.Chart)(canvas, {\n        type: \"bar\",\n        data: {\n            labels: Object.keys(rozkladReszt),\n            datasets: [\n                {\n                    label: \"częstość dla \" + partia,\n                    data: Object.entries(rozkladReszt).map(([bucket, czestosc])=>czestosc),\n                    backgroundColor: color\n                }\n            ]\n        }\n    });\n}\n\n\n//# sourceMappingURL=wynik.1a6df5b3.js.map\n","import { Chart, ChartItem } from \"chart.js\";\nimport { KOLOR_PARTII, PARTIE, glosy2019, okregi } from \"./dane\";\nimport { RESZTY } from \"./reszty\";\nimport { NormalizujWynik, PodzialMandatowWOkregu, PoparcieWOkregu, losowanieWyniku } from \"./ordynacja\";\nimport { ILE_SYMULACJI, Wynik } from \"./typy\";\n\nexport function RozkladResztWOkregach(wynik: Wynik) {\n  const rozkladReszt = {\n    PIS: {},\n    KO: {},\n    TD: {},\n    LEWICA: {},\n    KONF: {},\n  };\n\n  for (let i = 1; i <= ILE_SYMULACJI; i++) {\n    const sumaReszt: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\n    const sumaMandatow: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\n    for (const okreg of okregi) {\n      const { wynikWOkregu, odchylenieWOkregu } = PoparcieWOkregu(wynik, okreg);\n      const procentyWOkreguSrednia = NormalizujWynik(wynikWOkregu);\n      const bucketFn = (num, bucket) => Math.round(num * bucket) / bucket;\n\n      // Losowanie poparcia dla partii\n      let { procentWOkreguLosoweUncapped, procentWOkreguLosoweCapped } =\n        losowanieWyniku(procentyWOkreguSrednia, odchylenieWOkregu, bucketFn);\n      // Podział mandatów\n      const mandatyWOkregu = PodzialMandatowWOkregu(\n        procentWOkreguLosoweUncapped,\n        okreg\n      );\n      const glosy = glosy2019[okreg.nr - 1].reduce(\n        (accumulator: number, currentValue: number): number => {\n          return accumulator + currentValue;\n        },\n        0\n      );\n      const glosyFn = (procent) => Math.round((glosy * procent) / 100);\n      const resztaFn = (glosy) =>\n        // Math.round(\n        //   (glosy % mandatyWOkregu.cenaMandatu)\n        // );\n        Math.max(\n          0,\n          (((glosy % mandatyWOkregu.cenaMandatu) + 8) %\n            mandatyWOkregu.cenaMandatu) -\n            10\n        );\n\n      // console.log(procentWOkreguLosoweUncapped, mandatyWOkregu);\n      for (const partia of PARTIE) {\n        const glosyPartia = glosyFn(procentWOkreguLosoweUncapped[partia]);\n        const reszta = resztaFn(glosyPartia);\n        // console.log(partia, glosyPartia, reszta);\n        sumaReszt[partia] += reszta || 0;\n        sumaMandatow[partia] += mandatyWOkregu[partia] || 0;\n      }\n    }\n    // console.log(sumaMandatow, sumaReszt);\n    for (const partia of PARTIE) {\n      const bucket = `${Math.round(sumaReszt[partia] / 10000) * 10000}`;\n      // console.log(rozkladReszt);\n      if (rozkladReszt[partia][bucket]) {\n        rozkladReszt[partia][bucket] += 1;\n      } else {\n        rozkladReszt[partia][bucket] = 1;\n      }\n    }\n  } // FOR\n  return rozkladReszt;\n}\n\n// const rozkladReszt = RozkladResztWOkregach(sredniaSondazy);\n// console.log(rozkladReszt);\nconst rozkladReszt = RESZTY;\n\nfor (const partia of PARTIE) {\n  rysujHistogram(rozkladReszt[partia], partia);\n}\n\nexport function rysujHistogram(rozkladReszt: any, partia: string) {\n  const canvas = document.createElement(\"canvas\");\n  document.getElementById(\"HistogramReszt\" + partia).appendChild(canvas);\n  const color = KOLOR_PARTII[partia];\n\n  new Chart(canvas as ChartItem, {\n    type: \"bar\",\n    data: {\n      labels: Object.keys(rozkladReszt),\n      datasets: [\n        {\n          label: \"częstość dla \" + partia,\n          data: Object.entries(rozkladReszt).map(\n            ([bucket, czestosc]) => czestosc\n          ),\n          backgroundColor: color,\n        },\n      ],\n    },\n  });\n}\n","export const RESZTY = {\n  PIS: {\n    150000: 1,\n    160000: 4,\n    170000: 8,\n    180000: 18,\n    190000: 33,\n    200000: 61,\n    210000: 68,\n    220000: 145,\n    230000: 249,\n    240000: 374,\n    250000: 573,\n    260000: 810,\n    270000: 1134,\n    280000: 1599,\n    290000: 2207,\n    300000: 2890,\n    310000: 3682,\n    320000: 4503,\n    330000: 5617,\n    340000: 6582,\n    350000: 7568,\n    360000: 8713,\n    370000: 9674,\n    380000: 10327,\n    390000: 11054,\n    400000: 11277,\n    410000: 11450,\n    420000: 11516,\n    430000: 11161,\n    440000: 10590,\n    450000: 9744,\n    460000: 9114,\n    470000: 8350,\n    480000: 7414,\n    490000: 6367,\n    500000: 5285,\n    510000: 4560,\n    520000: 3684,\n    530000: 2855,\n    540000: 2362,\n    550000: 1751,\n    560000: 1337,\n    570000: 992,\n    580000: 684,\n    590000: 534,\n    600000: 388,\n    610000: 251,\n    620000: 153,\n    630000: 112,\n    640000: 60,\n    650000: 35,\n    660000: 30,\n    670000: 25,\n    680000: 13,\n    690000: 6,\n    700000: 3,\n    710000: 1,\n    720000: 2,\n  },\n  KO: {\n    210000: 3,\n    220000: 1,\n    230000: 6,\n    240000: 8,\n    250000: 16,\n    260000: 29,\n    270000: 67,\n    280000: 106,\n    290000: 170,\n    300000: 243,\n    310000: 373,\n    320000: 596,\n    330000: 830,\n    340000: 1208,\n    350000: 1660,\n    360000: 2271,\n    370000: 3009,\n    380000: 3771,\n    390000: 4719,\n    400000: 5737,\n    410000: 6614,\n    420000: 7807,\n    430000: 8765,\n    440000: 9742,\n    450000: 10477,\n    460000: 11020,\n    470000: 11459,\n    480000: 11656,\n    490000: 11669,\n    500000: 11488,\n    510000: 10520,\n    520000: 10034,\n    530000: 9226,\n    540000: 8245,\n    550000: 7095,\n    560000: 6139,\n    570000: 5184,\n    580000: 4170,\n    590000: 3441,\n    600000: 2747,\n    610000: 2069,\n    620000: 1595,\n    630000: 1223,\n    640000: 886,\n    650000: 620,\n    660000: 399,\n    670000: 311,\n    680000: 201,\n    690000: 147,\n    700000: 95,\n    710000: 59,\n    720000: 29,\n    730000: 15,\n    740000: 16,\n    750000: 8,\n    760000: 3,\n    770000: 2,\n    800000: 1,\n  },\n  TD: {\n    280000: 2,\n    290000: 3,\n    300000: 4,\n    310000: 7,\n    320000: 19,\n    330000: 28,\n    340000: 59,\n    350000: 80,\n    360000: 150,\n    370000: 251,\n    380000: 369,\n    390000: 572,\n    400000: 933,\n    410000: 1220,\n    420000: 1701,\n    430000: 2407,\n    440000: 3015,\n    450000: 3767,\n    460000: 4943,\n    470000: 5926,\n    480000: 7148,\n    490000: 8184,\n    500000: 9328,\n    510000: 10186,\n    520000: 11042,\n    530000: 11995,\n    540000: 12280,\n    550000: 12195,\n    560000: 12101,\n    570000: 11431,\n    580000: 10853,\n    590000: 9836,\n    600000: 9139,\n    610000: 7653,\n    620000: 6791,\n    630000: 5585,\n    640000: 4687,\n    650000: 3706,\n    660000: 2870,\n    670000: 2255,\n    680000: 1573,\n    690000: 1172,\n    700000: 854,\n    710000: 571,\n    720000: 407,\n    730000: 284,\n    740000: 154,\n    750000: 106,\n    760000: 72,\n    770000: 38,\n    780000: 24,\n    790000: 11,\n    800000: 7,\n    810000: 4,\n    820000: 2,\n  },\n  LEWICA: {\n    340000: 1,\n    350000: 2,\n    360000: 1,\n    370000: 9,\n    380000: 8,\n    390000: 17,\n    400000: 31,\n    410000: 59,\n    420000: 117,\n    430000: 190,\n    440000: 294,\n    450000: 399,\n    460000: 658,\n    470000: 988,\n    480000: 1432,\n    490000: 1955,\n    500000: 2785,\n    510000: 3677,\n    520000: 4571,\n    530000: 5863,\n    540000: 6975,\n    550000: 8506,\n    560000: 9490,\n    570000: 10811,\n    580000: 11985,\n    590000: 12672,\n    600000: 12903,\n    610000: 12957,\n    620000: 12819,\n    630000: 12053,\n    640000: 11387,\n    650000: 10184,\n    660000: 9292,\n    670000: 7785,\n    680000: 6407,\n    690000: 5370,\n    700000: 4268,\n    710000: 3188,\n    720000: 2448,\n    730000: 1768,\n    740000: 1272,\n    750000: 856,\n    760000: 601,\n    770000: 391,\n    780000: 237,\n    790000: 137,\n    800000: 88,\n    810000: 43,\n    820000: 17,\n    830000: 19,\n    840000: 7,\n    850000: 2,\n    860000: 3,\n    870000: 2,\n  },\n  KONF: {\n    300000: 2,\n    310000: 3,\n    320000: 9,\n    330000: 8,\n    340000: 25,\n    350000: 47,\n    360000: 69,\n    370000: 108,\n    380000: 202,\n    390000: 359,\n    400000: 528,\n    410000: 831,\n    420000: 1244,\n    430000: 1766,\n    440000: 2412,\n    450000: 3266,\n    460000: 4160,\n    470000: 5426,\n    480000: 6570,\n    490000: 7675,\n    500000: 8990,\n    510000: 10200,\n    520000: 11313,\n    530000: 12047,\n    540000: 12723,\n    550000: 13089,\n    560000: 12898,\n    570000: 12380,\n    580000: 11836,\n    590000: 10726,\n    600000: 9760,\n    610000: 8427,\n    620000: 7113,\n    630000: 5769,\n    640000: 4838,\n    650000: 3690,\n    660000: 2828,\n    670000: 2087,\n    680000: 1521,\n    690000: 1057,\n    700000: 696,\n    710000: 474,\n    720000: 307,\n    730000: 222,\n    740000: 128,\n    750000: 74,\n    760000: 40,\n    770000: 23,\n    780000: 20,\n    790000: 5,\n    800000: 5,\n    810000: 4,\n  },\n};"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1JI8o","$geIQo","$ff3ca12ef39815af$var$rozkladReszt","PIS","KO","TD","LEWICA","KONF","partia","PARTIE","$ff3ca12ef39815af$export$7a22f047cf18a648","rozkladReszt","canvas","document","createElement","getElementById","appendChild","color","KOLOR_PARTII","Chart","type","data","labels","Object","keys","datasets","label","entries","map","bucket","czestosc","backgroundColor"],"version":3,"file":"wynik.1a6df5b3.js.map"}