{"mappings":"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","sources":["<anon>","obliczenia.ts","wykresy.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $geIQo = parcelRequire(\"geIQo\");\n\nvar $geIQo = parcelRequire(\"geIQo\");\n\nvar $cWeek = parcelRequire(\"cWeek\");\n\nvar $a4zWM = parcelRequire(\"a4zWM\");\n\nvar $h5k33 = parcelRequire(\"h5k33\");\nfunction $75354d900d52c58f$export$a36ee161a0d45cdf(wynikWyborow, targetElement, options = {}) {\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(targetElement).appendChild(canvas);\n    new (0, $a4zWM.default)(canvas, {\n        type: \"bar\",\n        data: {\n            labels: Object.entries(wynikWyborow).map(([sondaz, wynik])=>sondaz.toString()),\n            datasets: !options.laczOpozycje ? [\n                {\n                    label: \"Lewica\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.LEWICA),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"LEWICA\"]\n                },\n                {\n                    label: \"KO\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.KO),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"KO\"]\n                },\n                {\n                    label: \"Trzecia Droga\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.TD),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"TD\"]\n                },\n                {\n                    label: \"PiS + Konfederacja\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.NIEDEMO),\n                    backgroundColor: \"rgb(128, 0, 32)\"\n                }\n            ] : [\n                {\n                    label: \"Opozycja Demokratyczna\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.DEMO),\n                    backgroundColor: \"#E56701\"\n                },\n                {\n                    label: \"PiS + Konfederacja\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.NIEDEMO),\n                    backgroundColor: \"rgb(128, 0, 32)\"\n                }\n            ]\n        },\n        options: options?.poziomo ? {\n            indexAxis: \"y\",\n            scales: {\n                x: {\n                    stacked: true,\n                    max: options?.calySejm ? 460 : null,\n                    afterBuildTicks: options?.calySejm ? (axis)=>axis.ticks = [\n                            0,\n                            230,\n                            460\n                        ].map((v)=>({\n                                value: v\n                            })) : null\n                },\n                y: {\n                    stacked: true\n                }\n            }\n        } : {}\n    });\n}\nfunction $75354d900d52c58f$export$2c8fd381c328f0c2(mandaty) {\n    return [\n        0,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14\n    ].includes(mandaty) ? \"mandat\\xf3w\" : mandaty > 1 ? \"mandaty\" : \"mandat\";\n}\nfunction $75354d900d52c58f$export$7a22f047cf18a648(histogram, targetElement, partia, procentZSondazy, procentZWyborow, odchylenie, minimumMandatow, okreg) {\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(targetElement).appendChild(canvas);\n    const color = (0, $geIQo.KOLOR_PARTII)[partia];\n    const procenty = Object.keys(histogram).sort((a, b)=>Number.parseFloat(b) - Number.parseFloat(a));\n    const footer = (tooltipItems)=>{\n        let sum = 0;\n        tooltipItems.forEach(function(tooltipItem) {\n            sum += Number(tooltipItem.label.split(\"%\")[0]) * okreg.glosy2019;\n        });\n        return \"Głos\\xf3w: \" + Math.round(sum / 100);\n    };\n    new (0, $a4zWM.default)(canvas, {\n        type: \"bar\",\n        data: {\n            labels: procenty.map((procent)=>`${procent}%`),\n            datasets: (partia === \"KO\" || [\n                3,\n                19\n            ].includes(okreg.nr) ? [\n                {\n                    label: `${minimumMandatow[partia] + 4} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 4)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 4)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).darken(0.4).toString()\n                },\n                {\n                    label: `${minimumMandatow[partia] + 3} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 3)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 3)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).darken(0.2).toString()\n                }\n            ] : []).concat([\n                {\n                    label: `${minimumMandatow[partia] + 2} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 2)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 2)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: color\n                },\n                {\n                    label: `${minimumMandatow[partia] + 1} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 1)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 1)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).fade(0.4).toString()\n                },\n                {\n                    label: `${minimumMandatow[partia]} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia])}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia])] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).fade(0.8).toString()\n                }\n            ])\n        },\n        options: {\n            plugins: {\n                legend: {\n                    title: {\n                        display: true,\n                        text: `Faktyczny/przewidywany wynik dla ${partia}: ${procentZWyborow} / ${procentZSondazy}%, σ: ${Math.round(odchylenie * 10) / 10}`,\n                        color: \"black\",\n                        font: {\n                            size: 15\n                        }\n                    }\n                },\n                tooltip: {\n                    callbacks: {\n                        footer: footer\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    stacked: true\n                },\n                y: {\n                    display: false,\n                    stacked: true\n                }\n            }\n        }\n    });\n    const tekst = document.createElement(\"p\");\n    // tekst.setAttribute(\"style\", \"\");\n    // tekst.innerHTML = interpretacjaHistogramu(partia, String(minimumMandatow[partia]), histogram);\n    document.getElementById(targetElement).appendChild(tekst);\n} // function extractProcent(poparcie: PoparciePartii) {\n //   return Number(poparcie.procent);\n // }\n // function interpretacjaHistogramu(partia: string, oczekiwaneMandaty: string, histogram: PoparciePartii) {\n //   const procentyOczekiwanych = Object.entries(histogram).filter(\n //     ([ mandaty, czestosc ]) => mandaty === oczekiwaneMandaty\n //   );\n //   const minProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n //     extractProcent(curr) < extractProcent(acc) ? curr : acc\n //   );\n //   const maxProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n //     extractProcent(curr) > extractProcent(acc) ? curr : acc\n //   );\n //   let tekst = `Jeśli ${partia} otrzyma`;\n //   // Nie podajemy dolnego zakresu, gdy oczekujemy 0 mandatów\n //   tekst += oczekiwaneMandaty\n //     ? ` od ${Math.max(extractProcent(minProcentDoOczekiwanych), 0)}%`\n //     : \"\";\n //   tekst += ` do ${\n //     maxProcentDoOczekiwanych.procent\n //   }% głosów, to zdobędzie ${oczekiwaneMandaty} ${odmianaSlowaMandat(\n //     oczekiwaneMandaty\n //   )}.`;\n //   return tekst;\n // }\n\n\n\nvar $3i35a = parcelRequire(\"3i35a\");\n\nvar $8VULN = parcelRequire(\"8VULN\");\nconst $dbab229cceea036d$var$sondazePolDemo = {};\nObject.entries((0, $geIQo.sondaze)).forEach(([pracownia, wynik])=>{\n    $dbab229cceea036d$var$sondazePolDemo[pracownia] = (0, $3i35a.NaPolDemo)(wynik);\n});\n(0, $75354d900d52c58f$export$a36ee161a0d45cdf)({\n    średnia_100: (0, $3i35a.NaPolDemo)((0, $3i35a.NormalizujWynik)((0, $geIQo.srednia))),\n    średnia: (0, $3i35a.NaPolDemo)((0, $geIQo.srednia)),\n    ...$dbab229cceea036d$var$sondazePolDemo\n}, \"sondaze\", {\n    laczOpozycje: false\n});\nconst $dbab229cceea036d$var$wynikiWgSondazy = {};\n$dbab229cceea036d$var$wynikiWgSondazy[\"średnia\"] = (0, $3i35a.NaPolDemo)((0, $3i35a.PodzialMandatowKraj)((0, $geIQo.sredniaSondazy)));\nObject.entries((0, $geIQo.sondaze)).forEach(([sondaz, wynik])=>$dbab229cceea036d$var$wynikiWgSondazy[sondaz] = (0, $3i35a.NaPolDemo)((0, $3i35a.PodzialMandatowKraj)(wynik)));\n(0, $75354d900d52c58f$export$a36ee161a0d45cdf)($dbab229cceea036d$var$wynikiWgSondazy, \"mandatyKraj\", {\n    poziomo: true,\n    laczOpozycje: false,\n    calySejm: true\n});\nconst $dbab229cceea036d$var$podzialWOkregach = {};\nconst $dbab229cceea036d$var$podzialWOkregachDemo = {};\nconst $dbab229cceea036d$var$symulacje = document.createElement(\"p\");\n$dbab229cceea036d$var$symulacje.setAttribute(\"class\", \"symulacje\");\nlet $dbab229cceea036d$var$partieString = \"\";\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$partieString += `<td>${partia}</td>`;\nlet $dbab229cceea036d$var$tabelka = \"<table>\";\n$dbab229cceea036d$var$tabelka += `<tr><th colspan=\"3\">Okręg wyborczy</th><th colspan=\"7\">Prognoza ilości głosów (na komitety powyżej progu)</th><th colspan=\"5\">Progonoza podziału mandatów</th><th colspan=\"5\">Głosy powyżej ceny mandatu</th><th colspan=\"5\">Głosy brakujące do następnego mandatu</th></tr>`;\n$dbab229cceea036d$var$tabelka += `<tr><th>nr</th><th>Nazwa</th><th>Mandaty</th><th>Suma</th>${$dbab229cceea036d$var$partieString}<th>Cena mandatu</th>${$dbab229cceea036d$var$partieString}${$dbab229cceea036d$var$partieString}${$dbab229cceea036d$var$partieString}`;\n$dbab229cceea036d$var$tabelka += \"</tr>\";\nconst $dbab229cceea036d$var$sumaGlosow = {\n    KO: 0,\n    PIS: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0\n};\nconst $dbab229cceea036d$var$sumaMandatow = {\n    KO: 0,\n    PIS: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0\n};\nconst $dbab229cceea036d$var$altSumaMandatow = {\n    KO: 0,\n    PIS: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0\n};\nconst $dbab229cceea036d$var$sumaReszt = {\n    KO: 0,\n    PIS: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0\n};\nconst $dbab229cceea036d$var$altSumaReszt = {\n    KO: 0,\n    PIS: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0\n};\n(0, $geIQo.okregi).forEach((okreg)=>{\n    const wynikWOkregu = (0, $3i35a.NormalizujWynik)((0, $3i35a.PoparcieWOkregu)((0, $geIQo.sredniaSondazy), okreg).wynikWOkregu);\n    const podzialMandatow = (0, $3i35a.PodzialMandatowWOkregu)(wynikWOkregu, okreg);\n    const alternatywnyWynik = {\n        PIS: wynikWOkregu.PIS,\n        KONF: wynikWOkregu.KONF\n    };\n    const PARTIE_OPOZYCJI = [\n        \"KO\",\n        \"TD\",\n        \"LEWICA\"\n    ];\n    const PRZESUNIETE_GLOSY_PROCENT = 0.3;\n    const rekomendacje = (0, $8VULN.komentarze)[okreg.miasto].rekomendacjePartii || [];\n    for (const partia of rekomendacje)// dodajemy 0.1% lub 0.05% do wyniku odpowiednio jednej lub dwoch rekomendowanych partii\n    alternatywnyWynik[partia] = wynikWOkregu[partia] + PRZESUNIETE_GLOSY_PROCENT / rekomendacje.length;\n    if (rekomendacje.length) {\n        for (const partia of PARTIE_OPOZYCJI)// odejmujemy 0.1% lub 0.05% od wyniku odpowiednio innych rekomendowanych partii\n        if (!rekomendacje.includes(partia)) alternatywnyWynik[partia] = wynikWOkregu[partia] - PRZESUNIETE_GLOSY_PROCENT / (PARTIE_OPOZYCJI.length - rekomendacje.length);\n    } else for (const partia of [\n        \"KO\",\n        \"TD\",\n        \"LEWICA\"\n    ])alternatywnyWynik[partia] = wynikWOkregu[partia];\n    const alternatywnyPodzialMandatow = (0, $3i35a.PodzialMandatowWOkregu)(alternatywnyWynik, okreg);\n    $dbab229cceea036d$var$podzialWOkregach[okreg.miasto] = (0, $3i35a.NaPolDemo)(podzialMandatow);\n    $dbab229cceea036d$var$podzialWOkregachDemo[okreg.miasto] = (0, $3i35a.NaDemo)(podzialMandatow);\n    // Tabelka\n    const glosy = (0, $geIQo.glosy2019)[okreg.nr - 1].reduce((accumulator, currentValue)=>{\n        return accumulator + currentValue;\n    }, 0);\n    const glosyFn = (procent)=>Math.round(glosy * procent / 100);\n    const resztaRawFn = (procent)=>Math.round(glosy * procent / 100 % podzialMandatow.cenaMandatu);\n    // Mamy błędy zaokrąglenia do około 50 głosów, dlatego odejmujemy 4 i robimy z tego niezerową liczbę.\n    const resztaFn = (procent)=>Math.max(0, (resztaRawFn(procent) + 8) % podzialMandatow.cenaMandatu - 10);\n    const brakujacaFn = (procent)=>resztaFn(procent) ? podzialMandatow.cenaMandatu - resztaFn(procent) : 0;\n    $dbab229cceea036d$var$tabelka += `<tr><td>${okreg.nr}</td><td>${okreg.miasto}</td><td>${okreg.mandaty}</td><td>${glosy}</td>`;\n    for (const partia of (0, $geIQo.PARTIE)){\n        const glosy = glosyFn(wynikWOkregu[partia]);\n        $dbab229cceea036d$var$sumaGlosow[partia] += glosy;\n        $dbab229cceea036d$var$tabelka += `<td>${glosy}</td>`;\n    }\n    $dbab229cceea036d$var$tabelka += `<td>${podzialMandatow.cenaMandatu}</td>`;\n    const altResztaRawFn = (procent)=>Math.round(glosy * procent / 100 % alternatywnyPodzialMandatow.cenaMandatu);\n    // Mamy błędy zaokrąglenia do około 50 głosów, dlatego odejmujemy 4 i robimy z tego niezerową liczbę.\n    const altResztaFn = (procent)=>Math.max(0, (altResztaRawFn(procent) + 8) % alternatywnyPodzialMandatow.cenaMandatu - 10);\n    for (const partia of (0, $geIQo.PARTIE)){\n        $dbab229cceea036d$var$sumaMandatow[partia] += podzialMandatow[partia] || 0;\n        $dbab229cceea036d$var$tabelka += `<td>${podzialMandatow[partia] || 0}</td>`;\n    }\n    for (const partia of (0, $geIQo.PARTIE)){\n        const reszta = resztaFn(wynikWOkregu[partia]);\n        $dbab229cceea036d$var$sumaReszt[partia] += reszta;\n        $dbab229cceea036d$var$tabelka += `<td>${reszta}</td>`;\n    }\n    for (const partia of (0, $geIQo.PARTIE)){\n        const brakujace = brakujacaFn(wynikWOkregu[partia]);\n        $dbab229cceea036d$var$tabelka += `<td>${brakujace}</td>`;\n    }\n    $dbab229cceea036d$var$tabelka += `</tr>`;\n    // Wiersz alternatywny\n    $dbab229cceea036d$var$tabelka += `<tr><td colspan=\"4\">Podział przy przesunięciu ${PRZESUNIETE_GLOSY_PROCENT}% głosów:</td>`;\n    for (const partia of (0, $geIQo.PARTIE)){\n        const glosy = glosyFn(alternatywnyWynik[partia]);\n        $dbab229cceea036d$var$tabelka += `<td>${glosy}</td>`;\n    }\n    $dbab229cceea036d$var$tabelka += `<td>${alternatywnyPodzialMandatow.cenaMandatu}</td>`;\n    for (const partia of (0, $geIQo.PARTIE)){\n        $dbab229cceea036d$var$altSumaMandatow[partia] += alternatywnyPodzialMandatow[partia] || 0;\n        $dbab229cceea036d$var$tabelka += `<td>${alternatywnyPodzialMandatow[partia] || 0}</td>`;\n    }\n    for (const partia of (0, $geIQo.PARTIE)){\n        const reszta = altResztaFn(alternatywnyWynik[partia]);\n        $dbab229cceea036d$var$altSumaReszt[partia] += altResztaFn(alternatywnyWynik[partia]);\n        $dbab229cceea036d$var$tabelka += `<td>${reszta}</td>`;\n    }\n    $dbab229cceea036d$var$tabelka += `</tr>`;\n});\n$dbab229cceea036d$var$tabelka += `<tr><td colspan=\"3\">Suma</td>`;\n$dbab229cceea036d$var$tabelka += `<td>${Object.values($dbab229cceea036d$var$sumaGlosow).reduce((acc, cur)=>{\n    return acc += cur;\n}, 0)}</td>`;\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$tabelka += `<td>${$dbab229cceea036d$var$sumaGlosow[partia]}</td>`;\n$dbab229cceea036d$var$tabelka += `<td>-</td>`;\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$tabelka += `<td>${$dbab229cceea036d$var$sumaMandatow[partia]}</td>`;\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$tabelka += `<td>${$dbab229cceea036d$var$sumaReszt[partia]}</td>`;\n$dbab229cceea036d$var$tabelka += `</tr><tr>`;\n$dbab229cceea036d$var$tabelka += `<td colspan=\"10\">Alternatywny wynik wg. rekomendacji</td>`;\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$tabelka += `<td>${$dbab229cceea036d$var$altSumaMandatow[partia]}</td>`;\nfor (const partia of (0, $geIQo.PARTIE))$dbab229cceea036d$var$tabelka += `<td>${$dbab229cceea036d$var$altSumaReszt[partia]}</td>`;\n$dbab229cceea036d$var$tabelka += `</tr>`;\n$dbab229cceea036d$var$symulacje.innerHTML = $dbab229cceea036d$var$tabelka + \"</table>\";\ndocument.getElementById(\"tabelaObliczenia\").appendChild($dbab229cceea036d$var$symulacje);\n(0, $75354d900d52c58f$export$a36ee161a0d45cdf)($dbab229cceea036d$var$podzialWOkregach, \"mandatyWOkregach\", {\n    poziomo: true,\n    laczOpozycje: false\n});\n(0, $75354d900d52c58f$export$a36ee161a0d45cdf)($dbab229cceea036d$var$podzialWOkregachDemo, \"mandatyWOkregachDemo\", {\n    poziomo: true,\n    laczOpozycje: true\n});\n\n\n//# sourceMappingURL=obliczenia.4b4545ea.js.map\n","import {\n  PARTIE,\n  glosy2019,\n  okregi,\n  sondaze,\n  srednia,\n  sredniaSondazy,\n} from \"./dane\";\nimport {\n  Wynik,\n  Sondaze,\n} from \"./typy\";\nimport {\n  rysujWynikWyborow,\n} from \"./wykresy\";\nimport {\n  NaDemo,\n  NaPolDemo,\n  NormalizujWynik,\n  PodzialMandatowKraj,\n  PodzialMandatowWOkregu,\n  PoparcieWOkregu,\n} from \"./ordynacja\";\nimport { komentarze } from \"./komentarz\";\n\nconst sondazePolDemo = {};\nObject.entries(sondaze).forEach(([pracownia, wynik]) => {\n  sondazePolDemo[pracownia] = NaPolDemo(wynik as Wynik);\n});\nrysujWynikWyborow(\n  {\n    średnia_100: NaPolDemo(NormalizujWynik(srednia)),\n    średnia: NaPolDemo(srednia),\n    ...sondazePolDemo,\n  },\n  \"sondaze\",\n  { laczOpozycje: false }\n);\n\nconst wynikiWgSondazy: Sondaze = {};\nwynikiWgSondazy[\"średnia\"] = NaPolDemo(PodzialMandatowKraj(sredniaSondazy));\nObject.entries(sondaze).forEach(\n  ([sondaz, wynik]) =>\n    (wynikiWgSondazy[sondaz] = NaPolDemo(PodzialMandatowKraj(wynik as Wynik)))\n);\n\n\nrysujWynikWyborow(wynikiWgSondazy, \"mandatyKraj\", {\n  poziomo: true,\n  laczOpozycje: false, \n  calySejm: true,\n});\n\nconst podzialWOkregach: Sondaze = {};\nconst podzialWOkregachDemo: Sondaze = {};\nconst symulacje = document.createElement(\"p\");\nsymulacje.setAttribute(\"class\", \"symulacje\");\nlet partieString = '';\nfor (const partia of PARTIE) {\n  partieString += `<td>${partia}</td>`;\n}\nlet tabelka = \"<table>\";\ntabelka += `<tr><th colspan=\"3\">Okręg wyborczy</th><th colspan=\"7\">Prognoza ilości głosów (na komitety powyżej progu)</th><th colspan=\"5\">Progonoza podziału mandatów</th><th colspan=\"5\">Głosy powyżej ceny mandatu</th><th colspan=\"5\">Głosy brakujące do następnego mandatu</th></tr>`;\ntabelka += `<tr><th>nr</th><th>Nazwa</th><th>Mandaty</th><th>Suma</th>${partieString}<th>Cena mandatu</th>${partieString}${partieString}${partieString}`;\n\ntabelka +='</tr>';\nconst sumaGlosow: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\nconst sumaMandatow: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\nconst altSumaMandatow: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\nconst sumaReszt: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\nconst altSumaReszt: Wynik = { KO: 0, PIS: 0, LEWICA: 0, TD: 0, KONF: 0 };\nokregi.forEach((okreg) => {\n  const wynikWOkregu = NormalizujWynik(PoparcieWOkregu(sredniaSondazy, okreg).wynikWOkregu);\n  const podzialMandatow = PodzialMandatowWOkregu(\n      wynikWOkregu,\n      okreg\n  );\n  const alternatywnyWynik = {\n    PIS: wynikWOkregu.PIS,\n    KONF: wynikWOkregu.KONF,\n  };\n  const PARTIE_OPOZYCJI = [\"KO\", \"TD\", \"LEWICA\"];\n  const PRZESUNIETE_GLOSY_PROCENT = 0.3;\n  const rekomendacje = komentarze[okreg.miasto].rekomendacjePartii || [];\n  for (const partia of rekomendacje) {\n    // dodajemy 0.1% lub 0.05% do wyniku odpowiednio jednej lub dwoch rekomendowanych partii\n    alternatywnyWynik[partia] =\n      wynikWOkregu[partia] +\n      PRZESUNIETE_GLOSY_PROCENT /\n        rekomendacje.length;\n  }\n  if (rekomendacje.length) {\n    for (const partia of PARTIE_OPOZYCJI) {\n      // odejmujemy 0.1% lub 0.05% od wyniku odpowiednio innych rekomendowanych partii\n      if (!rekomendacje.includes(partia)) {\n        alternatywnyWynik[partia] =\n          wynikWOkregu[partia] -\n          PRZESUNIETE_GLOSY_PROCENT /\n            (PARTIE_OPOZYCJI.length -\n              rekomendacje.length);\n      }\n    }\n  } else {\n    for (const partia of [\"KO\", \"TD\", \"LEWICA\"]) {\n      alternatywnyWynik[partia] = wynikWOkregu[partia];\n    }\n  }\n\n  const alternatywnyPodzialMandatow = PodzialMandatowWOkregu(\n      alternatywnyWynik,\n      okreg\n  );\n  podzialWOkregach[okreg.miasto] = NaPolDemo(podzialMandatow);\n  podzialWOkregachDemo[okreg.miasto] = NaDemo(podzialMandatow);\n\n  // Tabelka\n  const glosy = glosy2019[okreg.nr - 1].reduce((accumulator: number, currentValue: number): number => {\n    return accumulator + currentValue;\n  }, 0);\n  const glosyFn = (procent) => Math.round(glosy * procent / 100);\n  const resztaRawFn = (procent) =>\n    Math.round(((glosy * procent) / 100) % podzialMandatow.cenaMandatu);\n  // Mamy błędy zaokrąglenia do około 50 głosów, dlatego odejmujemy 4 i robimy z tego niezerową liczbę.\n  const resztaFn = (procent) =>\n    Math.max(0, ((resztaRawFn(procent) + 8) % podzialMandatow.cenaMandatu) - 10);\n  const brakujacaFn = (procent) => resztaFn(procent) ? podzialMandatow.cenaMandatu - resztaFn(procent) : 0;\n  tabelka += `<tr><td>${okreg.nr}</td><td>${okreg.miasto}</td><td>${okreg.mandaty}</td><td>${glosy}</td>`;\n  for (const partia of PARTIE) {\n    const glosy = glosyFn(wynikWOkregu[partia]);\n    sumaGlosow[partia] += glosy;\n    tabelka += `<td>${glosy}</td>`;\n  }\n\n  tabelka += `<td>${podzialMandatow.cenaMandatu}</td>`;\n\n  const altResztaRawFn = (procent) =>\n    Math.round(((glosy * procent) / 100) % alternatywnyPodzialMandatow.cenaMandatu);\n  // Mamy błędy zaokrąglenia do około 50 głosów, dlatego odejmujemy 4 i robimy z tego niezerową liczbę.\n  const altResztaFn = (procent) =>\n    Math.max(0, ((altResztaRawFn(procent) + 8) % alternatywnyPodzialMandatow.cenaMandatu) - 10);\n  \n  for (const partia of PARTIE) {\n    sumaMandatow[partia] += podzialMandatow[partia] || 0;\n    tabelka += `<td>${podzialMandatow[partia] || 0}</td>`;\n  }\n  \n  for (const partia of PARTIE) {\n    const reszta = resztaFn(wynikWOkregu[partia]);\n    sumaReszt[partia] += reszta;\n    tabelka += `<td>${reszta}</td>`;\n  }\n\n  for (const partia of PARTIE) {\n    const brakujace = brakujacaFn(wynikWOkregu[partia]);\n    tabelka += `<td>${brakujace}</td>`;\n  }\n\n  tabelka += `</tr>`;\n  \n  // Wiersz alternatywny\n  tabelka += `<tr><td colspan=\"4\">Podział przy przesunięciu ${PRZESUNIETE_GLOSY_PROCENT}% głosów:</td>`;\n  for (const partia of PARTIE) {\n    const glosy = glosyFn(alternatywnyWynik[partia]);\n    tabelka += `<td>${glosy}</td>`;\n  }\n  tabelka += `<td>${alternatywnyPodzialMandatow.cenaMandatu}</td>`;\n  for (const partia of PARTIE) {\n    altSumaMandatow[partia] += alternatywnyPodzialMandatow[partia] || 0;\n    tabelka += `<td>${alternatywnyPodzialMandatow[partia] || 0}</td>`;\n  }\n  for (const partia of PARTIE) {\n    const reszta = altResztaFn(alternatywnyWynik[partia]);\n    altSumaReszt[partia] += altResztaFn(alternatywnyWynik[partia]);\n    tabelka += `<td>${reszta}</td>`;\n  }\n  tabelka += `</tr>`;\n});\n\n\ntabelka += `<tr><td colspan=\"3\">Suma</td>`;\ntabelka += `<td>${Object.values(sumaGlosow).reduce((acc, cur) => { return acc += cur}, 0)}</td>`;\nfor (const partia of PARTIE) {\n  tabelka += `<td>${sumaGlosow[partia]}</td>`;\n}\ntabelka += `<td>-</td>`;\nfor (const partia of PARTIE) {\n  tabelka += `<td>${sumaMandatow[partia]}</td>`;\n}\nfor (const partia of PARTIE) {\n  tabelka += `<td>${sumaReszt[partia]}</td>`;\n}\ntabelka += `</tr><tr>`;\n\ntabelka += `<td colspan=\"10\">Alternatywny wynik wg. rekomendacji</td>`;\nfor (const partia of PARTIE) {\n  tabelka += `<td>${altSumaMandatow[partia]}</td>`;\n}\nfor (const partia of PARTIE) {\n  tabelka += `<td>${altSumaReszt[partia]}</td>`;\n}\ntabelka += `</tr>`;\n\nsymulacje.innerHTML = tabelka + \"</table>\";\ndocument.getElementById(\"tabelaObliczenia\").appendChild(symulacje);\n\n\nrysujWynikWyborow(podzialWOkregach, \"mandatyWOkregach\", {\n    poziomo: true,\n    laczOpozycje: false,\n});\nrysujWynikWyborow(podzialWOkregachDemo, \"mandatyWOkregachDemo\", {\n    poziomo: true,\n    laczOpozycje: true,\n});\n","import { KOLOR_PARTII } from \"./dane\";\nimport { ILE_SYMULACJI, Okreg, PoparciePartii, Sondaze, Wynik } from \"./typy\";\nimport Chart, { ChartItem } from \"chart.js/auto\";\nimport Color from 'color';\n\nexport function rysujWynikWyborow(wynikWyborow: Sondaze, targetElement: string, options: { poziomo?: boolean, laczOpozycje?: boolean, calySejm?: boolean } = {}) {\n  const canvas = document.createElement(\"canvas\");\n  document.getElementById(targetElement).appendChild(canvas);\n    new Chart(canvas as ChartItem, {\n      type: \"bar\",\n      data: {\n        labels: Object.entries(wynikWyborow).map(([sondaz, wynik]) =>\n          sondaz.toString()\n        ),\n        datasets: !options.laczOpozycje\n          ? [\n              {\n                label: \"Lewica\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.LEWICA),\n                backgroundColor: KOLOR_PARTII[\"LEWICA\"],\n              },\n              {\n                label: \"KO\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.KO),\n                backgroundColor: KOLOR_PARTII[\"KO\"],\n              },\n              {\n                label: \"Trzecia Droga\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.TD),\n                backgroundColor: KOLOR_PARTII[\"TD\"],\n              },\n              {\n                label: \"PiS + Konfederacja\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.NIEDEMO),\n                backgroundColor: \"rgb(128, 0, 32)\",\n              },\n            ]\n          : [\n              {\n                label: \"Opozycja Demokratyczna\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.DEMO),\n                backgroundColor: \"#E56701\",\n              },\n              {\n                label: \"PiS + Konfederacja\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.NIEDEMO),\n                backgroundColor: \"rgb(128, 0, 32)\",\n              },\n            ],\n      },\n      options: options?.poziomo\n        ? {\n            indexAxis: \"y\",\n            scales: {\n              x: {\n                stacked: true,\n                max: options?.calySejm ? 460 : null,\n                afterBuildTicks: options?.calySejm\n                  ? (axis) =>\n                      (axis.ticks = [0, 230, 460].map((v) => ({ value: v })))\n                  : null,\n              },\n              y: {\n                stacked: true,\n              },\n            },\n          }\n        : {},\n    });\n}\n\nexport function odmianaSlowaMandat(mandaty: number) {\n  return [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].includes(mandaty)\n              ? \"mandatów\"\n              : mandaty > 1\n              ? \"mandaty\"\n              : \"mandat\"\n}\n\nexport function rysujHistogram(\n  histogram: PoparciePartii,\n  targetElement: string,\n  partia: string,\n  procentZSondazy: string,\n  procentZWyborow: string,\n  odchylenie: number,\n  minimumMandatow: Wynik,\n  okreg: Okreg\n) {\n  const canvas = document.createElement(\"canvas\");\n  document.getElementById(targetElement).appendChild(canvas);\n  const color = KOLOR_PARTII[partia];\n  const procenty = Object.keys(histogram).sort(\n    (a, b) => Number.parseFloat(b) - Number.parseFloat(a)\n  );\n\n  const footer = (tooltipItems) => {\n    let sum = 0;\n\n    tooltipItems.forEach(function (tooltipItem) {\n      sum += Number(tooltipItem.label.split(\"%\")[0]) * okreg.glosy2019;\n    });\n    return \"Głosów: \" + Math.round(sum / 100);\n  };\n\n  new Chart(canvas as ChartItem, {\n    type: \"bar\",\n    data: {\n      labels: procenty.map((procent) => `${procent}%`),\n      datasets: (partia === \"KO\" || [3, 19].includes(okreg.nr)\n        ? [\n            {\n              label: `${minimumMandatow[partia] + 4} ${odmianaSlowaMandat(\n                minimumMandatow[partia] + 4\n              )}`,\n              data: procenty.map(\n                (procent) =>\n                  ((histogram[procent][String(minimumMandatow[partia] + 4)] ||\n                    0) /\n                    ILE_SYMULACJI) *\n                  100\n              ),\n              backgroundColor: Color(color).darken(0.4).toString(),\n            },\n            {\n              label: `${minimumMandatow[partia] + 3} ${odmianaSlowaMandat(\n                minimumMandatow[partia] + 3\n              )}`,\n              data: procenty.map(\n                (procent) =>\n                  ((histogram[procent][String(minimumMandatow[partia] + 3)] ||\n                    0) /\n                    ILE_SYMULACJI) *\n                  100\n              ),\n              backgroundColor: Color(color).darken(0.2).toString(),\n            },\n          ]\n        : []\n      ).concat([\n        {\n          label: `${minimumMandatow[partia] + 2} ${odmianaSlowaMandat(\n            minimumMandatow[partia] + 2\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia] + 2)] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: color,\n        },\n        {\n          label: `${minimumMandatow[partia] + 1} ${odmianaSlowaMandat(\n            minimumMandatow[partia] + 1\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia] + 1)] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: Color(color).fade(0.4).toString(),\n        },\n        {\n          label: `${minimumMandatow[partia]} ${odmianaSlowaMandat(\n            minimumMandatow[partia]\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia])] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: Color(color).fade(0.8).toString(),\n        },\n      ]),\n    },\n    options: {\n      plugins: {\n        legend: {\n          title: {\n            display: true,\n            text: `Faktyczny/przewidywany wynik dla ${partia}: ${procentZWyborow} / ${procentZSondazy}%, σ: ${\n              Math.round(odchylenie * 10) / 10\n            }`,\n            color: \"black\",\n            font: {\n              size: 15,\n            },\n          },\n        },\n        tooltip: {\n          callbacks: {\n            footer: footer,\n          },\n        },\n      },\n      scales: {\n        x: {\n          stacked: true,\n        },\n        y: {\n          display: false,\n          stacked: true,\n        },\n      },\n    },\n  });\n  const tekst = document.createElement(\"p\");\n  // tekst.setAttribute(\"style\", \"\");\n  // tekst.innerHTML = interpretacjaHistogramu(partia, String(minimumMandatow[partia]), histogram);\n  document.getElementById(targetElement).appendChild(tekst);\n}\n\n// function extractProcent(poparcie: PoparciePartii) {\n//   return Number(poparcie.procent);\n// }\n\n// function interpretacjaHistogramu(partia: string, oczekiwaneMandaty: string, histogram: PoparciePartii) {\n//   const procentyOczekiwanych = Object.entries(histogram).filter(\n//     ([ mandaty, czestosc ]) => mandaty === oczekiwaneMandaty\n//   );\n//   const minProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n//     extractProcent(curr) < extractProcent(acc) ? curr : acc\n//   );\n//   const maxProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n//     extractProcent(curr) > extractProcent(acc) ? curr : acc\n//   );\n\n//   let tekst = `Jeśli ${partia} otrzyma`;\n//   // Nie podajemy dolnego zakresu, gdy oczekujemy 0 mandatów\n//   tekst += oczekiwaneMandaty\n//     ? ` od ${Math.max(extractProcent(minProcentDoOczekiwanych), 0)}%`\n//     : \"\";\n//   tekst += ` do ${\n//     maxProcentDoOczekiwanych.procent\n//   }% głosów, to zdobędzie ${oczekiwaneMandaty} ${odmianaSlowaMandat(\n//     oczekiwaneMandaty\n//   )}.`;\n//   return tekst;\n// }"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$geIQo","$a4zWM","$75354d900d52c58f$export$a36ee161a0d45cdf","wynikWyborow","targetElement","options","canvas","document","createElement","getElementById","appendChild","default","type","data","labels","Object","entries","map","sondaz","wynik","toString","datasets","laczOpozycje","label","values","DEMO","backgroundColor","NIEDEMO","LEWICA","KOLOR_PARTII","KO","TD","poziomo","indexAxis","scales","x","stacked","max","calySejm","afterBuildTicks","axis","ticks","v","value","y","$3i35a","$8VULN","$dbab229cceea036d$var$sondazePolDemo","sondaze","forEach","pracownia","NaPolDemo","średnia_100","NormalizujWynik","srednia","średnia","$dbab229cceea036d$var$wynikiWgSondazy","PodzialMandatowKraj","sredniaSondazy","$dbab229cceea036d$var$podzialWOkregach","$dbab229cceea036d$var$podzialWOkregachDemo","$dbab229cceea036d$var$symulacje","setAttribute","$dbab229cceea036d$var$partieString","partia","PARTIE","$dbab229cceea036d$var$tabelka","$dbab229cceea036d$var$sumaGlosow","PIS","KONF","$dbab229cceea036d$var$sumaMandatow","$dbab229cceea036d$var$altSumaMandatow","$dbab229cceea036d$var$sumaReszt","$dbab229cceea036d$var$altSumaReszt","okregi","okreg","wynikWOkregu","PoparcieWOkregu","podzialMandatow","PodzialMandatowWOkregu","alternatywnyWynik","PARTIE_OPOZYCJI","rekomendacje","komentarze","miasto","rekomendacjePartii","PRZESUNIETE_GLOSY_PROCENT","length","includes","alternatywnyPodzialMandatow","NaDemo","glosy","glosy2019","nr","reduce","accumulator","currentValue","glosyFn","procent","Math","round","resztaRawFn","cenaMandatu","resztaFn","brakujacaFn","mandaty","altResztaRawFn","altResztaFn","reszta","brakujace","acc","cur","innerHTML"],"version":3,"file":"obliczenia.4b4545ea.js.map"}