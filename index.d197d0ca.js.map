{"mappings":"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,CACH,QAAW,CACT,cACA,UACA,YACA,UACA,cACA,UACA,aACA,WACA,aACD,CACD,OAAU,CAAC,UAAU,AACvB,EACA,EAAK,CACH,QAAW,CACT,WACA,gBACA,aACA,YACA,aACA,UACA,YACA,UACD,CACD,OAAU,CAAC,YAAY,AACzB,EACA,EAAK,CACH,QAAW,CACT,iBACA,YACA,aACA,sBACA,cACA,YACA,eACA,WACA,WACA,YACA,aACD,CACD,OAAU,CAAC,YAAa,QAAS,YAAY,AAC/C,EACA,EAAK,CACH,QAAW,CACT,WACA,YACA,cACA,WACA,YACA,WACA,UACA,WACA,QACA,YACD,CACD,OAAU,CAAC,SAAS,AACtB,EACA,EAAK,CACH,QAAW,CACT,UACA,cACA,WACA,gBACA,gBACA,aACA,YACA,cACA,YACA,WACD,CACD,OAAU,CAAC,iBAAkB,QAAS,SAAS,AACjD,EACA,EAAK,CACH,YAAe,UACjB,EACA,EAAK,CACH,QAAW,CAAC,aAAc,qBAAkB,CAC5C,OAAU,CAAC,UAAO,AACpB,EACA,GAAM,CACJ,QAAW,CACT,eACA,aACA,cACA,iBACA,SACA,gBACA,cACD,CACD,OAAU,CAAC,0BAAwB,eAAe,AACpD,EACA,GAAM,CACJ,QAAW,CACT,YACA,QACA,WACA,UACA,aACA,cACA,aACA,YACA,YACA,eACA,gBACA,WACD,AACH,EACA,GAAM,CACJ,QAAW,CACT,cACA,aACA,cACA,QACA,YACD,AACH,EACA,GAAM,CACJ,QAAW,CAAC,YAAa,aAAc,UAAU,CACjD,OAAU,CAAC,YAAS,AACtB,EACA,GAAM,CACJ,QAAW,CACT,WACA,aACA,cACA,aACA,aACD,CACD,OAAU,CAAC,YAAY,AACzB,EACA,GAAM,CACJ,QAAW,CACT,YACA,UACA,YACA,cACA,YACA,WACD,CACD,OAAU,CAAC,YAAS,AACtB,EACA,GAAM,CACJ,QAAW,CACT,eACA,cACA,UACA,SACA,UACA,aACA,YACA,eACA,aACA,cACD,CACD,OAAU,CAAC,QAAQ,AACrB,EACA,GAAM,CACJ,QAAW,CACT,eACA,cACA,aACA,SACA,YACA,WACA,eACA,YACD,CACD,OAAU,CAAC,QAAQ,AACrB,EACA,GAAM,CACJ,QAAW,CACT,cACA,UACA,WACA,SACA,aACA,YACA,WACA,YACA,aACA,YACA,aACD,CACD,OAAU,CAAC,YAAa,UAAU,AACpC,EACA,GAAM,CACJ,OAAU,CAAC,WAAW,AACxB,EACA,GAAM,CACJ,QAAW,CACT,YACA,cACA,cACA,UACA,eACA,cACA,sBACA,aACD,AACH,EACA,GAAM,CACJ,YAAe,UACjB,EACA,GAAM,CACJ,QAAW,CACT,eACA,aACA,cACA,YACA,cACA,QACA,cACA,YACA,aACA,UACA,SACA,WACD,AACH,EACA,GAAM,CACJ,QAAW,CACT,UACA,eACA,WACA,WACA,WACA,WACA,yBACA,aACA,gBACA,cACA,eACA,aACA,aACD,AACH,EACA,GAAM,CACJ,YAAe,WACjB,EACA,GAAM,CACJ,QAAW,CACT,UACA,aACA,YACA,cACA,eACA,WACA,WACD,CACD,OAAU,CAAC,SAAU,QAAQ,AAC/B,EACA,GAAM,CACJ,QAAW,CACT,WACA,YACA,cACA,WACA,aACA,WACA,QACA,UACA,cACD,CACD,OAAU,CAAC,SAAU,SAAS,AAChC,EACA,GAAM,CACJ,QAAW,CAAC,UAAW,aAAc,aAAc,WAAW,CAC9D,OAAU,CAAC,gBAAgB,AAC7B,EACA,GAAM,CACJ,QAAW,CAAC,gBAAiB,WAAY,cAAe,aAAa,CACrE,OAAU,CAAC,cAAc,AAC3B,EACA,GAAM,CACJ,QAAW,CAAC,WAAY,iBAAc,CACtC,OAAU,CAAC,QAAS,UAAW,SAAS,AAC1C,EACA,GAAM,CACJ,QAAW,CAAC,aAAc,aAAc,WAAY,eAAe,CACnE,OAAU,CAAC,sBAAoB,SAAU,OAAO,AAClD,EACA,GAAM,CACJ,QAAW,CAAC,sBAAsB,CAClC,OAAU,CACR,aACA,WACA,YACA,kBACA,cACA,uBACA,iBACA,QACD,AACH,EACA,GAAM,CACJ,QAAW,CAAC,YAAa,gBAAgB,CACzC,OAAU,CAAC,sBAAoB,WAAY,YAAY,AACzD,EACA,GAAM,CACJ,YAAe,gBACjB,EACA,GAAM,CACJ,QAAW,CACT,cACA,aACA,cACA,WACA,UACA,aACA,cACA,eACD,CACD,OAAU,CAAC,SAAS,AACtB,EACA,GAAM,CACJ,QAAW,CACT,QACA,UACA,YACA,aACA,YACA,WACA,SACA,aACA,QACA,eACA,cACD,CACD,OAAU,CAAC,UAAU,AACvB,EACA,GAAM,CACJ,QAAW,CACT,YACA,aACA,UACA,WACA,aACA,eACA,cACA,YACA,gBACA,aACA,UACD,CACD,OAAU,CAAC,SAAU,SAAS,AAChC,EACA,GAAM,CACJ,QAAW,CACT,eACA,SACA,WACA,WACA,UACA,UACA,UACA,aACD,CACD,OAAU,CAAC,QAAQ,AACrB,EACA,GAAM,CACJ,QAAW,CACT,aACA,0BACA,YACA,gBACA,cACA,YACA,SACA,cACA,cACA,cACA,YACD,AACH,EACA,GAAM,CACJ,QAAW,CAAC,YAAa,SAAS,AACpC,EACA,GAAM,CACJ,QAAW,CACT,eACA,eACA,UACA,cACA,cACA,aACA,eACA,aACA,UACD,CACD,OAAU,CAAC,WAAW,AACxB,EACA,GAAM,CACJ,QAAW,CACT,cACA,WACA,YACA,YACA,UACA,cACA,UACA,WACA,cACD,CACD,OAAU,CAAC,WAAY,cAAc,AACvC,CACF,EChba,EAAc,CACzB,CACE,GAAI,MACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,MACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,OACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,MACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,MACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,OACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,MACN,EACA,CACE,GAAI,MACJ,OAAQ,MACR,IAAK,OACL,KAAM,MACN,GAAI,KACN,EACA,CACE,GAAI,MACJ,OAAQ,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","sources":["<anon>","votes.ts","wykresy.ts","podzial_terytorialny.ts","wyniki_2023.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $geIQo = parcelRequire(\"geIQo\");\n\nvar $3i35a = parcelRequire(\"3i35a\");\n\nvar $geIQo = parcelRequire(\"geIQo\");\n\nvar $cWeek = parcelRequire(\"cWeek\");\n\nvar $a4zWM = parcelRequire(\"a4zWM\");\n\nvar $h5k33 = parcelRequire(\"h5k33\");\nfunction $75354d900d52c58f$export$a36ee161a0d45cdf(wynikWyborow, targetElement, options = {}) {\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(targetElement).appendChild(canvas);\n    new (0, $a4zWM.default)(canvas, {\n        type: \"bar\",\n        data: {\n            labels: Object.entries(wynikWyborow).map(([sondaz, wynik])=>sondaz.toString()),\n            datasets: !options.laczOpozycje ? [\n                {\n                    label: \"Lewica\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.LEWICA),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"LEWICA\"]\n                },\n                {\n                    label: \"KO\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.KO),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"KO\"]\n                },\n                {\n                    label: \"Trzecia Droga\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.TD),\n                    backgroundColor: (0, $geIQo.KOLOR_PARTII)[\"TD\"]\n                },\n                {\n                    label: \"PiS + Konfederacja\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.NIEDEMO),\n                    backgroundColor: \"rgb(128, 0, 32)\"\n                }\n            ] : [\n                {\n                    label: \"Opozycja Demokratyczna\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.DEMO),\n                    backgroundColor: \"#E56701\"\n                },\n                {\n                    label: \"PiS + Konfederacja\",\n                    data: Object.values(wynikWyborow).map((wynik)=>wynik.NIEDEMO),\n                    backgroundColor: \"rgb(128, 0, 32)\"\n                }\n            ]\n        },\n        options: options?.poziomo ? {\n            indexAxis: \"y\",\n            scales: {\n                x: {\n                    stacked: true,\n                    max: options?.calySejm ? 460 : null,\n                    afterBuildTicks: options?.calySejm ? (axis)=>axis.ticks = [\n                            0,\n                            230,\n                            460\n                        ].map((v)=>({\n                                value: v\n                            })) : null\n                },\n                y: {\n                    stacked: true\n                }\n            }\n        } : {}\n    });\n}\nfunction $75354d900d52c58f$export$2c8fd381c328f0c2(mandaty) {\n    return [\n        0,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14\n    ].includes(mandaty) ? \"mandat\\xf3w\" : mandaty > 1 ? \"mandaty\" : \"mandat\";\n}\nfunction $75354d900d52c58f$export$7a22f047cf18a648(histogram, targetElement, partia, procentZSondazy, procentZWyborow, odchylenie, minimumMandatow, okreg) {\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(targetElement).appendChild(canvas);\n    const color = (0, $geIQo.KOLOR_PARTII)[partia];\n    const procenty = Object.keys(histogram).sort((a, b)=>Number.parseFloat(b) - Number.parseFloat(a));\n    const footer = (tooltipItems)=>{\n        let sum = 0;\n        tooltipItems.forEach(function(tooltipItem) {\n            sum += Number(tooltipItem.label.split(\"%\")[0]) * okreg.glosy2019;\n        });\n        return \"Głos\\xf3w: \" + Math.round(sum / 100);\n    };\n    new (0, $a4zWM.default)(canvas, {\n        type: \"bar\",\n        data: {\n            labels: procenty.map((procent)=>`${procent}%`),\n            datasets: (partia === \"KO\" || [\n                3,\n                19\n            ].includes(okreg.nr) ? [\n                {\n                    label: `${minimumMandatow[partia] + 4} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 4)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 4)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).darken(0.4).toString()\n                },\n                {\n                    label: `${minimumMandatow[partia] + 3} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 3)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 3)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).darken(0.2).toString()\n                }\n            ] : []).concat([\n                {\n                    label: `${minimumMandatow[partia] + 2} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 2)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 2)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: color\n                },\n                {\n                    label: `${minimumMandatow[partia] + 1} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia] + 1)}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia] + 1)] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).fade(0.4).toString()\n                },\n                {\n                    label: `${minimumMandatow[partia]} ${$75354d900d52c58f$export$2c8fd381c328f0c2(minimumMandatow[partia])}`,\n                    data: procenty.map((procent)=>(histogram[procent][String(minimumMandatow[partia])] || 0) / (0, $cWeek.ILE_SYMULACJI) * 100),\n                    backgroundColor: (0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))(color).fade(0.8).toString()\n                }\n            ])\n        },\n        options: {\n            plugins: {\n                legend: {\n                    title: {\n                        display: true,\n                        text: `Faktyczny/przewidywany wynik dla ${partia}: ${procentZWyborow} / ${procentZSondazy}%, σ: ${Math.round(odchylenie * 10) / 10}`,\n                        color: \"black\",\n                        font: {\n                            size: 15\n                        }\n                    }\n                },\n                tooltip: {\n                    callbacks: {\n                        footer: footer\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    stacked: true\n                },\n                y: {\n                    display: false,\n                    stacked: true\n                }\n            }\n        }\n    });\n    const tekst = document.createElement(\"p\");\n    // tekst.setAttribute(\"style\", \"\");\n    // tekst.innerHTML = interpretacjaHistogramu(partia, String(minimumMandatow[partia]), histogram);\n    document.getElementById(targetElement).appendChild(tekst);\n} // function extractProcent(poparcie: PoparciePartii) {\n //   return Number(poparcie.procent);\n // }\n // function interpretacjaHistogramu(partia: string, oczekiwaneMandaty: string, histogram: PoparciePartii) {\n //   const procentyOczekiwanych = Object.entries(histogram).filter(\n //     ([ mandaty, czestosc ]) => mandaty === oczekiwaneMandaty\n //   );\n //   const minProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n //     extractProcent(curr) < extractProcent(acc) ? curr : acc\n //   );\n //   const maxProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n //     extractProcent(curr) > extractProcent(acc) ? curr : acc\n //   );\n //   let tekst = `Jeśli ${partia} otrzyma`;\n //   // Nie podajemy dolnego zakresu, gdy oczekujemy 0 mandatów\n //   tekst += oczekiwaneMandaty\n //     ? ` od ${Math.max(extractProcent(minProcentDoOczekiwanych), 0)}%`\n //     : \"\";\n //   tekst += ` do ${\n //     maxProcentDoOczekiwanych.procent\n //   }% głosów, to zdobędzie ${oczekiwaneMandaty} ${odmianaSlowaMandat(\n //     oczekiwaneMandaty\n //   )}.`;\n //   return tekst;\n // }\n\n\n\nvar $8VULN = parcelRequire(\"8VULN\");\n\nvar $NqJwd = parcelRequire(\"NqJwd\");\nconst $35b215402a07a89b$export$eaffbf21335bfec8 = {\n    \"1\": {\n        \"powiaty\": [\n            \"bolesławiecki\",\n            \"głogowski\",\n            \"jaworski\",\n            \"kamiennog\\xf3rski\",\n            \"karkonoski\",\n            \"legnicki\",\n            \"lubański\",\n            \"lubiński\",\n            \"lw\\xf3wecki\",\n            \"polkowicki\",\n            \"zgorzelecki\",\n            \"złotoryjski\"\n        ],\n        \"miasta\": [\n            \"Jelenia G\\xf3ra\",\n            \"Legnica\"\n        ]\n    },\n    \"2\": {\n        \"powiaty\": [\n            \"dzierżoniowski\",\n            \"kłodzki\",\n            \"świdnicki\",\n            \"wałbrzyski\",\n            \"ząbkowicki\"\n        ],\n        \"miasta\": [\n            \"Wałbrzych\"\n        ]\n    },\n    \"3\": {\n        \"powiaty\": [\n            \"g\\xf3rowski\",\n            \"milicki\",\n            \"oleśnicki\",\n            \"oławski\",\n            \"strzeliński\",\n            \"średzki\",\n            \"trzebnicki\",\n            \"wołowski\",\n            \"wrocławski\"\n        ],\n        \"miasta\": [\n            \"Wrocław\"\n        ]\n    },\n    \"4\": {\n        \"powiaty\": [\n            \"bydgoski\",\n            \"inowrocławski\",\n            \"mogileński\",\n            \"nakielski\",\n            \"sępoleński\",\n            \"świecki\",\n            \"tucholski\",\n            \"żniński\"\n        ],\n        \"miasta\": [\n            \"Bydgoszcz\"\n        ]\n    },\n    \"5\": {\n        \"powiaty\": [\n            \"aleksandrowski\",\n            \"brodnicki\",\n            \"chełmiński\",\n            \"golubsko-dobrzyński\",\n            \"grudziądzki\",\n            \"lipnowski\",\n            \"radziejowski\",\n            \"rypiński\",\n            \"toruński\",\n            \"wąbrzeski\",\n            \"włocławski\"\n        ],\n        \"miasta\": [\n            \"Grudziądz\",\n            \"Toruń\",\n            \"Włocławek\"\n        ]\n    },\n    \"6\": {\n        \"powiaty\": [\n            \"janowski\",\n            \"kraśnicki\",\n            \"lubartowski\",\n            \"lubelski\",\n            \"łęczyński\",\n            \"łukowski\",\n            \"opolski\",\n            \"puławski\",\n            \"rycki\",\n            \"świdnicki\"\n        ],\n        \"miasta\": [\n            \"Lublin\"\n        ]\n    },\n    \"7\": {\n        \"powiaty\": [\n            \"bialski\",\n            \"biłgorajski\",\n            \"chełmski\",\n            \"hrubieszowski\",\n            \"krasnostawski\",\n            \"parczewski\",\n            \"radzyński\",\n            \"tomaszowski\",\n            \"włodawski\",\n            \"zamojski\"\n        ],\n        \"miasta\": [\n            \"Biała Podlaska\",\n            \"Chełm\",\n            \"Zamość\"\n        ]\n    },\n    \"8\": {\n        \"wojew\\xf3dztwo\": \"lubuskie\"\n    },\n    \"9\": {\n        \"powiaty\": [\n            \"brzeziński\",\n            \"ł\\xf3dzki wschodni\"\n        ],\n        \"miasta\": [\n            \"Ł\\xf3dź\"\n        ]\n    },\n    \"10\": {\n        \"powiaty\": [\n            \"bełchatowski\",\n            \"opoczyński\",\n            \"piotrkowski\",\n            \"radomszczański\",\n            \"rawski\",\n            \"skierniewicki\",\n            \"tomaszowski\"\n        ],\n        \"miasta\": [\n            \"Piotrk\\xf3w Trybunalski\",\n            \"Skierniewice\"\n        ]\n    },\n    \"11\": {\n        \"powiaty\": [\n            \"kutnowski\",\n            \"łaski\",\n            \"łęczycki\",\n            \"łowicki\",\n            \"pabianicki\",\n            \"pajęczański\",\n            \"poddębicki\",\n            \"sieradzki\",\n            \"wieluński\",\n            \"wieruszowski\",\n            \"zduńskowolski\",\n            \"zgierski\"\n        ]\n    },\n    \"12\": {\n        \"powiaty\": [\n            \"chrzanowski\",\n            \"myślenicki\",\n            \"oświęcimski\",\n            \"suski\",\n            \"wadowicki\"\n        ]\n    },\n    \"13\": {\n        \"powiaty\": [\n            \"krakowski\",\n            \"miechowski\",\n            \"olkuski\"\n        ],\n        \"miasta\": [\n            \"Krak\\xf3w\"\n        ]\n    },\n    \"14\": {\n        \"powiaty\": [\n            \"gorlicki\",\n            \"limanowski\",\n            \"nowosądecki\",\n            \"nowotarski\",\n            \"tatrzański\"\n        ],\n        \"miasta\": [\n            \"Nowy Sącz\"\n        ]\n    },\n    \"15\": {\n        \"powiaty\": [\n            \"bocheński\",\n            \"brzeski\",\n            \"dąbrowski\",\n            \"proszowicki\",\n            \"tarnowski\",\n            \"wielicki\"\n        ],\n        \"miasta\": [\n            \"Tarn\\xf3w\"\n        ]\n    },\n    \"16\": {\n        \"powiaty\": [\n            \"ciechanowski\",\n            \"gostyniński\",\n            \"mławski\",\n            \"płocki\",\n            \"płoński\",\n            \"przasnyski\",\n            \"sierpecki\",\n            \"sochaczewski\",\n            \"żuromiński\",\n            \"żyrardowski\"\n        ],\n        \"miasta\": [\n            \"Płock\"\n        ]\n    },\n    \"17\": {\n        \"powiaty\": [\n            \"białobrzeski\",\n            \"gr\\xf3jecki\",\n            \"kozienicki\",\n            \"lipski\",\n            \"przysuski\",\n            \"radomski\",\n            \"szydłowiecki\",\n            \"zwoleński\"\n        ],\n        \"miasta\": [\n            \"Radom\"\n        ]\n    },\n    \"18\": {\n        \"powiaty\": [\n            \"garwoliński\",\n            \"łosicki\",\n            \"makowski\",\n            \"miński\",\n            \"ostrołęcki\",\n            \"ostrowski\",\n            \"pułtuski\",\n            \"siedlecki\",\n            \"sokołowski\",\n            \"węgrowski\",\n            \"wyszkowski\"\n        ],\n        \"miasta\": [\n            \"Ostrołęka\",\n            \"Siedlce\"\n        ]\n    },\n    \"19\": {\n        \"miasta\": [\n            \"Warszawa\"\n        ]\n    },\n    \"20\": {\n        \"powiaty\": [\n            \"grodziski\",\n            \"legionowski\",\n            \"nowodworski\",\n            \"otwocki\",\n            \"piaseczyński\",\n            \"pruszkowski\",\n            \"warszawski zachodni\",\n            \"wołomiński\"\n        ]\n    },\n    \"21\": {\n        \"wojew\\xf3dztwo\": \"opolskie\"\n    },\n    \"22\": {\n        \"powiaty\": [\n            \"bieszczadzki\",\n            \"brzozowski\",\n            \"jarosławski\",\n            \"jasielski\",\n            \"krośnieński\",\n            \"leski\",\n            \"lubaczowski\",\n            \"przemyski\",\n            \"przeworski\",\n            \"sanocki\",\n            \"Krosno\",\n            \"Przemyśl\"\n        ]\n    },\n    \"23\": {\n        \"powiaty\": [\n            \"dębicki\",\n            \"kolbuszowski\",\n            \"leżajski\",\n            \"łańcucki\",\n            \"mielecki\",\n            \"niżański\",\n            \"ropczycko-sędziszowski\",\n            \"rzeszowski\",\n            \"stalowowolski\",\n            \"strzyżowski\",\n            \"tarnobrzeski\",\n            \"Rzesz\\xf3w\",\n            \"Tarnobrzeg\"\n        ]\n    },\n    \"24\": {\n        \"wojew\\xf3dztwo\": \"podlaskie\"\n    },\n    \"25\": {\n        \"powiaty\": [\n            \"gdański\",\n            \"kwidzyński\",\n            \"malborski\",\n            \"nowodworski\",\n            \"starogardzki\",\n            \"sztumski\",\n            \"tczewski\"\n        ],\n        \"miasta\": [\n            \"Gdańsk\",\n            \"Sopot\"\n        ]\n    },\n    \"26\": {\n        \"powiaty\": [\n            \"bytowski\",\n            \"chojnicki\",\n            \"człuchowski\",\n            \"kartuski\",\n            \"kościerski\",\n            \"lęborski\",\n            \"pucki\",\n            \"słupski\",\n            \"wejherowski\"\n        ],\n        \"miasta\": [\n            \"Gdynia\",\n            \"Słupsk\"\n        ]\n    },\n    \"27\": {\n        \"powiaty\": [\n            \"bielski\",\n            \"cieszyński\",\n            \"pszczyński\",\n            \"żywiecki\"\n        ],\n        \"miasta\": [\n            \"Bielsko-Biała\"\n        ]\n    },\n    \"28\": {\n        \"powiaty\": [\n            \"częstochowski\",\n            \"kłobucki\",\n            \"lubliniecki\",\n            \"myszkowski\"\n        ],\n        \"miasta\": [\n            \"Częstochowa\"\n        ]\n    },\n    \"29\": {\n        \"powiaty\": [\n            \"gliwicki\",\n            \"tarnog\\xf3rski\"\n        ],\n        \"miasta\": [\n            \"Bytom\",\n            \"Gliwice\",\n            \"Zabrze\"\n        ]\n    },\n    \"30\": {\n        \"powiaty\": [\n            \"mikołowski\",\n            \"raciborski\",\n            \"rybnicki\",\n            \"wodzisławski\"\n        ],\n        \"miasta\": [\n            \"Jastrzębie-Zdr\\xf3j\",\n            \"Rybnik\",\n            \"Żory\"\n        ]\n    },\n    \"31\": {\n        \"powiaty\": [\n            \"bieruńsko-lędziński\"\n        ],\n        \"miasta\": [\n            \"Chorz\\xf3w\",\n            \"Katowice\",\n            \"Mysłowice\",\n            \"Piekary Śląskie\",\n            \"Ruda Śląska\",\n            \"Siemianowice Śląskie\",\n            \"Świętochłowice\",\n            \"Tychy\"\n        ]\n    },\n    \"32\": {\n        \"powiaty\": [\n            \"będziński\",\n            \"zawierciański\"\n        ],\n        \"miasta\": [\n            \"Dąbrowa G\\xf3rnicza\",\n            \"Jaworzno\",\n            \"Sosnowiec\"\n        ]\n    },\n    \"33\": {\n        \"wojew\\xf3dztwo\": \"świętokrzyskie\"\n    },\n    \"34\": {\n        \"powiaty\": [\n            \"bartoszycki\",\n            \"braniewski\",\n            \"działdowski\",\n            \"elbląski\",\n            \"iławski\",\n            \"lidzbarski\",\n            \"nowomiejski\",\n            \"ostr\\xf3dzki\"\n        ],\n        \"miasta\": [\n            \"Elbląg\"\n        ]\n    },\n    \"35\": {\n        \"powiaty\": [\n            \"ełcki\",\n            \"giżycki\",\n            \"gołdapski\",\n            \"kętrzyński\",\n            \"mrągowski\",\n            \"nidzicki\",\n            \"olecki\",\n            \"olsztyński\",\n            \"piski\",\n            \"szczycieński\",\n            \"węgorzewski\"\n        ],\n        \"miasta\": [\n            \"Olsztyn\"\n        ]\n    },\n    \"36\": {\n        \"powiaty\": [\n            \"gostyński\",\n            \"jarociński\",\n            \"kaliski\",\n            \"kępiński\",\n            \"kościański\",\n            \"krotoszyński\",\n            \"leszczyński\",\n            \"ostrowski\",\n            \"ostrzeszowski\",\n            \"pleszewski\",\n            \"rawicki\"\n        ],\n        \"miasta\": [\n            \"Kalisz\",\n            \"Leszno\"\n        ]\n    },\n    \"37\": {\n        \"powiaty\": [\n            \"gnieźnieński\",\n            \"kolski\",\n            \"koniński\",\n            \"słupecki\",\n            \"średzki\",\n            \"śremski\",\n            \"turecki\",\n            \"wrzesiński\"\n        ],\n        \"miasta\": [\n            \"Konin\"\n        ]\n    },\n    \"38\": {\n        \"powiaty\": [\n            \"chodzieski\",\n            \"czarnkowsko-trzcianecki\",\n            \"grodziski\",\n            \"międzychodzki\",\n            \"nowotomyski\",\n            \"obornicki\",\n            \"pilski\",\n            \"szamotulski\",\n            \"wągrowiecki\",\n            \"wolsztyński\",\n            \"złotowski\"\n        ]\n    },\n    \"39\": {\n        \"powiaty\": [\n            \"poznański\",\n            \"Poznań\"\n        ]\n    },\n    \"40\": {\n        \"powiaty\": [\n            \"białogardzki\",\n            \"choszczeński\",\n            \"drawski\",\n            \"kołobrzeski\",\n            \"koszaliński\",\n            \"sławieński\",\n            \"szczecinecki\",\n            \"świdwiński\",\n            \"wałecki\"\n        ],\n        \"miasta\": [\n            \"Koszalin\"\n        ]\n    },\n    \"41\": {\n        \"powiaty\": [\n            \"goleniowski\",\n            \"gryficki\",\n            \"gryfiński\",\n            \"kamieński\",\n            \"łobeski\",\n            \"myśliborski\",\n            \"policki\",\n            \"pyrzycki\",\n            \"stargardzki\"\n        ],\n        \"miasta\": [\n            \"Szczecin\",\n            \"Świnoujście\"\n        ]\n    }\n};\n\n\nconst $e2549e73b6707145$export$97482f0a6e0733a2 = [\n    {\n        TD: 53958,\n        LEWICA: 47715,\n        PIS: 174643,\n        KONF: 31770,\n        KO: 169540\n    },\n    {\n        TD: 39215,\n        LEWICA: 25806,\n        PIS: 107797,\n        KONF: 19478,\n        KO: 120188\n    },\n    {\n        TD: 106624,\n        LEWICA: 88089,\n        PIS: 206899,\n        KONF: 54132,\n        KO: 286713\n    },\n    {\n        TD: 80426,\n        LEWICA: 52959,\n        PIS: 162603,\n        KONF: 34266,\n        KO: 186914\n    },\n    {\n        TD: 84308,\n        LEWICA: 60473,\n        PIS: 183131,\n        KONF: 34232,\n        KO: 158719\n    },\n    {\n        TD: 102894,\n        LEWICA: 37083,\n        PIS: 294847,\n        KONF: 54325,\n        KO: 131712\n    },\n    {\n        TD: 59577,\n        LEWICA: 25691,\n        PIS: 231882,\n        KONF: 35594,\n        KO: 79501\n    },\n    {\n        TD: 77933,\n        LEWICA: 47911,\n        PIS: 143530,\n        KONF: 33672,\n        KO: 195091\n    },\n    {\n        TD: 54283,\n        LEWICA: 55770,\n        PIS: 122433,\n        KONF: 25428,\n        KO: 187527\n    },\n    {\n        TD: 54479,\n        LEWICA: 25340,\n        PIS: 184929,\n        KONF: 30247,\n        KO: 86083\n    },\n    {\n        TD: 77313,\n        LEWICA: 41188,\n        PIS: 221031,\n        KONF: 36383,\n        KO: 138038\n    },\n    {\n        TD: 54585,\n        LEWICA: 22036,\n        PIS: 156308,\n        KONF: 28754,\n        KO: 88408\n    },\n    {\n        TD: 127693,\n        LEWICA: 83633,\n        PIS: 232430,\n        KONF: 58435,\n        KO: 232799\n    },\n    {\n        TD: 49487,\n        LEWICA: 13594,\n        PIS: 229587,\n        KONF: 37301,\n        KO: 68804\n    },\n    {\n        TD: 75229,\n        LEWICA: 16152,\n        PIS: 196433,\n        KONF: 32241,\n        KO: 68690\n    },\n    {\n        TD: 75526,\n        LEWICA: 28848,\n        PIS: 195218,\n        KONF: 28877,\n        KO: 99146\n    },\n    {\n        TD: 54690,\n        LEWICA: 20874,\n        PIS: 190418,\n        KONF: 28593,\n        KO: 82003\n    },\n    {\n        TD: 83681,\n        LEWICA: 26149,\n        PIS: 262236,\n        KONF: 44299,\n        KO: 100902\n    },\n    {\n        TD: 227127,\n        LEWICA: 230648,\n        PIS: 345380,\n        KONF: 124220,\n        KO: 741286\n    },\n    {\n        TD: 110086,\n        LEWICA: 51556,\n        PIS: 231905,\n        KONF: 51573,\n        KO: 257470\n    },\n    {\n        TD: 61155,\n        LEWICA: 34763,\n        PIS: 150022,\n        KONF: 31150,\n        KO: 161241\n    },\n    {\n        TD: 60938,\n        LEWICA: 19750,\n        PIS: 241790,\n        KONF: 38080,\n        KO: 70054\n    },\n    {\n        TD: 83676,\n        LEWICA: 32828,\n        PIS: 347688,\n        KONF: 63854,\n        KO: 119259\n    },\n    {\n        TD: 114898,\n        LEWICA: 29478,\n        PIS: 258277,\n        KONF: 59648,\n        KO: 126971\n    },\n    {\n        TD: 90599,\n        LEWICA: 57967,\n        PIS: 155318,\n        KONF: 38406,\n        KO: 257009\n    },\n    {\n        TD: 92793,\n        LEWICA: 56887,\n        PIS: 199709,\n        KONF: 49203,\n        KO: 258909\n    },\n    {\n        TD: 64778,\n        LEWICA: 34601,\n        PIS: 163506,\n        KONF: 34909,\n        KO: 127677\n    },\n    {\n        TD: 47698,\n        LEWICA: 30497,\n        PIS: 117756,\n        KONF: 21256,\n        KO: 94313\n    },\n    {\n        TD: 51681,\n        LEWICA: 35673,\n        PIS: 116827,\n        KONF: 26934,\n        KO: 139711\n    },\n    {\n        TD: 47525,\n        LEWICA: 26117,\n        PIS: 145230,\n        KONF: 30527,\n        KO: 114404\n    },\n    {\n        TD: 69825,\n        LEWICA: 44509,\n        PIS: 162458,\n        KONF: 35240,\n        KO: 193596\n    },\n    {\n        TD: 37221,\n        LEWICA: 81646,\n        PIS: 112389,\n        KONF: 21512,\n        KO: 114519\n    },\n    {\n        TD: 90975,\n        LEWICA: 45048,\n        PIS: 310266,\n        KONF: 43197,\n        KO: 137941\n    },\n    {\n        TD: 46101,\n        LEWICA: 24269,\n        PIS: 105373,\n        KONF: 19590,\n        KO: 95410\n    },\n    {\n        TD: 63007,\n        LEWICA: 31631,\n        PIS: 126432,\n        KONF: 27119,\n        KO: 129339\n    },\n    {\n        TD: 87628,\n        LEWICA: 46222,\n        PIS: 194416,\n        KONF: 37838,\n        KO: 154990\n    },\n    {\n        TD: 69740,\n        LEWICA: 39761,\n        PIS: 162192,\n        KONF: 29208,\n        KO: 100580\n    },\n    {\n        TD: 72996,\n        LEWICA: 32378,\n        PIS: 120301,\n        KONF: 28370,\n        KO: 144114\n    },\n    {\n        TD: 98589,\n        LEWICA: 73345,\n        PIS: 116666,\n        KONF: 35182,\n        KO: 262779\n    },\n    {\n        TD: 39776,\n        LEWICA: 28101,\n        PIS: 101023,\n        KONF: 19379,\n        KO: 124625\n    },\n    {\n        TD: 69957,\n        LEWICA: 52032,\n        PIS: 159575,\n        KONF: 32942,\n        KO: 222427\n    }\n];\n\n\nlet $48c197dd6713607d$var$dane = (0, $NqJwd.DANE);\n// Odkomentuj aby przegenerować dane\n// okregi.forEach((okreg) => {\n//   const daneZOkregu = RozkladPrawdopodobienstwaWOkregu(\n//     sredniaSondazy as Wynik,\n//     okreg\n//   );\n//   dane[okreg.miasto] = daneZOkregu;\n// });\n// console.log(dane);\nconst $48c197dd6713607d$var$wszystkieRekomendacje = {};\nfunction $48c197dd6713607d$export$cd0c76de881f3583(wynik, okreg, lokalizacje) {\n    const { procentyWOkreguSrednia: procentyWOkreguSrednia, odchylenieWOkregu: odchylenieWOkregu, wykresRozkladu: wykresRozkladu, wykresRozkladuDemo: wykresRozkladuDemo, histogram: histogram, minimumMandatow: minimumMandatow, zagrozoneMandaty: zagrozoneMandaty, potencjalneMandaty: potencjalneMandaty, ostatnieMandaty: ostatnieMandaty, dawcyGlosow: dawcyGlosow } = $48c197dd6713607d$var$dane[okreg.miasto];\n    const { powiaty: powiaty, miasta: miasta, województwo: województwo } = lokalizacje;\n    const header = document.createElement(\"h2\");\n    header.innerHTML = `${okreg.miasto} (${okreg.nr})`;\n    header.setAttribute(\"id\", okreg.miasto);\n    header.setAttribute(\"class\", \"miastoHeader\");\n    document.getElementById(\"analizy\").appendChild(header);\n    const skladnikiOkregu = document.createElement(\"p\");\n    skladnikiOkregu.setAttribute(\"class\", \"skladniki_okregu\");\n    skladnikiOkregu.innerHTML = województwo ? `województwo: <b>${województwo}</b>` : \"\";\n    skladnikiOkregu.innerHTML += powiaty ? `<b>powiaty</b>: ${powiaty.join(\", \")}` : \"\";\n    skladnikiOkregu.innerHTML += powiaty && miasta ? \"<br/>\" : \"\";\n    skladnikiOkregu.innerHTML += miasta ? `<b>miasta</b>: ${miasta.join(\", \")}` : \"\";\n    document.getElementById(\"analizy\").appendChild(skladnikiOkregu);\n    $48c197dd6713607d$var$wstawRekomendowaneLogos(okreg, document.getElementById(\"analizy\"));\n    $48c197dd6713607d$var$wszystkieRekomendacje[okreg.miasto] = {\n        nazwaOkregu: okreg.miasto,\n        nrOkregu: okreg.nr,\n        rekomendacjePartii: (0, $8VULN.komentarze)[okreg.miasto].rekomendacjePartii\n    };\n    const kontener = document.createElement(\"div\");\n    const wykres = document.createElement(\"div\");\n    const wykresDemo = document.createElement(\"div\");\n    const naglowek = document.createElement(\"h3\");\n    kontener.setAttribute(\"class\", \"kontener\");\n    naglowek.innerHTML = \"Prawdopodobieństwo podziału mandat\\xf3w\";\n    document.getElementById(\"analizy\").appendChild(naglowek);\n    wykres.setAttribute(\"class\", \"wykres\");\n    wykres.setAttribute(\"id\", \"Miasto\" + okreg.miasto);\n    wykresDemo.setAttribute(\"class\", \"wykres\");\n    wykresDemo.setAttribute(\"id\", \"Miasto\" + okreg.miasto + \"Demo\");\n    kontener.appendChild(wykres);\n    kontener.appendChild(wykresDemo);\n    document.getElementById(\"analizy\").appendChild(kontener);\n    const tekst = document.createElement(\"p\");\n    tekst.setAttribute(\"style\", \"margin-bottom: 30px; \");\n    tekst.innerHTML = $48c197dd6713607d$var$interpretacjaWykresuRozkladuDemo(wykresRozkladuDemo, okreg);\n    document.getElementById(\"analizy\").appendChild(tekst);\n    const tekstHistogramy = document.createElement(\"p\");\n    tekstHistogramy.setAttribute(\"style\", \"margin-bottom: 15px; \");\n    tekstHistogramy.innerHTML = \"Wykresy poniżej pokazują prawdopodobieństwo poparcia danej partii. Im wyższy słupek, tym większa szansa, że partia dostanie określony procent głos\\xf3w.\";\n    document.getElementById(\"analizy\").appendChild(tekstHistogramy);\n    $48c197dd6713607d$var$rysujHistogramy(okreg, histogram, procentyWOkreguSrednia, odchylenieWOkregu, minimumMandatow);\n    function getFirstXEntries(obj, x) {\n        return Object.keys(obj).slice(0, x).reduce((acc, key)=>{\n            acc[key] = obj[key];\n            return acc;\n        }, {});\n    }\n    (0, $75354d900d52c58f$export$a36ee161a0d45cdf)(wykresRozkladuDemo, \"Miasto\" + okreg.miasto, {\n        poziomo: true,\n        laczOpozycje: true\n    });\n    const mandaty = (0, $3i35a.NaPolDemo)((0, $3i35a.PodzialMandatowWOkregu)((0, $e2549e73b6707145$export$97482f0a6e0733a2)[okreg.nr - 1], okreg, {\n        log: false,\n        inputWGlosach: true\n    }));\n    (0, $75354d900d52c58f$export$a36ee161a0d45cdf)({\n        PKW: mandaty,\n        ...wykresRozkladu\n    }, \"Miasto\" + okreg.miasto + \"Demo\", {\n        poziomo: true,\n        laczOpozycje: false\n    });\n    // Rysuj kopie przy mapie\n    (0, $75354d900d52c58f$export$a36ee161a0d45cdf)(wykresRozkladuDemo, \"WykresMiasto\" + okreg.miasto, {\n        poziomo: true,\n        laczOpozycje: true\n    });\n    (0, $75354d900d52c58f$export$a36ee161a0d45cdf)(getFirstXEntries(wykresRozkladu, 6), \"WykresMiasto\" + okreg.miasto + \"Demo\", {\n        poziomo: true,\n        laczOpozycje: false\n    });\n// Opcjonalne...\n// const symulacje = document.createElement(\"p\");\n// symulacje.setAttribute(\"class\", \"symulacje\");\n// let tabelka = '<table>';\n// tabelka +=\n//   \"<th>Partia</th><th>Ostatni mandat</th><th>Zagrożenie</th><th>Dawca głosów</th><th>Szansa</th>\";\n// for (const partia of [\"KO\", \"TD\", \"LEWICA\"]) {\n//   tabelka += `<tr><td>${partia}</td><td>${Math.round(\n//     (100 * ostatnieMandaty[partia]) / ILE_SYMULACJI\n//   )}%</td><td>${Math.round(\n//     (100 * zagrozoneMandaty[partia]) / ILE_SYMULACJI\n//   )}%</td><td>${Math.round(\n//     (100 * dawcyGlosow[partia]) / ILE_SYMULACJI\n//   )}%</td><td>${Math.round(\n//     (100 * potencjalneMandaty[partia]) / ILE_SYMULACJI\n//   )}%</td></tr>`;\n// }\n// let legenda = \"<b>Ostatni mandat</b> oznacza w ilu procent symulacji partia bierze ostatni przydzielony mandat, co jest najbardziej efektywne wykorzystanie, ale i ryzykowne gdyby głosów było mniej niż wypadło w symulacji.<br/> \"\n// legenda +=\n//   `<b>Zagrożenie</b> oznacza w ilu procent symulacji partia zdobywa do 20% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Jest to efektywne, ale wiąże się z ryzykiem, choć nie aż takim jak ostatni mandat.<br/> `;\n// legenda += `<b>Dawca głosów</b> oznacza w ilu procent symulacji partia zdobywa między 25% a 75% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Taki mandat jest bezpieczny, choć nie bardzo efektywny, można więc myśleć o wykorzystaniu tych głosów gdzie indziej.<br/>`;\n// legenda += `<b>Szansa</b> oznacza w ilu procent symulacji partia zdobywa ponad 80% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Jest to sytuacja, w której zdobycie kolejnego mandatu jest \"blisko\".<br/>`;\n// symulacje.innerHTML = tabelka + \"</table>\" + legenda;\n// document.getElementById(\"analizy\").appendChild(symulacje);\n}\n// window.onload = function() {\nlet $48c197dd6713607d$var$nrOkregu = 1;\n(0, $geIQo.okregi).forEach((okreg)=>{\n    const text = document.createElement(\"div\");\n    text.innerHTML = `<h2>${okreg.miasto} (${$48c197dd6713607d$var$nrOkregu})</h2>`;\n    text.id = `${okreg.miasto}Info`;\n    text.className = \"info\";\n    $48c197dd6713607d$var$wstawRekomendowaneLogos(okreg, text);\n    const kontener = document.createElement(\"div\");\n    kontener.setAttribute(\"class\", \"kontener\");\n    const wykres1 = document.createElement(\"div\");\n    wykres1.setAttribute(\"id\", \"WykresMiasto\" + okreg.miasto);\n    wykres1.setAttribute(\"class\", \"wykres\");\n    const wykres2 = document.createElement(\"div\");\n    wykres2.setAttribute(\"id\", \"WykresMiasto\" + okreg.miasto + \"Demo\");\n    wykres2.setAttribute(\"class\", \"wykres\");\n    kontener.appendChild(wykres1);\n    kontener.appendChild(wykres2);\n    text.appendChild(kontener);\n    const kontenerHistogram = document.createElement(\"div\");\n    kontenerHistogram.setAttribute(\"class\", \"kontener\");\n    const graph = document.createElement(\"div\");\n    graph.setAttribute(\"id\", \"InfoMiasto\" + okreg.miasto);\n    graph.setAttribute(\"class\", \"wykres\");\n    kontenerHistogram.appendChild(graph);\n    const graph2 = document.createElement(\"div\");\n    graph2.setAttribute(\"id\", \"InfoMiasto2\" + okreg.miasto);\n    graph2.setAttribute(\"class\", \"wykres\");\n    kontenerHistogram.appendChild(graph2);\n    text.appendChild(kontenerHistogram);\n    const graph3 = document.createElement(\"div\");\n    graph3.setAttribute(\"id\", \"InfoMiasto3\" + okreg.miasto);\n    graph3.setAttribute(\"class\", \"wykres\");\n    text.appendChild(graph3);\n    document.getElementById(\"Info\").appendChild(text);\n    const icon = document.getElementById(okreg.miasto + \"Icon\");\n    icon.addEventListener(\"mouseover\", ()=>{\n        text.style.display = \"block\";\n        document.getElementsByClassName(\"placeholder\")[0].setAttribute(\"style\", \"display: none\");\n    });\n    icon.addEventListener(\"mouseout\", ()=>{\n        text.style.display = \"none\";\n        if (window.innerWidth > 768) document.getElementsByClassName(\"placeholder\")[0].setAttribute(\"style\", \"display: block\");\n    });\n    $48c197dd6713607d$var$nrOkregu++;\n});\nlet $48c197dd6713607d$var$i = 0;\nfor (const okreg of (0, $geIQo.okregi))setTimeout(()=>$48c197dd6713607d$export$cd0c76de881f3583((0, $geIQo.sredniaSondazy), okreg, (0, $35b215402a07a89b$export$eaffbf21335bfec8)[++$48c197dd6713607d$var$i]), 200 + $48c197dd6713607d$var$i * 50);\nwindow.addEventListener(\"hashchange\", function() {\n    let element = document.getElementById(location.hash.substring(1));\n    if (element) element.scrollIntoView();\n}, false);\n// For initial page load:\nif (location.hash) {\n    let element = document.getElementById(location.hash.substring(1));\n    if (element) element.scrollIntoView();\n}\nfunction $48c197dd6713607d$var$wstawRekomendowaneLogos(okreg, text) {\n    const rekomendacje = (0, $8VULN.komentarze)[okreg.miasto].rekomendacjePartii;\n    if (rekomendacje?.length && !(rekomendacje[0] === \"\")) {\n        const rekomendacjeLogos = document.createElement(\"div\");\n        const rekomendacjeHeader = document.createElement(\"h4\");\n        rekomendacjeHeader.innerHTML = `Nasza rekomendacja:`;\n        rekomendacjeLogos.appendChild(rekomendacjeHeader);\n        // rekomendacjeLogos.setAttribute(\"id\", \"RekomendacjeMiasto\" + okreg.miasto);\n        for (const partia of rekomendacje){\n            const logoPartii = document.createElement(\"img\");\n            logoPartii.setAttribute(\"style\", \"padding: 0px 20px;\");\n            logoPartii.src = `${partia}.png`;\n            rekomendacjeLogos.appendChild(logoPartii);\n        }\n        text.appendChild(rekomendacjeLogos);\n        if (rekomendacje.length > 1) {\n            const aElement = document.getElementById(okreg.miasto + \"Icon\");\n            const path = aElement.getElementsByTagName(\"path\")[0];\n            path.setAttribute(\"fill\", `url(#stripes${rekomendacje[0].toLocaleLowerCase()}${rekomendacje[1].toLocaleLowerCase()})`);\n        } else document.getElementById(okreg.miasto + \"Icon\").style.fill = (0, $geIQo.KOLOR_PARTII)[(0, $8VULN.komentarze)[okreg.miasto].rekomendacjePartii[0]];\n        const komentarz = document.createElement(\"p\");\n        komentarz.innerHTML = `${(0, $8VULN.komentarze)[okreg.miasto].txt || \"\"}`;\n        text.appendChild(komentarz);\n    } else {\n        const rekomendacjeHeader = document.createElement(\"h4\");\n        rekomendacjeHeader.innerHTML = `Brak Rekomendacji`;\n        text.appendChild(rekomendacjeHeader);\n        const komentarz = document.createElement(\"p\");\n        komentarz.innerHTML = `${(0, $8VULN.komentarze)[okreg.miasto].txt || \"\"}`;\n        text.appendChild(komentarz);\n        document.getElementById(okreg.miasto + \"Icon\").style.fill = \"white\";\n    }\n}\nfunction $48c197dd6713607d$var$rysujHistogramy(okreg, histogram, wynikWOkregu, odchylenieWOkregu, minimumMandatow) {\n    const histogramKontener = document.createElement(\"div\");\n    histogramKontener.setAttribute(\"class\", \"kontener\");\n    document.getElementById(\"analizy\").appendChild(histogramKontener);\n    const suma = Object.values((0, $e2549e73b6707145$export$97482f0a6e0733a2)).reduce((acc, cur)=>{\n        return {\n            KO: acc.KO + cur.KO,\n            LEWICA: acc.LEWICA + cur.LEWICA,\n            KONF: acc.KONF + cur.KONF,\n            PIS: acc.PIS + cur.PIS,\n            TD: acc.TD + cur.TD\n        };\n    }, {\n        TD: 0,\n        LEWICA: 0,\n        PIS: 0,\n        KONF: 0,\n        KO: 0\n    });\n    const sumaOkreg = Object.values((0, $e2549e73b6707145$export$97482f0a6e0733a2)[okreg.nr - 1]).reduce((acc, cur)=>acc += cur, 0);\n    Object.entries((0, $geIQo.sredniaSondazy)).forEach(([partia, procent])=>{\n        if ([\n            \"PIS\",\n            \"KONF\"\n        ].includes(partia)) return;\n        const elementName = okreg.miasto + \"Histogram\" + partia;\n        const wykresHistogram = document.createElement(\"div\");\n        wykresHistogram.setAttribute(\"id\", elementName);\n        wykresHistogram.setAttribute(\"class\", \"histogram\");\n        histogramKontener.appendChild(wykresHistogram);\n        const glosyWOkregu = (0, $e2549e73b6707145$export$97482f0a6e0733a2)[okreg.nr - 1][partia] / sumaOkreg;\n        const procentyWOkreguWybory = `${Math.round(1000 * glosyWOkregu) / 10}%`;\n        // console.log(sumaOkreg, glosyWOkregu, procentyWOkreguWybory);\n        (0, $75354d900d52c58f$export$7a22f047cf18a648)(histogram[partia], elementName, partia, (Math.round(wynikWOkregu[partia] * 5) / 5).toString(), procentyWOkreguWybory, odchylenieWOkregu[partia], minimumMandatow, okreg);\n        // Rysuj kopię obok mapy\n        if (partia === \"KO\") (0, $75354d900d52c58f$export$7a22f047cf18a648)(histogram[partia], \"InfoMiasto\" + okreg.miasto, partia, (Math.round(wynikWOkregu[partia] * 5) / 5).toString(), procentyWOkreguWybory, odchylenieWOkregu[partia], minimumMandatow, okreg);\n        if (partia === \"TD\") (0, $75354d900d52c58f$export$7a22f047cf18a648)(histogram[partia], \"InfoMiasto2\" + okreg.miasto, partia, (Math.round(wynikWOkregu[partia] * 5) / 5).toString(), procentyWOkreguWybory, odchylenieWOkregu[partia], minimumMandatow, okreg);\n        if (partia === \"LEWICA\") (0, $75354d900d52c58f$export$7a22f047cf18a648)(histogram[partia], \"InfoMiasto3\" + okreg.miasto, partia, (Math.round(wynikWOkregu[partia] * 5) / 5).toString(), procentyWOkreguWybory, odchylenieWOkregu[partia], minimumMandatow, okreg);\n    });\n}\nfunction $48c197dd6713607d$var$interpretacjaWykresuRozkladuDemo(wykresRozkladuDemo, okreg) {\n    const podstawowyScenariusz = Object.entries(wykresRozkladuDemo)[0];\n    const drugiScenariusz = Object.entries(wykresRozkladuDemo)[1];\n    const szansa = drugiScenariusz[1].DEMO > podstawowyScenariusz[1].DEMO;\n    return `W okręgu ${okreg.miasto} z  prawdopodobieństwem ${podstawowyScenariusz[0]} ` + `demokratyczna opozycja  zdobędzie ${podstawowyScenariusz[1].DEMO} ${(0, $75354d900d52c58f$export$2c8fd381c328f0c2)(podstawowyScenariusz[1].DEMO)} ` + `a PiS i Konfederacja zdobędą ${podstawowyScenariusz[1].NIEDEMO} ${(0, $75354d900d52c58f$export$2c8fd381c328f0c2)(podstawowyScenariusz[1].NIEDEMO)}. ` + (drugiScenariusz !== undefined ? (szansa ? `Jest ${drugiScenariusz[0]} szans, że ` : `Istnieje ${drugiScenariusz[0]} ryzyko, że `) + `demokratyczna opozycja zdobędzie ${drugiScenariusz[1].DEMO} ${(0, $75354d900d52c58f$export$2c8fd381c328f0c2)(drugiScenariusz[1].DEMO)} ` + `a PiS i Konfederacja zdobędą ${drugiScenariusz[1].NIEDEMO} ${(0, $75354d900d52c58f$export$2c8fd381c328f0c2)(drugiScenariusz[1].NIEDEMO)}. <br/>` : \"<br/>\");\n}\n\n\n//# sourceMappingURL=index.d197d0ca.js.map\n","import { Wynik, Okreg, Sondaze,  Histogram, Rekomendacje, ILE_SYMULACJI } from \"./typy\";\nimport { okregi, KOLOR_PARTII, sredniaSondazy } from \"./dane\";\nimport {\n  NaPolDemo,\n  PodzialMandatowWOkregu,\n  RozkladPrawdopodobienstwaWOkregu,\n  odchylenie,\n} from \"./ordynacja\";\nimport {\n  odmianaSlowaMandat,\n  rysujHistogram,\n  rysujWynikWyborow,\n} from \"./wykresy\";\nimport { komentarze } from \"./komentarz\";\nimport { DANE } from \"./symulacja\";\nimport { PODZIAL } from \"./podzial_terytorialny\";\nimport { WYNIKI_2023 } from \"./wyniki_2023\";\n\nlet dane = DANE;\n// Odkomentuj aby przegenerować dane\n// okregi.forEach((okreg) => {\n//   const daneZOkregu = RozkladPrawdopodobienstwaWOkregu(\n//     sredniaSondazy as Wynik,\n//     okreg\n//   );\n//   dane[okreg.miasto] = daneZOkregu;\n// });\n// console.log(dane);\n\nconst wszystkieRekomendacje: Rekomendacje = {};\n\nexport function RysujRozkladyWOkregu(wynik: Wynik, okreg: Okreg, lokalizacje: { powiaty?: string[], miasta?: string[], województwo?: string}) {\n  const {\n    procentyWOkreguSrednia,\n    odchylenieWOkregu,\n    wykresRozkladu,\n    wykresRozkladuDemo,\n    histogram,\n    minimumMandatow,\n    zagrozoneMandaty,\n    potencjalneMandaty,\n    ostatnieMandaty,\n    dawcyGlosow,\n  } = dane[okreg.miasto];\n  const { powiaty, miasta, województwo } = lokalizacje;\n  const header = document.createElement(\"h2\");\n  header.innerHTML = `${okreg.miasto} (${okreg.nr})`;\n  header.setAttribute(\"id\", okreg.miasto);\n  header.setAttribute(\"class\", \"miastoHeader\");\n  document.getElementById(\"analizy\").appendChild(header);\n  const skladnikiOkregu = document.createElement(\"p\");\n  skladnikiOkregu.setAttribute(\"class\", 'skladniki_okregu')\n  skladnikiOkregu.innerHTML = województwo ? `województwo: <b>${województwo}</b>` : '';\n  skladnikiOkregu.innerHTML += powiaty ? `<b>powiaty</b>: ${powiaty.join(', ')}` : '';\n  skladnikiOkregu.innerHTML += powiaty && miasta ? \"<br/>\" : \"\";\n  skladnikiOkregu.innerHTML += miasta ? `<b>miasta</b>: ${miasta.join(\", \")}` : \"\";\n  document.getElementById(\"analizy\").appendChild(skladnikiOkregu);\n\n  wstawRekomendowaneLogos(okreg, document.getElementById(\"analizy\"));\n\n  wszystkieRekomendacje[okreg.miasto] = {\n    nazwaOkregu: okreg.miasto,\n    nrOkregu: okreg.nr,\n    rekomendacjePartii: komentarze[okreg.miasto].rekomendacjePartii,\n  };\n\n  const kontener = document.createElement(\"div\");\n  const wykres = document.createElement(\"div\");\n  const wykresDemo = document.createElement(\"div\");\n  const naglowek = document.createElement(\"h3\");\n\n  kontener.setAttribute(\"class\", \"kontener\");\n\n  naglowek.innerHTML = \"Prawdopodobieństwo podziału mandatów\";\n  document.getElementById(\"analizy\").appendChild(naglowek);\n\n  wykres.setAttribute(\"class\", \"wykres\");\n  wykres.setAttribute(\"id\", \"Miasto\" + okreg.miasto);\n  wykresDemo.setAttribute(\"class\", \"wykres\");\n  wykresDemo.setAttribute(\"id\", \"Miasto\" + okreg.miasto + \"Demo\");\n\n  kontener.appendChild(wykres);\n  kontener.appendChild(wykresDemo);\n  document.getElementById(\"analizy\").appendChild(kontener);\n  const tekst = document.createElement(\"p\");\n  tekst.setAttribute(\"style\", \"margin-bottom: 30px; \");\n  tekst.innerHTML = interpretacjaWykresuRozkladuDemo(\n    wykresRozkladuDemo,\n    okreg\n  );\n  document.getElementById(\"analizy\").appendChild(tekst);\n  const tekstHistogramy = document.createElement(\"p\");\n  tekstHistogramy.setAttribute(\"style\", \"margin-bottom: 15px; \");\n  tekstHistogramy.innerHTML = 'Wykresy poniżej pokazują prawdopodobieństwo poparcia danej partii. Im wyższy słupek, tym większa szansa, że partia dostanie określony procent głosów.'\n  document.getElementById(\"analizy\").appendChild(tekstHistogramy);\n  rysujHistogramy(\n    okreg,\n    histogram,\n    procentyWOkreguSrednia,\n    odchylenieWOkregu,\n    minimumMandatow\n  );\n\n  function getFirstXEntries(\n    obj: Sondaze,\n    x: number\n  ): Sondaze {\n    return Object.keys(obj)\n      .slice(0, x)\n      .reduce((acc, key) => {\n        acc[key] = obj[key];\n        return acc;\n      }, {} as Sondaze);\n  }\n\n  rysujWynikWyborow(wykresRozkladuDemo, \"Miasto\" + okreg.miasto, {\n    poziomo: true,\n    laczOpozycje: true,\n  });\n  const mandaty = NaPolDemo(PodzialMandatowWOkregu(\n    WYNIKI_2023[okreg.nr - 1],\n    okreg,\n    { log: false, inputWGlosach: true }\n  ));\n  rysujWynikWyborow(\n    { PKW: mandaty, ...wykresRozkladu }, \n    \"Miasto\" + okreg.miasto + \"Demo\", \n      {\n      poziomo: true,\n      laczOpozycje: false,\n    });\n  // Rysuj kopie przy mapie\n  rysujWynikWyborow(wykresRozkladuDemo,\n    \"WykresMiasto\" + okreg.miasto,\n    {\n      poziomo: true,\n      laczOpozycje: true,\n    }\n  );\n  rysujWynikWyborow(getFirstXEntries(wykresRozkladu, 6), \"WykresMiasto\" + okreg.miasto + \"Demo\", {\n    poziomo: true,\n    laczOpozycje: false,\n  });\n\n  // Opcjonalne...\n  // const symulacje = document.createElement(\"p\");\n  // symulacje.setAttribute(\"class\", \"symulacje\");\n  // let tabelka = '<table>';\n  // tabelka +=\n  //   \"<th>Partia</th><th>Ostatni mandat</th><th>Zagrożenie</th><th>Dawca głosów</th><th>Szansa</th>\";\n  // for (const partia of [\"KO\", \"TD\", \"LEWICA\"]) {\n  //   tabelka += `<tr><td>${partia}</td><td>${Math.round(\n  //     (100 * ostatnieMandaty[partia]) / ILE_SYMULACJI\n  //   )}%</td><td>${Math.round(\n  //     (100 * zagrozoneMandaty[partia]) / ILE_SYMULACJI\n  //   )}%</td><td>${Math.round(\n  //     (100 * dawcyGlosow[partia]) / ILE_SYMULACJI\n  //   )}%</td><td>${Math.round(\n  //     (100 * potencjalneMandaty[partia]) / ILE_SYMULACJI\n  //   )}%</td></tr>`;\n  // }\n  // let legenda = \"<b>Ostatni mandat</b> oznacza w ilu procent symulacji partia bierze ostatni przydzielony mandat, co jest najbardziej efektywne wykorzystanie, ale i ryzykowne gdyby głosów było mniej niż wypadło w symulacji.<br/> \"\n  // legenda +=\n  //   `<b>Zagrożenie</b> oznacza w ilu procent symulacji partia zdobywa do 20% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Jest to efektywne, ale wiąże się z ryzykiem, choć nie aż takim jak ostatni mandat.<br/> `;\n  // legenda += `<b>Dawca głosów</b> oznacza w ilu procent symulacji partia zdobywa między 25% a 75% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Taki mandat jest bezpieczny, choć nie bardzo efektywny, można więc myśleć o wykorzystaniu tych głosów gdzie indziej.<br/>`;\n  // legenda += `<b>Szansa</b> oznacza w ilu procent symulacji partia zdobywa ponad 80% ceny mandatu powyżej tego co niezbędne do wzięcia jej ostatniego mandatu. Jest to sytuacja, w której zdobycie kolejnego mandatu jest \"blisko\".<br/>`;\n  // symulacje.innerHTML = tabelka + \"</table>\" + legenda;\n  // document.getElementById(\"analizy\").appendChild(symulacje);\n}\n\n// window.onload = function() {\n  let nrOkregu = 1;\n  okregi.forEach((okreg) => {\n    const text = document.createElement(\"div\");\n    text.innerHTML = `<h2>${okreg.miasto} (${nrOkregu})</h2>`;\n    text.id = `${okreg.miasto}Info`;\n    text.className = \"info\";\n\n    wstawRekomendowaneLogos(okreg, text);\n\n    const kontener = document.createElement(\"div\");\n    kontener.setAttribute(\"class\", \"kontener\");\n    const wykres1 = document.createElement(\"div\");\n    wykres1.setAttribute(\"id\", \"WykresMiasto\" + okreg.miasto);\n    wykres1.setAttribute(\"class\", \"wykres\");\n    const wykres2 = document.createElement(\"div\");\n    wykres2.setAttribute(\"id\", \"WykresMiasto\" + okreg.miasto + 'Demo');\n    wykres2.setAttribute(\"class\", \"wykres\");\n    kontener.appendChild(wykres1);\n    kontener.appendChild(wykres2);\n    text.appendChild(kontener);\n\n    const kontenerHistogram = document.createElement(\"div\");\n    kontenerHistogram.setAttribute(\"class\", \"kontener\");\n    const graph = document.createElement(\"div\");\n    graph.setAttribute(\"id\", \"InfoMiasto\" + okreg.miasto);\n    graph.setAttribute(\"class\", \"wykres\");\n    kontenerHistogram.appendChild(graph);\n    const graph2 = document.createElement(\"div\");\n    graph2.setAttribute(\"id\", \"InfoMiasto2\" + okreg.miasto);\n    graph2.setAttribute(\"class\", \"wykres\");\n    kontenerHistogram.appendChild(graph2);\n    text.appendChild(kontenerHistogram);\n    const graph3 = document.createElement(\"div\");\n    graph3.setAttribute(\"id\", \"InfoMiasto3\" + okreg.miasto);\n    graph3.setAttribute(\"class\", \"wykres\");\n    text.appendChild(graph3);\n\n    document.getElementById(\"Info\").appendChild(text);\n    const icon = document.getElementById(okreg.miasto + 'Icon');\n    icon.addEventListener('mouseover', () => {\n      text.style.display = 'block';\n      document\n        .getElementsByClassName(\"placeholder\")[0]\n        .setAttribute(\"style\", \"display: none\");\n    });\n    icon.addEventListener(\"mouseout\", () => {\n      text.style.display = \"none\";\n      if (window.innerWidth > 768) {\n      document\n        .getElementsByClassName(\"placeholder\")[0]\n        .setAttribute(\"style\", \"display: block\");\n      }\n    });\n    nrOkregu++;\n  });\n  \n  let i = 0;\n  for (const okreg of okregi) {\n    setTimeout(() => RysujRozkladyWOkregu(sredniaSondazy, okreg, PODZIAL[++i]), 200 + i * 50);\n  }\n\n  window.addEventListener(\n    \"hashchange\",\n    function () {\n      let element = document.getElementById(location.hash.substring(1));\n      if (element) element.scrollIntoView();\n    },\n    false\n  );\n\n  // For initial page load:\n  if (location.hash) {\n      let element = document.getElementById(location.hash.substring(1));\n      if (element) element.scrollIntoView();\n  }\n\nfunction wstawRekomendowaneLogos(okreg: Okreg, text: HTMLElement) {\n  const rekomendacje = komentarze[okreg.miasto].rekomendacjePartii;\n  if (rekomendacje?.length && !(rekomendacje[0] === \"\")) {\n    const rekomendacjeLogos = document.createElement(\"div\");\n    const rekomendacjeHeader = document.createElement(\"h4\");\n    rekomendacjeHeader.innerHTML = `Nasza rekomendacja:`;\n    rekomendacjeLogos.appendChild(rekomendacjeHeader);\n    // rekomendacjeLogos.setAttribute(\"id\", \"RekomendacjeMiasto\" + okreg.miasto);\n    for (const partia of rekomendacje) {\n      const logoPartii = document.createElement(\"img\");\n      logoPartii.setAttribute(\"style\", \"padding: 0px 20px;\");\n      logoPartii.src = `${partia}.png`;\n      rekomendacjeLogos.appendChild(logoPartii);\n    }\n    text.appendChild(rekomendacjeLogos);\n    if (rekomendacje.length > 1) {\n      const aElement = document.getElementById(okreg.miasto + \"Icon\");\n      const path = aElement.getElementsByTagName(\"path\")[0];\n      path.setAttribute(\n        \"fill\",\n        `url(#stripes${rekomendacje[0].toLocaleLowerCase()}${rekomendacje[1].toLocaleLowerCase()})`\n      );\n    } else {\n      document.getElementById(okreg.miasto + \"Icon\").style.fill =\n        KOLOR_PARTII[komentarze[okreg.miasto].rekomendacjePartii[0]];\n    }\n    const komentarz = document.createElement(\"p\");\n    komentarz.innerHTML = `${komentarze[okreg.miasto].txt || ''}`;\n    text.appendChild(komentarz);\n  } else {\n    const rekomendacjeHeader = document.createElement(\"h4\");\n    rekomendacjeHeader.innerHTML = `Brak Rekomendacji`;\n    text.appendChild(rekomendacjeHeader);\n    const komentarz = document.createElement(\"p\");\n    komentarz.innerHTML = `${komentarze[okreg.miasto].txt || \"\"}`;\n    text.appendChild(komentarz);\n    document.getElementById(okreg.miasto + \"Icon\").style.fill = 'white';\n  }\n}\n\nfunction rysujHistogramy(okreg: Okreg, histogram: Histogram, wynikWOkregu: Wynik, odchylenieWOkregu: Wynik, minimumMandatow: Wynik) {\n  const histogramKontener = document.createElement(\"div\");\n  histogramKontener.setAttribute(\"class\", \"kontener\");\n  document.getElementById(\"analizy\").appendChild(histogramKontener);\n  const suma = Object.values(WYNIKI_2023).reduce((acc, cur) => {\n    return {\n      KO: acc.KO + cur.KO,\n      LEWICA: acc.LEWICA + cur.LEWICA,\n      KONF: acc.KONF + cur.KONF,\n      PIS: acc.PIS + cur.PIS,\n      TD: acc.TD + cur.TD,\n  }\n  }, { TD: 0, LEWICA: 0, PIS: 0, KONF: 0, KO: 0});\n  const sumaOkreg = Object.values(WYNIKI_2023[okreg.nr - 1]).reduce((acc, cur) => acc += cur, 0);\n  Object.entries(sredniaSondazy).forEach(([partia, procent]) => {\n    if ([\"PIS\", \"KONF\"].includes(partia)) {\n      return;\n    }\n    const elementName = okreg.miasto + \"Histogram\" + partia;\n    const wykresHistogram = document.createElement(\"div\");\n    wykresHistogram.setAttribute(\"id\", elementName);\n    wykresHistogram.setAttribute(\"class\", \"histogram\");\n    histogramKontener.appendChild(wykresHistogram);\n    const glosyWOkregu = WYNIKI_2023[okreg.nr - 1][partia] / sumaOkreg;\n    const procentyWOkreguWybory = `${Math.round(1000 * glosyWOkregu) / 10}%`;\n    // console.log(sumaOkreg, glosyWOkregu, procentyWOkreguWybory);\n    rysujHistogram(\n      histogram[partia],\n      elementName,\n      partia,\n      (Math.round(wynikWOkregu[partia] * 5) / 5).toString(),\n      procentyWOkreguWybory,\n      odchylenieWOkregu[partia],\n      minimumMandatow,\n      okreg\n    );\n    // Rysuj kopię obok mapy\n    if (\n      partia === 'KO'\n    ) {\n      rysujHistogram(\n        histogram[partia],\n        \"InfoMiasto\" + okreg.miasto,\n        partia,\n        (Math.round(wynikWOkregu[partia] * 5) / 5).toString(),\n        procentyWOkreguWybory,\n        odchylenieWOkregu[partia],\n        minimumMandatow,\n        okreg\n      );\n    }\n    if (\n      partia === 'TD'\n    ) {\n      rysujHistogram(\n        histogram[partia],\n        \"InfoMiasto2\" + okreg.miasto,\n        partia,\n        (Math.round(wynikWOkregu[partia] * 5) / 5).toString(),\n        procentyWOkreguWybory,\n        odchylenieWOkregu[partia],\n        minimumMandatow,\n        okreg\n      );\n    }\n    if (\n      partia === \"LEWICA\"\n    ) {\n      rysujHistogram(\n        histogram[partia],\n        \"InfoMiasto3\" + okreg.miasto,\n        partia,\n        (Math.round(wynikWOkregu[partia] * 5) / 5).toString(),\n        procentyWOkreguWybory,\n        odchylenieWOkregu[partia],\n        minimumMandatow,\n        okreg\n      );\n    }\n  });\n}\n\nfunction interpretacjaWykresuRozkladuDemo(wykresRozkladuDemo: Sondaze, okreg: Okreg):string {\n  const podstawowyScenariusz = Object.entries(wykresRozkladuDemo)[0];\n  const drugiScenariusz = Object.entries(wykresRozkladuDemo)[1];\n\n  const szansa = drugiScenariusz[1].DEMO > podstawowyScenariusz[1].DEMO;\n\n  return `W okręgu ${okreg.miasto} z  prawdopodobieństwem ${podstawowyScenariusz[0]} ` +\n    `demokratyczna opozycja  zdobędzie ${\n      podstawowyScenariusz[1].DEMO\n    } ${odmianaSlowaMandat(podstawowyScenariusz[1].DEMO)} ` +\n    `a PiS i Konfederacja zdobędą ${\n      podstawowyScenariusz[1].NIEDEMO\n    } ${odmianaSlowaMandat(podstawowyScenariusz[1].NIEDEMO)}. ` +\n    (drugiScenariusz !==\n    undefined \n    ? (szansa\n        ? `Jest ${drugiScenariusz[0]} szans, że `\n        : `Istnieje ${drugiScenariusz[0]} ryzyko, że `) +\n        `demokratyczna opozycja zdobędzie ${\n          drugiScenariusz[1].DEMO\n        } ${odmianaSlowaMandat(drugiScenariusz[1].DEMO)} ` +\n        `a PiS i Konfederacja zdobędą ${\n          drugiScenariusz[1].NIEDEMO\n        } ${odmianaSlowaMandat(drugiScenariusz[1].NIEDEMO)}. <br/>`\n    : \"<br/>\");\n}\n\n","import { KOLOR_PARTII } from \"./dane\";\nimport { ILE_SYMULACJI, Okreg, PoparciePartii, Sondaze, Wynik } from \"./typy\";\nimport Chart, { ChartItem } from \"chart.js/auto\";\nimport Color from 'color';\n\nexport function rysujWynikWyborow(wynikWyborow: Sondaze, targetElement: string, options: { poziomo?: boolean, laczOpozycje?: boolean, calySejm?: boolean } = {}) {\n  const canvas = document.createElement(\"canvas\");\n  document.getElementById(targetElement).appendChild(canvas);\n    new Chart(canvas as ChartItem, {\n      type: \"bar\",\n      data: {\n        labels: Object.entries(wynikWyborow).map(([sondaz, wynik]) =>\n          sondaz.toString()\n        ),\n        datasets: !options.laczOpozycje\n          ? [\n              {\n                label: \"Lewica\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.LEWICA),\n                backgroundColor: KOLOR_PARTII[\"LEWICA\"],\n              },\n              {\n                label: \"KO\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.KO),\n                backgroundColor: KOLOR_PARTII[\"KO\"],\n              },\n              {\n                label: \"Trzecia Droga\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.TD),\n                backgroundColor: KOLOR_PARTII[\"TD\"],\n              },\n              {\n                label: \"PiS + Konfederacja\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.NIEDEMO),\n                backgroundColor: \"rgb(128, 0, 32)\",\n              },\n            ]\n          : [\n              {\n                label: \"Opozycja Demokratyczna\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.DEMO),\n                backgroundColor: \"#E56701\",\n              },\n              {\n                label: \"PiS + Konfederacja\",\n                data: Object.values(wynikWyborow).map((wynik) => wynik.NIEDEMO),\n                backgroundColor: \"rgb(128, 0, 32)\",\n              },\n            ],\n      },\n      options: options?.poziomo\n        ? {\n            indexAxis: \"y\",\n            scales: {\n              x: {\n                stacked: true,\n                max: options?.calySejm ? 460 : null,\n                afterBuildTicks: options?.calySejm\n                  ? (axis) =>\n                      (axis.ticks = [0, 230, 460].map((v) => ({ value: v })))\n                  : null,\n              },\n              y: {\n                stacked: true,\n              },\n            },\n          }\n        : {},\n    });\n}\n\nexport function odmianaSlowaMandat(mandaty: number) {\n  return [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].includes(mandaty)\n              ? \"mandatów\"\n              : mandaty > 1\n              ? \"mandaty\"\n              : \"mandat\"\n}\n\nexport function rysujHistogram(\n  histogram: PoparciePartii,\n  targetElement: string,\n  partia: string,\n  procentZSondazy: string,\n  procentZWyborow: string,\n  odchylenie: number,\n  minimumMandatow: Wynik,\n  okreg: Okreg\n) {\n  const canvas = document.createElement(\"canvas\");\n  document.getElementById(targetElement).appendChild(canvas);\n  const color = KOLOR_PARTII[partia];\n  const procenty = Object.keys(histogram).sort(\n    (a, b) => Number.parseFloat(b) - Number.parseFloat(a)\n  );\n\n  const footer = (tooltipItems) => {\n    let sum = 0;\n\n    tooltipItems.forEach(function (tooltipItem) {\n      sum += Number(tooltipItem.label.split(\"%\")[0]) * okreg.glosy2019;\n    });\n    return \"Głosów: \" + Math.round(sum / 100);\n  };\n\n  new Chart(canvas as ChartItem, {\n    type: \"bar\",\n    data: {\n      labels: procenty.map((procent) => `${procent}%`),\n      datasets: (partia === \"KO\" || [3, 19].includes(okreg.nr)\n        ? [\n            {\n              label: `${minimumMandatow[partia] + 4} ${odmianaSlowaMandat(\n                minimumMandatow[partia] + 4\n              )}`,\n              data: procenty.map(\n                (procent) =>\n                  ((histogram[procent][String(minimumMandatow[partia] + 4)] ||\n                    0) /\n                    ILE_SYMULACJI) *\n                  100\n              ),\n              backgroundColor: Color(color).darken(0.4).toString(),\n            },\n            {\n              label: `${minimumMandatow[partia] + 3} ${odmianaSlowaMandat(\n                minimumMandatow[partia] + 3\n              )}`,\n              data: procenty.map(\n                (procent) =>\n                  ((histogram[procent][String(minimumMandatow[partia] + 3)] ||\n                    0) /\n                    ILE_SYMULACJI) *\n                  100\n              ),\n              backgroundColor: Color(color).darken(0.2).toString(),\n            },\n          ]\n        : []\n      ).concat([\n        {\n          label: `${minimumMandatow[partia] + 2} ${odmianaSlowaMandat(\n            minimumMandatow[partia] + 2\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia] + 2)] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: color,\n        },\n        {\n          label: `${minimumMandatow[partia] + 1} ${odmianaSlowaMandat(\n            minimumMandatow[partia] + 1\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia] + 1)] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: Color(color).fade(0.4).toString(),\n        },\n        {\n          label: `${minimumMandatow[partia]} ${odmianaSlowaMandat(\n            minimumMandatow[partia]\n          )}`,\n          data: procenty.map(\n            (procent) =>\n              ((histogram[procent][String(minimumMandatow[partia])] || 0) /\n                ILE_SYMULACJI) *\n              100\n          ),\n          backgroundColor: Color(color).fade(0.8).toString(),\n        },\n      ]),\n    },\n    options: {\n      plugins: {\n        legend: {\n          title: {\n            display: true,\n            text: `Faktyczny/przewidywany wynik dla ${partia}: ${procentZWyborow} / ${procentZSondazy}%, σ: ${\n              Math.round(odchylenie * 10) / 10\n            }`,\n            color: \"black\",\n            font: {\n              size: 15,\n            },\n          },\n        },\n        tooltip: {\n          callbacks: {\n            footer: footer,\n          },\n        },\n      },\n      scales: {\n        x: {\n          stacked: true,\n        },\n        y: {\n          display: false,\n          stacked: true,\n        },\n      },\n    },\n  });\n  const tekst = document.createElement(\"p\");\n  // tekst.setAttribute(\"style\", \"\");\n  // tekst.innerHTML = interpretacjaHistogramu(partia, String(minimumMandatow[partia]), histogram);\n  document.getElementById(targetElement).appendChild(tekst);\n}\n\n// function extractProcent(poparcie: PoparciePartii) {\n//   return Number(poparcie.procent);\n// }\n\n// function interpretacjaHistogramu(partia: string, oczekiwaneMandaty: string, histogram: PoparciePartii) {\n//   const procentyOczekiwanych = Object.entries(histogram).filter(\n//     ([ mandaty, czestosc ]) => mandaty === oczekiwaneMandaty\n//   );\n//   const minProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n//     extractProcent(curr) < extractProcent(acc) ? curr : acc\n//   );\n//   const maxProcentDoOczekiwanych = procentyOczekiwanych.reduce((acc, curr) =>\n//     extractProcent(curr) > extractProcent(acc) ? curr : acc\n//   );\n\n//   let tekst = `Jeśli ${partia} otrzyma`;\n//   // Nie podajemy dolnego zakresu, gdy oczekujemy 0 mandatów\n//   tekst += oczekiwaneMandaty\n//     ? ` od ${Math.max(extractProcent(minProcentDoOczekiwanych), 0)}%`\n//     : \"\";\n//   tekst += ` do ${\n//     maxProcentDoOczekiwanych.procent\n//   }% głosów, to zdobędzie ${oczekiwaneMandaty} ${odmianaSlowaMandat(\n//     oczekiwaneMandaty\n//   )}.`;\n//   return tekst;\n// }","export const PODZIAL = {\n  \"1\": {\n    \"powiaty\": [\n      \"bolesławiecki\",\n      \"głogowski\",\n      \"jaworski\",\n      \"kamiennogórski\",\n      \"karkonoski\",\n      \"legnicki\",\n      \"lubański\",\n      \"lubiński\",\n      \"lwówecki\",\n      \"polkowicki\",\n      \"zgorzelecki\",\n      \"złotoryjski\"\n    ],\n    \"miasta\": [\"Jelenia Góra\", \"Legnica\"]\n  },\n  \"2\": {\n    \"powiaty\": [\n      \"dzierżoniowski\",\n      \"kłodzki\",\n      \"świdnicki\",\n      \"wałbrzyski\",\n      \"ząbkowicki\"\n    ],\n    \"miasta\": [\"Wałbrzych\"]\n  },\n  \"3\": {\n    \"powiaty\": [\n      \"górowski\",\n      \"milicki\",\n      \"oleśnicki\",\n      \"oławski\",\n      \"strzeliński\",\n      \"średzki\",\n      \"trzebnicki\",\n      \"wołowski\",\n      \"wrocławski\"\n    ],\n    \"miasta\": [\"Wrocław\"]\n  },\n  \"4\": {\n    \"powiaty\": [\n      \"bydgoski\",\n      \"inowrocławski\",\n      \"mogileński\",\n      \"nakielski\",\n      \"sępoleński\",\n      \"świecki\",\n      \"tucholski\",\n      \"żniński\"\n    ],\n    \"miasta\": [\"Bydgoszcz\"]\n  },\n  \"5\": {\n    \"powiaty\": [\n      \"aleksandrowski\",\n      \"brodnicki\",\n      \"chełmiński\",\n      \"golubsko-dobrzyński\",\n      \"grudziądzki\",\n      \"lipnowski\",\n      \"radziejowski\",\n      \"rypiński\",\n      \"toruński\",\n      \"wąbrzeski\",\n      \"włocławski\"\n    ],\n    \"miasta\": [\"Grudziądz\", \"Toruń\", \"Włocławek\"]\n  },\n  \"6\": {\n    \"powiaty\": [\n      \"janowski\",\n      \"kraśnicki\",\n      \"lubartowski\",\n      \"lubelski\",\n      \"łęczyński\",\n      \"łukowski\",\n      \"opolski\",\n      \"puławski\",\n      \"rycki\",\n      \"świdnicki\"\n    ],\n    \"miasta\": [\"Lublin\"]\n  },\n  \"7\": {\n    \"powiaty\": [\n      \"bialski\",\n      \"biłgorajski\",\n      \"chełmski\",\n      \"hrubieszowski\",\n      \"krasnostawski\",\n      \"parczewski\",\n      \"radzyński\",\n      \"tomaszowski\",\n      \"włodawski\",\n      \"zamojski\"\n    ],\n    \"miasta\": [\"Biała Podlaska\", \"Chełm\", \"Zamość\"]\n  },\n  \"8\": {\n    \"województwo\": \"lubuskie\"\n  },\n  \"9\": {\n    \"powiaty\": [\"brzeziński\", \"łódzki wschodni\"],\n    \"miasta\": [\"Łódź\"]\n  },\n  \"10\": {\n    \"powiaty\": [\n      \"bełchatowski\",\n      \"opoczyński\",\n      \"piotrkowski\",\n      \"radomszczański\",\n      \"rawski\",\n      \"skierniewicki\",\n      \"tomaszowski\"\n    ],\n    \"miasta\": [\"Piotrków Trybunalski\", \"Skierniewice\"]\n  },\n  \"11\": {\n    \"powiaty\": [\n      \"kutnowski\",\n      \"łaski\",\n      \"łęczycki\",\n      \"łowicki\",\n      \"pabianicki\",\n      \"pajęczański\",\n      \"poddębicki\",\n      \"sieradzki\",\n      \"wieluński\",\n      \"wieruszowski\",\n      \"zduńskowolski\",\n      \"zgierski\"\n    ]\n  },\n  \"12\": {\n    \"powiaty\": [\n      \"chrzanowski\",\n      \"myślenicki\",\n      \"oświęcimski\",\n      \"suski\",\n      \"wadowicki\"\n    ]\n  },\n  \"13\": {\n    \"powiaty\": [\"krakowski\", \"miechowski\", \"olkuski\"],\n    \"miasta\": [\"Kraków\"]\n  },\n  \"14\": {\n    \"powiaty\": [\n      \"gorlicki\",\n      \"limanowski\",\n      \"nowosądecki\",\n      \"nowotarski\",\n      \"tatrzański\"\n    ],\n    \"miasta\": [\"Nowy Sącz\"]\n  },\n  \"15\": {\n    \"powiaty\": [\n      \"bocheński\",\n      \"brzeski\",\n      \"dąbrowski\",\n      \"proszowicki\",\n      \"tarnowski\",\n      \"wielicki\"\n    ],\n    \"miasta\": [\"Tarnów\"]\n  },\n  \"16\": {\n    \"powiaty\": [\n      \"ciechanowski\",\n      \"gostyniński\",\n      \"mławski\",\n      \"płocki\",\n      \"płoński\",\n      \"przasnyski\",\n      \"sierpecki\",\n      \"sochaczewski\",\n      \"żuromiński\",\n      \"żyrardowski\"\n    ],\n    \"miasta\": [\"Płock\"]\n  },\n  \"17\": {\n    \"powiaty\": [\n      \"białobrzeski\",\n      \"grójecki\",\n      \"kozienicki\",\n      \"lipski\",\n      \"przysuski\",\n      \"radomski\",\n      \"szydłowiecki\",\n      \"zwoleński\"\n    ],\n    \"miasta\": [\"Radom\"]\n  },\n  \"18\": {\n    \"powiaty\": [\n      \"garwoliński\",\n      \"łosicki\",\n      \"makowski\",\n      \"miński\",\n      \"ostrołęcki\",\n      \"ostrowski\",\n      \"pułtuski\",\n      \"siedlecki\",\n      \"sokołowski\",\n      \"węgrowski\",\n      \"wyszkowski\"\n    ],\n    \"miasta\": [\"Ostrołęka\", \"Siedlce\"]\n  },\n  \"19\": {\n    \"miasta\": [\"Warszawa\"]\n  },\n  \"20\": {\n    \"powiaty\": [\n      \"grodziski\",\n      \"legionowski\",\n      \"nowodworski\",\n      \"otwocki\",\n      \"piaseczyński\",\n      \"pruszkowski\",\n      \"warszawski zachodni\",\n      \"wołomiński\"\n    ]\n  },\n  \"21\": {\n    \"województwo\": \"opolskie\"\n  },\n  \"22\": {\n    \"powiaty\": [\n      \"bieszczadzki\",\n      \"brzozowski\",\n      \"jarosławski\",\n      \"jasielski\",\n      \"krośnieński\",\n      \"leski\",\n      \"lubaczowski\",\n      \"przemyski\",\n      \"przeworski\",\n      \"sanocki\",\n      \"Krosno\",\n      \"Przemyśl\"\n    ]\n  },\n  \"23\": {\n    \"powiaty\": [\n      \"dębicki\",\n      \"kolbuszowski\",\n      \"leżajski\",\n      \"łańcucki\",\n      \"mielecki\",\n      \"niżański\",\n      \"ropczycko-sędziszowski\",\n      \"rzeszowski\",\n      \"stalowowolski\",\n      \"strzyżowski\",\n      \"tarnobrzeski\",\n      \"Rzeszów\",\n      \"Tarnobrzeg\"\n    ]\n  },\n  \"24\": {\n    \"województwo\": \"podlaskie\"\n  },\n  \"25\": {\n    \"powiaty\": [\n      \"gdański\",\n      \"kwidzyński\",\n      \"malborski\",\n      \"nowodworski\",\n      \"starogardzki\",\n      \"sztumski\",\n      \"tczewski\"\n    ],\n    \"miasta\": [\"Gdańsk\", \"Sopot\"]\n  },\n  \"26\": {\n    \"powiaty\": [\n      \"bytowski\",\n      \"chojnicki\",\n      \"człuchowski\",\n      \"kartuski\",\n      \"kościerski\",\n      \"lęborski\",\n      \"pucki\",\n      \"słupski\",\n      \"wejherowski\"\n    ],\n    \"miasta\": [\"Gdynia\", \"Słupsk\"]\n  },\n  \"27\": {\n    \"powiaty\": [\"bielski\", \"cieszyński\", \"pszczyński\", \"żywiecki\"],\n    \"miasta\": [\"Bielsko-Biała\"]\n  },\n  \"28\": {\n    \"powiaty\": [\"częstochowski\", \"kłobucki\", \"lubliniecki\", \"myszkowski\"],\n    \"miasta\": [\"Częstochowa\"]\n  },\n  \"29\": {\n    \"powiaty\": [\"gliwicki\", \"tarnogórski\"],\n    \"miasta\": [\"Bytom\", \"Gliwice\", \"Zabrze\"]\n  },\n  \"30\": {\n    \"powiaty\": [\"mikołowski\", \"raciborski\", \"rybnicki\", \"wodzisławski\"],\n    \"miasta\": [\"Jastrzębie-Zdrój\", \"Rybnik\", \"Żory\"]\n  },\n  \"31\": {\n    \"powiaty\": [\"bieruńsko-lędziński\"],\n    \"miasta\": [\n      \"Chorzów\",\n      \"Katowice\",\n      \"Mysłowice\",\n      \"Piekary Śląskie\",\n      \"Ruda Śląska\",\n      \"Siemianowice Śląskie\",\n      \"Świętochłowice\",\n      \"Tychy\"\n    ]\n  },\n  \"32\": {\n    \"powiaty\": [\"będziński\", \"zawierciański\"],\n    \"miasta\": [\"Dąbrowa Górnicza\", \"Jaworzno\", \"Sosnowiec\"]\n  },\n  \"33\": {\n    \"województwo\": \"świętokrzyskie\"\n  },\n  \"34\": {\n    \"powiaty\": [\n      \"bartoszycki\",\n      \"braniewski\",\n      \"działdowski\",\n      \"elbląski\",\n      \"iławski\",\n      \"lidzbarski\",\n      \"nowomiejski\",\n      \"ostródzki\"\n    ],\n    \"miasta\": [\"Elbląg\"]\n  },\n  \"35\": {\n    \"powiaty\": [\n      \"ełcki\",\n      \"giżycki\",\n      \"gołdapski\",\n      \"kętrzyński\",\n      \"mrągowski\",\n      \"nidzicki\",\n      \"olecki\",\n      \"olsztyński\",\n      \"piski\",\n      \"szczycieński\",\n      \"węgorzewski\"\n    ],\n    \"miasta\": [\"Olsztyn\"]\n  },\n  \"36\": {\n    \"powiaty\": [\n      \"gostyński\",\n      \"jarociński\",\n      \"kaliski\",\n      \"kępiński\",\n      \"kościański\",\n      \"krotoszyński\",\n      \"leszczyński\",\n      \"ostrowski\",\n      \"ostrzeszowski\",\n      \"pleszewski\",\n      \"rawicki\"\n    ],\n    \"miasta\": [\"Kalisz\", \"Leszno\"]\n  },\n  \"37\": {\n    \"powiaty\": [\n      \"gnieźnieński\",\n      \"kolski\",\n      \"koniński\",\n      \"słupecki\",\n      \"średzki\",\n      \"śremski\",\n      \"turecki\",\n      \"wrzesiński\"\n    ],\n    \"miasta\": [\"Konin\"]\n  },\n  \"38\": {\n    \"powiaty\": [\n      \"chodzieski\",\n      \"czarnkowsko-trzcianecki\",\n      \"grodziski\",\n      \"międzychodzki\",\n      \"nowotomyski\",\n      \"obornicki\",\n      \"pilski\",\n      \"szamotulski\",\n      \"wągrowiecki\",\n      \"wolsztyński\",\n      \"złotowski\"\n    ]\n  },\n  \"39\": {\n    \"powiaty\": [\"poznański\", \"Poznań\"]\n  },\n  \"40\": {\n    \"powiaty\": [\n      \"białogardzki\",\n      \"choszczeński\",\n      \"drawski\",\n      \"kołobrzeski\",\n      \"koszaliński\",\n      \"sławieński\",\n      \"szczecinecki\",\n      \"świdwiński\",\n      \"wałecki\"\n    ],\n    \"miasta\": [\"Koszalin\"]\n  },\n  \"41\": {\n    \"powiaty\": [\n      \"goleniowski\",\n      \"gryficki\",\n      \"gryfiński\",\n      \"kamieński\",\n      \"łobeski\",\n      \"myśliborski\",\n      \"policki\",\n      \"pyrzycki\",\n      \"stargardzki\"\n    ],\n    \"miasta\": [\"Szczecin\", \"Świnoujście\"]\n  }\n}\n","import { Sondaze } from \"./typy\";\n\nexport const WYNIKI_2023 = [\n  {\n    TD: 53958,\n    LEWICA: 47715,\n    PIS: 174643,\n    KONF: 31770,\n    KO: 169540,\n  },\n  {\n    TD: 39215,\n    LEWICA: 25806,\n    PIS: 107797,\n    KONF: 19478,\n    KO: 120188,\n  },\n  {\n    TD: 106624,\n    LEWICA: 88089,\n    PIS: 206899,\n    KONF: 54132,\n    KO: 286713,\n  },\n  {\n    TD: 80426,\n    LEWICA: 52959,\n    PIS: 162603,\n    KONF: 34266,\n    KO: 186914,\n  },\n  {\n    TD: 84308,\n    LEWICA: 60473,\n    PIS: 183131,\n    KONF: 34232,\n    KO: 158719,\n  },\n  {\n    TD: 102894,\n    LEWICA: 37083,\n    PIS: 294847,\n    KONF: 54325,\n    KO: 131712,\n  },\n  {\n    TD: 59577,\n    LEWICA: 25691,\n    PIS: 231882,\n    KONF: 35594,\n    KO: 79501,\n  },\n  {\n    TD: 77933,\n    LEWICA: 47911,\n    PIS: 143530,\n    KONF: 33672,\n    KO: 195091,\n  },\n  {\n    TD: 54283,\n    LEWICA: 55770,\n    PIS: 122433,\n    KONF: 25428,\n    KO: 187527,\n  },\n  {\n    TD: 54479,\n    LEWICA: 25340,\n    PIS: 184929,\n    KONF: 30247,\n    KO: 86083,\n  },\n  {\n    TD: 77313,\n    LEWICA: 41188,\n    PIS: 221031,\n    KONF: 36383,\n    KO: 138038,\n  },\n  {\n    TD: 54585,\n    LEWICA: 22036,\n    PIS: 156308,\n    KONF: 28754,\n    KO: 88408,\n  },\n  {\n    TD: 127693,\n    LEWICA: 83633,\n    PIS: 232430,\n    KONF: 58435,\n    KO: 232799,\n  },\n  {\n    TD: 49487,\n    LEWICA: 13594,\n    PIS: 229587,\n    KONF: 37301,\n    KO: 68804,\n  },\n  {\n    TD: 75229,\n    LEWICA: 16152,\n    PIS: 196433,\n    KONF: 32241,\n    KO: 68690,\n  },\n  {\n    TD: 75526,\n    LEWICA: 28848,\n    PIS: 195218,\n    KONF: 28877,\n    KO: 99146,\n  },\n  {\n    TD: 54690,\n    LEWICA: 20874,\n    PIS: 190418,\n    KONF: 28593,\n    KO: 82003,\n  },\n  {\n    TD: 83681,\n    LEWICA: 26149,\n    PIS: 262236,\n    KONF: 44299,\n    KO: 100902,\n  },\n  {\n    TD: 227127,\n    LEWICA: 230648,\n    PIS: 345380,\n    KONF: 124220,\n    KO: 741286,\n  },\n  {\n    TD: 110086,\n    LEWICA: 51556,\n    PIS: 231905,\n    KONF: 51573,\n    KO: 257470,\n  },\n  {\n    TD: 61155,\n    LEWICA: 34763,\n    PIS: 150022,\n    KONF: 31150,\n    KO: 161241,\n  },\n  {\n    TD: 60938,\n    LEWICA: 19750,\n    PIS: 241790,\n    KONF: 38080,\n    KO: 70054,\n  },\n  {\n    TD: 83676,\n    LEWICA: 32828,\n    PIS: 347688,\n    KONF: 63854,\n    KO: 119259,\n  },\n  {\n    TD: 114898,\n    LEWICA: 29478,\n    PIS: 258277,\n    KONF: 59648,\n    KO: 126971,\n  },\n  {\n    TD: 90599,\n    LEWICA: 57967,\n    PIS: 155318,\n    KONF: 38406,\n    KO: 257009,\n  },\n  {\n    TD: 92793,\n    LEWICA: 56887,\n    PIS: 199709,\n    KONF: 49203,\n    KO: 258909,\n  },\n  {\n    TD: 64778,\n    LEWICA: 34601,\n    PIS: 163506,\n    KONF: 34909,\n    KO: 127677,\n  },\n  {\n    TD: 47698,\n    LEWICA: 30497,\n    PIS: 117756,\n    KONF: 21256,\n    KO: 94313,\n  },\n  {\n    TD: 51681,\n    LEWICA: 35673,\n    PIS: 116827,\n    KONF: 26934,\n    KO: 139711,\n  },\n  {\n    TD: 47525,\n    LEWICA: 26117,\n    PIS: 145230,\n    KONF: 30527,\n    KO: 114404,\n  },\n  {\n    TD: 69825,\n    LEWICA: 44509,\n    PIS: 162458,\n    KONF: 35240,\n    KO: 193596,\n  },\n  {\n    TD: 37221,\n    LEWICA: 81646,\n    PIS: 112389,\n    KONF: 21512,\n    KO: 114519,\n  },\n  {\n    TD: 90975,\n    LEWICA: 45048,\n    PIS: 310266,\n    KONF: 43197,\n    KO: 137941,\n  },\n  {\n    TD: 46101,\n    LEWICA: 24269,\n    PIS: 105373,\n    KONF: 19590,\n    KO: 95410,\n  },\n  {\n    TD: 63007,\n    LEWICA: 31631,\n    PIS: 126432,\n    KONF: 27119,\n    KO: 129339,\n  },\n  {\n    TD: 87628,\n    LEWICA: 46222,\n    PIS: 194416,\n    KONF: 37838,\n    KO: 154990,\n  },\n  {\n    TD: 69740,\n    LEWICA: 39761,\n    PIS: 162192,\n    KONF: 29208,\n    KO: 100580,\n  },\n  {\n    TD: 72996,\n    LEWICA: 32378,\n    PIS: 120301,\n    KONF: 28370,\n    KO: 144114,\n  },\n  {\n    TD: 98589,\n    LEWICA: 73345,\n    PIS: 116666,\n    KONF: 35182,\n    KO: 262779,\n  },\n  {\n    TD: 39776,\n    LEWICA: 28101,\n    PIS: 101023,\n    KONF: 19379,\n    KO: 124625,\n  },\n  {\n    TD: 69957,\n    LEWICA: 52032,\n    PIS: 159575,\n    KONF: 32942,\n    KO: 222427,\n  },\n];\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$geIQo","$3i35a","$cWeek","$a4zWM","$h5k33","$75354d900d52c58f$export$a36ee161a0d45cdf","wynikWyborow","targetElement","options","canvas","document","createElement","getElementById","appendChild","type","data","labels","Object","entries","map","sondaz","wynik","toString","datasets","laczOpozycje","label","values","DEMO","backgroundColor","NIEDEMO","LEWICA","KOLOR_PARTII","KO","TD","poziomo","indexAxis","scales","x","stacked","max","calySejm","afterBuildTicks","axis","ticks","v","value","y","$75354d900d52c58f$export$2c8fd381c328f0c2","mandaty","includes","$75354d900d52c58f$export$7a22f047cf18a648","histogram","partia","procentZSondazy","procentZWyborow","odchylenie","minimumMandatow","okreg","color","procenty","keys","sort","b","Number","parseFloat","procent","nr","String","ILE_SYMULACJI","darken","concat","fade","plugins","legend","title","display","text","Math","round","font","size","tooltip","callbacks","footer","tooltipItems","sum","forEach","tooltipItem","split","glosy2019","tekst","$8VULN","$NqJwd","$35b215402a07a89b$export$eaffbf21335bfec8","$e2549e73b6707145$export$97482f0a6e0733a2","PIS","KONF","$48c197dd6713607d$var$dane","DANE","$48c197dd6713607d$var$wszystkieRekomendacje","$48c197dd6713607d$var$nrOkregu","okregi","innerHTML","miasto","className","$48c197dd6713607d$var$wstawRekomendowaneLogos","kontener","setAttribute","wykres1","wykres2","kontenerHistogram","graph","graph2","graph3","icon","addEventListener","style","getElementsByClassName","innerWidth","$48c197dd6713607d$var$i","setTimeout","$48c197dd6713607d$export$cd0c76de881f3583","lokalizacje","procentyWOkreguSrednia","odchylenieWOkregu","wykresRozkladu","wykresRozkladuDemo","zagrozoneMandaty","potencjalneMandaty","ostatnieMandaty","dawcyGlosow","powiaty","miasta","województwo","header","skladnikiOkregu","join","nazwaOkregu","nrOkregu","rekomendacjePartii","komentarze","wykres","wykresDemo","naglowek","$48c197dd6713607d$var$interpretacjaWykresuRozkladuDemo","podstawowyScenariusz","drugiScenariusz","szansa","undefined","tekstHistogramy","$48c197dd6713607d$var$rysujHistogramy","wynikWOkregu","histogramKontener","reduce","acc","cur","sumaOkreg","sredniaSondazy","elementName","wykresHistogram","glosyWOkregu","procentyWOkreguWybory","NaPolDemo","PodzialMandatowWOkregu","log","inputWGlosach","PKW","slice","key","obj","element","location","hash","substring","scrollIntoView","rekomendacje","length","rekomendacjeLogos","rekomendacjeHeader","logoPartii","src","aElement","path","getElementsByTagName","toLocaleLowerCase","fill","komentarz","txt"],"version":3,"file":"index.d197d0ca.js.map"}