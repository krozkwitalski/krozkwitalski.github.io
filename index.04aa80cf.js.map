{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,S,I,G,E,E,O,C,e,I,G,E,E,O,C,U,I,G,E,E,O,C,oB,I,G,E,E,O,C,U,I,G,E,E,O,C,iB,I,G,E,E,O,C,S,I,G,E,E,O,C,Y,I,GCGO,IAAM,EAAS,CAAC,SAAU,KAAM,KAAM,OAAQ,MAAM,CAE9C,EAAe,CAC1B,IAAK,mBACL,OAAQ,iBACR,KAAM,eACN,GAAI,oBACJ,GAAI,gBACJ,MAAO,kBACT,EAEa,EAAmB,CAC9B,aAAc,CACZ,IAAK,MACL,GAAI,KACJ,GAAI,KACJ,OAAQ,KACR,KAAM,IACR,EACA,kBAAmB,CACjB,IAAK,KACL,GAAI,KACJ,GAAI,GACJ,OAAQ,IACR,KAAM,GACR,EACA,kBAAmB,CACjB,IAAK,GACL,GAAI,KACJ,GAAI,KACJ,OAAQ,IACR,KAAM,GACR,EACA,cAAe,CACb,IAAK,MACL,GAAI,MACJ,GAAI,MACJ,OAAQ,MACR,KAAM,IACR,EACA,eAAgB,CACd,IAAK,KACL,GAAI,GACJ,GAAI,GACJ,OAAQ,IACR,KAAM,GACR,EACA,gBAAiB,CACf,IAAK,GACL,GAAI,GACJ,GAAI,GACJ,OAAQ,GACR,KAAM,CACR,EACA,eAAgB,CACd,IAAK,KACL,GAAI,KACJ,GAAI,KACJ,OAAQ,GACR,KAAM,GACR,EACA,eAAgB,CACd,IAAK,KACL,GAAI,GACJ,GAAI,KACJ,OAAQ,KACR,KAAM,GACR,CA2JF,EAEa,EAAoB,CAC/B,sCAAsC;AACtC,gDAAgD;AAChD,gDAAg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OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,OAAO,MAAM,OAAO,OAAO,CACnC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CACjC,CAAC,MAAM,MAAM,MAAM,OAAO,MAAM,CAChC,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CA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,EAAA,CAAK,EAAM,IAAA,CAAO,EAAM,MAAlE,CACM,EAAU,IAAI,EACpB,MAAO,CACL,IAAK,EAAM,GAAA,CAAM,EACjB,GAAI,EAAM,EAAA,CAAK,EACf,GAAI,EAAM,EAAA,CAAK,EACf,KAAM,EAAM,IAAA,CAAO,EACnB,OAAQ,EAAM,MAAA,CAAS,CACzB,CACF,CAuKO,SAAS,EAAgB,CAA6B,CAAE,CAAwB,CAAE,CAA2C,EAClI,IAAI,EAAsC,CAAC,EAC3C,IAAK,GAAM,CAAC,EAAQ,EAAQ,GAAI,OAAO,OAAA,CAAQ,GAAyB,CACtE,IAAM,EAAsB,KAAK,GAAA,CAAI,AAAA,CAAA,EAAA,EAAA,OAAK,AAAL,EAAO,MAAA,CAC1C,EACA,CAAiB,CAAC,EAAO,IACtB,EACL,CAAA,CAA4B,CAAC,EAAO,CAAG,CACzC,CACA,EAA+B,EAAgB,GAC/C,IAAI,EAAoC,CAAC,EACzC,IAAK,GAAM,CAAC,EAAQ,EAAQ,GAAI,OAAO,OAAA,CACrC,GACC,CACD,wEAAwE;AACxE,IAAM,EAAoB,CAAsB,CAAC,EAAO,CAClD,EAAS,CAAiB,CAAC,EAAO,CAClC,EAAoB,EACxB,KAAK,GAAA,CACH,KAAK,GAAA,CAAI,EAAS,EAAoB,AAjb1B,EAib0B,GACtC,KAAK,GAAA,CAAI,EAAoB,AAnblB,IAmbkB,EAAqB,IAEpD,CAAE,oEAAoE;CAExE,CAAA,CAA0B,CAAC,EAAO,CAAG,CACvC,CACA,MAAO,CAAE,6BAAA,EAA8B,2BAAA,CAA2B,CACpE,C,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,gB,I,GCnYO,IAAM,EAAgB,G,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,S,S,E,C,C,C,E,I,I,E,E,E,E,M,C,I,C,I,E,C,C,E,A,C,E,U,C,E,U,E,C,E,E,Y,C,C,E,U,G,C,E,Q,C,C,C,E,O,c,C,E,A,S,C,E,I,E,A,S,C,C,C,E,G,A,U,O,G,A,O,E,O,E,I,E,C,C,O,W,C,C,G,A,K,I,E,C,I,E,E,I,C,E,G,W,G,A,U,O,E,O,C,O,A,U,+C,C,M,A,C,A,W,E,O,M,E,E,E,E,U,M,A,U,O,E,E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,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KACtE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KACvE,KAAM,KACP,CACD,wHAAwH;AACxH,GAAI,CACF,aACJ,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,YACA,aACA,aACA,cACA,WACA,aACA,aACA,aACA,YACA,YACA,aACA,aACA,aACA,YACA,YACA,aACA,WACA,aACA,aACA,aACA,WACA,aACA,WACA,aACA,WACA,aACA,aACA,aACA,WACA,aACA,aAAgB,CACd,wHAAwH;AACxH,QAAS,CACP,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KACvE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KACnB,CACD,8BAA8B;AAC9B,wHAAwH;AACxH,GAAI,CACF,WACJ,YACA,aACA,YACA,aACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,aACA,aACA,WACA,aACA,aACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,aAAgB,CACd,QAAQ;AACR,QAAS,CACP,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9C,CACD,uHAAuH;AACvH,IAAK,CACH,aACJ,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,aACA,aACA,aACA,WACA,aACA,aACA,aACA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E,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,MAAO,kBAAmB,KAAK,EACpD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,IAAI,EAClD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EACnD,CAAE,kBAAmB,KAAM,kBAAmB,KAAK,EAClD,A,E,4D","sources":["<anon>","dane.ts","ordynacja.ts","typy.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/dist/random.module.js","node_modules/.pnpm/random@4.1.0/node_modules/random/src/rng.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/generators/function.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/rng-factory.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/validation.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform-int.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform-boolean.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/normal.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/log-normal.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/bernoulli.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/binomial.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/geometric.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/poisson.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/exponential.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/irwin-hall.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/bates.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/pareto.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/generators/math-random.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/random.ts","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","util.ts","rozklad_w_okregach.ts","node_modules/.pnpm/color@4.2.3/node_modules/color/index.js","node_modules/.pnpm/color-string@1.9.1/node_modules/color-string/index.js","node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js","node_modules/.pnpm/simple-swizzle@0.2.2/node_modules/simple-swizzle/index.js","node_modules/.pnpm/is-arrayish@0.3.2/node_modules/is-arrayish/index.js","node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js","node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js","node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js","komentarz.ts"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\nparcelRequire.register(\"geIQo\", function(module, exports) {\n\n$parcel$export(module.exports, \"PARTIE\", () => $d0bdfc9e83895ac0$export$54b30390056d406e);\n$parcel$export(module.exports, \"KOLOR_PARTII\", () => $d0bdfc9e83895ac0$export$802aa3ab0f758505);\n$parcel$export(module.exports, \"sondaze\", () => $d0bdfc9e83895ac0$export$f97acfc33e365d7);\n$parcel$export(module.exports, \"sondazeDoSredniej\", () => $d0bdfc9e83895ac0$export$76701ce0616caa92);\n$parcel$export(module.exports, \"srednia\", () => $d0bdfc9e83895ac0$export$9aace05d0b7af991);\n$parcel$export(module.exports, \"sredniaSondazy\", () => $d0bdfc9e83895ac0$export$8d735048c0d75c97);\n$parcel$export(module.exports, \"okregi\", () => $d0bdfc9e83895ac0$export$df58dec3b5376b15);\n$parcel$export(module.exports, \"glosy2019\", () => $d0bdfc9e83895ac0$export$1697adf3f88eb3ce);\nconst $d0bdfc9e83895ac0$export$54b30390056d406e = [\n    \"LEWICA\",\n    \"KO\",\n    \"TD\",\n    \"KONF\",\n    \"PIS\"\n];\nconst $d0bdfc9e83895ac0$export$802aa3ab0f758505 = {\n    PIS: \"rgb(38, 55, 120)\",\n    LEWICA: \"rgb(171,20,91)\",\n    KONF: \"rgb(0, 0, 0)\",\n    TD: \"rgb(220, 195, 16)\",\n    KO: \"rgb(0,68,149)\",\n    BIAŁY: \"rgb(255,255,255)\"\n};\nconst $d0bdfc9e83895ac0$export$f97acfc33e365d7 = {\n    PKW_20231017: {\n        PIS: 35.38,\n        KO: 30.7,\n        TD: 14.40,\n        LEWICA: 8.61,\n        KONF: 7.16\n    },\n    exitpoll_20231015: {\n        PIS: 36.8,\n        KO: 31.6,\n        TD: 13.0,\n        LEWICA: 8.6,\n        KONF: 6.2\n    },\n    Opinia24_20231013: {\n        PIS: 32.0,\n        KO: 27.5,\n        TD: 11.2,\n        LEWICA: 7.9,\n        KONF: 8.8\n    },\n    IBSP_20231013: {\n        PIS: 37.36,\n        KO: 27.77,\n        TD: 13.02,\n        LEWICA: 10.33,\n        KONF: 8.29\n    },\n    IBRiS_20231012: {\n        PIS: 33.9,\n        KO: 27.0,\n        TD: 11.0,\n        LEWICA: 9.7,\n        KONF: 8.2\n    },\n    Kantar_20231012: {\n        PIS: 30.0,\n        KO: 26.0,\n        TD: 12.0,\n        LEWICA: 11.0,\n        KONF: 8.0\n    },\n    IBRiS_20231011: {\n        PIS: 34.9,\n        KO: 28.1,\n        TD: 10.3,\n        LEWICA: 10.0,\n        KONF: 8.3\n    },\n    IBRiS_20231010: {\n        PIS: 33.5,\n        KO: 28.0,\n        TD: 10.9,\n        LEWICA: 10.1,\n        KONF: 9.2\n    }\n};\nconst $d0bdfc9e83895ac0$export$76701ce0616caa92 = {\n    // PKW_20231017: sondaze.PKW_20231017,\n    // exitpoll_20231015: sondaze.exitpoll_20231015,\n    // Opinia24_20231013: sondaze.Opinia24_20231013,\n    // IBSP_20231013: sondaze.IBSP_20231013,\n    // IBRiS_20231012: sondaze.IBRiS_20231012,\n    Kantar_20231012: $d0bdfc9e83895ac0$export$f97acfc33e365d7.Kantar_20231012,\n    IBRiS_20231011: $d0bdfc9e83895ac0$export$f97acfc33e365d7.IBRiS_20231011,\n    IBRiS_20231010: $d0bdfc9e83895ac0$export$f97acfc33e365d7.IBRiS_20231010\n};\nconst $d0bdfc9e83895ac0$export$9aace05d0b7af991 = {};\nconst $d0bdfc9e83895ac0$export$8d735048c0d75c97 = {};\nObject.entries($d0bdfc9e83895ac0$export$76701ce0616caa92).forEach(([sondaz, wynik])=>{\n    Object.entries(wynik).forEach(([partia, procent])=>$d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] ? $d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] += procent : $d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] = procent);\n});\nconst $d0bdfc9e83895ac0$var$sumaProcentow = Object.values($d0bdfc9e83895ac0$export$8d735048c0d75c97).reduce((acc, curr)=>acc += curr, 0) / Object.entries($d0bdfc9e83895ac0$export$76701ce0616caa92).length;\n// TODO @tomek warto zweryfikować, zwłaszcza zaokrąglenia\nObject.entries($d0bdfc9e83895ac0$export$8d735048c0d75c97).forEach(([partia, procent])=>{\n    $d0bdfc9e83895ac0$export$9aace05d0b7af991[partia] = $d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] / Object.entries($d0bdfc9e83895ac0$export$76701ce0616caa92).length;\n    $d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] = $d0bdfc9e83895ac0$export$8d735048c0d75c97[partia] / Object.entries($d0bdfc9e83895ac0$export$76701ce0616caa92).length * (100 / $d0bdfc9e83895ac0$var$sumaProcentow);\n});\nconst $d0bdfc9e83895ac0$export$8eedfbb484d171c = {\n    PIS: 43.59,\n    KO: 27.4,\n    LEWICA: 12.56,\n    PSL: 8.55,\n    KONF: 6.81\n};\nconst $d0bdfc9e83895ac0$export$df58dec3b5376b15 = [\n    {\n        nr: 1,\n        miasto: \"Legnica\",\n        mandaty: 12,\n        mandatyPKW: 11,\n        glosy2019: 432436,\n        wynik2019: {\n            KO: 25.02,\n            KONF: 5.85,\n            PSL: 7.17,\n            PIS: 42.4,\n            LEWICA: 16.43\n        }\n    },\n    {\n        nr: 2,\n        miasto: \"Wałbrzych\",\n        mandaty: 8,\n        mandatyPKW: 7,\n        glosy2019: 283002,\n        wynik2019: {\n            KO: 32.09,\n            KONF: 5.42,\n            PSL: 7.25,\n            PIS: 40.54,\n            LEWICA: 12.35\n        }\n    },\n    {\n        nr: 3,\n        miasto: \"Wrocław\",\n        mandaty: 14,\n        mandatyPKW: 15,\n        glosy2019: 654455,\n        wynik2019: {\n            KO: 32.8,\n            KONF: 7.45,\n            PSL: 6.46,\n            PIS: 34.67,\n            LEWICA: 15.41\n        }\n    },\n    {\n        nr: 4,\n        miasto: \"Bydgoszcz\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 459982,\n        wynik2019: {\n            KO: 31.05,\n            KONF: 7.05,\n            PSL: 9.02,\n            PIS: 36.43,\n            LEWICA: 15.17\n        }\n    },\n    {\n        nr: 5,\n        miasto: \"Toruń\",\n        mandaty: 13,\n        mandatyPKW: 12,\n        glosy2019: 452330,\n        wynik2019: {\n            KO: 26.42,\n            KONF: 6.33,\n            PSL: 10.88,\n            PIS: 40.38,\n            LEWICA: 14.83\n        }\n    },\n    {\n        nr: 6,\n        miasto: \"Lublin\",\n        mandaty: 15,\n        mandatyPKW: 14,\n        glosy2019: 565597,\n        wynik2019: {\n            KO: 19.3,\n            KONF: 7.07,\n            PSL: 9.1,\n            PIS: 55.39,\n            LEWICA: 7.81\n        }\n    },\n    {\n        nr: 7,\n        miasto: \"Chełm\",\n        mandaty: 12,\n        mandatyPKW: 11,\n        glosy2019: 401318,\n        wynik2019: {\n            KO: 14.8,\n            KONF: 5.84,\n            PSL: 11.86,\n            PIS: 59.5,\n            LEWICA: 6.83\n        }\n    },\n    {\n        nr: 8,\n        miasto: \"Zielona G\\xf3ra\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 437917,\n        wynik2019: {\n            KO: 31.27,\n            KONF: 7.19,\n            PSL: 11.63,\n            PIS: 34.3,\n            LEWICA: 15.61\n        }\n    },\n    {\n        nr: 9,\n        miasto: \"Ł\\xf3dź\",\n        mandaty: 10,\n        mandatyPKW: 9,\n        glosy2019: 415540,\n        wynik2019: {\n            KO: 35.82,\n            KONF: 6.65,\n            PSL: 4.53,\n            PIS: 32.9,\n            LEWICA: 20.1\n        }\n    },\n    {\n        nr: 10,\n        miasto: \"Piotrk\\xf3w Trybunalski\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 346326,\n        wynik2019: {\n            KO: 15.64,\n            KONF: 6.76,\n            PSL: 10.44,\n            PIS: 56.21,\n            LEWICA: 10.95\n        }\n    },\n    {\n        nr: 11,\n        miasto: \"Sieradz\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 460239,\n        wynik2019: {\n            KO: 20.48,\n            KONF: 5.88,\n            PSL: 10.29,\n            PIS: 49.81,\n            LEWICA: 11.98\n        }\n    },\n    {\n        nr: 12,\n        miasto: \"Chrzan\\xf3w\",\n        mandaty: 8,\n        mandatyPKW: 8,\n        glosy2019: 316214,\n        wynik2019: {\n            KO: 23.04,\n            KONF: 7.06,\n            PSL: 7.9,\n            PIS: 53.48,\n            LEWICA: 8.51\n        }\n    },\n    {\n        nr: 13,\n        miasto: \"Krak\\xf3w\",\n        mandaty: 14,\n        mandatyPKW: 15,\n        glosy2019: 649287,\n        wynik2019: {\n            KO: 30.48,\n            KONF: 7.99,\n            PSL: 7.27,\n            PIS: 39.56,\n            LEWICA: 13.01\n        }\n    },\n    {\n        nr: 14,\n        miasto: \"Nowy Sącz\",\n        mandaty: 10,\n        mandatyPKW: 10,\n        glosy2019: 370199,\n        wynik2019: {\n            KO: 13.83,\n            KONF: 6.95,\n            PSL: 7.35,\n            PIS: 65.8,\n            LEWICA: 6.07\n        }\n    },\n    {\n        nr: 15,\n        miasto: \"Tarn\\xf3w\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 347088,\n        wynik2019: {\n            KO: 14.0,\n            KONF: 7.11,\n            PSL: 13.35,\n            PIS: 59.59,\n            LEWICA: 5.94\n        }\n    },\n    {\n        nr: 16,\n        miasto: \"Płock\",\n        mandaty: 10,\n        mandatyPKW: 10,\n        glosy2019: 370561,\n        wynik2019: {\n            KO: 16.85,\n            KONF: 5.24,\n            PSL: 15.17,\n            PIS: 52.45,\n            LEWICA: 8.76\n        }\n    },\n    {\n        nr: 17,\n        miasto: \"Radom\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 335009,\n        wynik2019: {\n            KO: 17.15,\n            KONF: 5.89,\n            PSL: 10.2,\n            PIS: 57.82,\n            LEWICA: 7.43\n        }\n    },\n    {\n        nr: 18,\n        miasto: \"Siedlce\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 452906,\n        wynik2019: {\n            KO: 13.94,\n            KONF: 6.49,\n            PSL: 11.94,\n            PIS: 59.76,\n            LEWICA: 6.45\n        }\n    },\n    {\n        nr: 19,\n        miasto: \"Warszawa I\",\n        mandaty: 20,\n        mandatyPKW: 21,\n        glosy2019: 1381917,\n        wynik2019: {\n            KO: 42.05,\n            KONF: 7.51,\n            PSL: 4.75,\n            PIS: 27.49,\n            LEWICA: 18.19\n        }\n    },\n    {\n        nr: 20,\n        miasto: \"Warszawa II\",\n        mandaty: 12,\n        mandatyPKW: 14,\n        glosy2019: 598727,\n        wynik2019: {\n            KO: 28.61,\n            KONF: 6.63,\n            PSL: 8.6,\n            PIS: 40.89,\n            LEWICA: 13.09\n        }\n    },\n    {\n        nr: 21,\n        miasto: \"Opole\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 406439,\n        wynik2019: {\n            KO: 26.71,\n            KONF: 5.7,\n            PSL: 10.31,\n            PIS: 37.64,\n            LEWICA: 11.74\n        }\n    },\n    {\n        nr: 22,\n        miasto: \"Krosno\",\n        mandaty: 11,\n        mandatyPKW: 11,\n        glosy2019: 390581,\n        wynik2019: {\n            KO: 15.94,\n            KONF: 6.81,\n            PSL: 7.85,\n            PIS: 63.36,\n            LEWICA: 6.04\n        }\n    },\n    {\n        nr: 23,\n        miasto: \"Rzesz\\xf3w\",\n        mandaty: 15,\n        mandatyPKW: 16,\n        glosy2019: 588786,\n        wynik2019: {\n            KO: 14.39,\n            KONF: 8.25,\n            PSL: 7.79,\n            PIS: 62.38,\n            LEWICA: 6.59\n        }\n    },\n    {\n        nr: 24,\n        miasto: \"Białystok\",\n        mandaty: 14,\n        mandatyPKW: 14,\n        glosy2019: 520578,\n        wynik2019: {\n            KO: 21.04,\n            KONF: 6.96,\n            PSL: 9.33,\n            PIS: 52.04,\n            LEWICA: 9.09\n        }\n    },\n    {\n        nr: 25,\n        miasto: \"Gdańsk\",\n        mandaty: 12,\n        mandatyPKW: 13,\n        glosy2019: 528829,\n        wynik2019: {\n            KO: 41.31,\n            KONF: 7.21,\n            PSL: 5.9,\n            PIS: 32.1,\n            LEWICA: 13.47\n        }\n    },\n    {\n        nr: 26,\n        miasto: \"Gdynia\",\n        mandaty: 14,\n        mandatyPKW: 15,\n        glosy2019: 580722,\n        wynik2019: {\n            KO: 35.85,\n            KONF: 7.3,\n            PSL: 7.94,\n            PIS: 36.43,\n            LEWICA: 12.47\n        }\n    },\n    {\n        nr: 27,\n        miasto: \"Bielsko-Biała\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 389256,\n        wynik2019: {\n            KO: 27.2,\n            KONF: 7.42,\n            PSL: 7.13,\n            PIS: 46.76,\n            LEWICA: 11.48\n        }\n    },\n    {\n        nr: 28,\n        miasto: \"Częstochowa\",\n        mandaty: 7,\n        mandatyPKW: 7,\n        glosy2019: 284517,\n        wynik2019: {\n            KO: 22.63,\n            KONF: 6.07,\n            PSL: 8.68,\n            PIS: 44.28,\n            LEWICA: 15.59\n        }\n    },\n    {\n        nr: 29,\n        miasto: \"Gliwice\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 340647,\n        wynik2019: {\n            KO: 32.61,\n            KONF: 7.67,\n            PSL: 5.99,\n            PIS: 37.75,\n            LEWICA: 13.38\n        }\n    },\n    {\n        nr: 30,\n        miasto: \"Rybnik\",\n        mandaty: 9,\n        mandatyPKW: 9,\n        glosy2019: 333836,\n        wynik2019: {\n            KO: 27.71,\n            KONF: 7.17,\n            PSL: 5.64,\n            PIS: 48.28,\n            LEWICA: 9.68\n        }\n    },\n    {\n        nr: 31,\n        miasto: \"Katowice\",\n        mandaty: 12,\n        mandatyPKW: 11,\n        glosy2019: 469633,\n        wynik2019: {\n            KO: 37.2,\n            KONF: 7.33,\n            PSL: 4.37,\n            PIS: 39.19,\n            LEWICA: 11.92\n        }\n    },\n    {\n        nr: 32,\n        miasto: \"Sosnowiec\",\n        mandaty: 9,\n        mandatyPKW: 8,\n        glosy2019: 335431,\n        wynik2019: {\n            KO: 29.66,\n            KONF: 6.45,\n            PSL: 4.85,\n            PIS: 37.13,\n            LEWICA: 21.9\n        }\n    },\n    {\n        nr: 33,\n        miasto: \"Kielce\",\n        mandaty: 16,\n        mandatyPKW: 15,\n        glosy2019: 569891,\n        wynik2019: {\n            KO: 16.65,\n            KONF: 5.95,\n            PSL: 9.88,\n            PIS: 55.18,\n            LEWICA: 9.95\n        }\n    },\n    {\n        nr: 34,\n        miasto: \"Elbląg\",\n        mandaty: 8,\n        mandatyPKW: 7,\n        glosy2019: 250819,\n        wynik2019: {\n            KO: 28.43,\n            KONF: 5.66,\n            PSL: 10.89,\n            PIS: 40.86,\n            LEWICA: 11.64\n        }\n    },\n    {\n        nr: 35,\n        miasto: \"Olsztyn\",\n        mandaty: 10,\n        mandatyPKW: 10,\n        glosy2019: 331684,\n        wynik2019: {\n            KO: 26.46,\n            KONF: 6.97,\n            PSL: 13.19,\n            PIS: 38.82,\n            LEWICA: 13.84\n        }\n    },\n    {\n        nr: 36,\n        miasto: \"Kalisz\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 459152,\n        wynik2019: {\n            KO: 24.72,\n            KONF: 6.57,\n            PSL: 12.8,\n            PIS: 42.48,\n            LEWICA: 13.43\n        }\n    },\n    {\n        nr: 37,\n        miasto: \"Konin\",\n        mandaty: 9,\n        mandatyPKW: 10,\n        glosy2019: 353041,\n        wynik2019: {\n            KO: 20.48,\n            KONF: 6.74,\n            PSL: 9.81,\n            PIS: 47.29,\n            LEWICA: 15.04\n        }\n    },\n    {\n        nr: 38,\n        miasto: \"Piła\",\n        mandaty: 9,\n        mandatyPKW: 10,\n        glosy2019: 349051,\n        wynik2019: {\n            KO: 30.6,\n            KONF: 6.62,\n            PSL: 13.86,\n            PIS: 35.64,\n            LEWICA: 13.28\n        }\n    },\n    {\n        nr: 39,\n        miasto: \"Poznań\",\n        mandaty: 10,\n        mandatyPKW: 11,\n        glosy2019: 514527,\n        wynik2019: {\n            KO: 45.38,\n            KONF: 6.61,\n            PSL: 6.2,\n            PIS: 25.33,\n            LEWICA: 16.49\n        }\n    },\n    {\n        nr: 40,\n        miasto: \"Koszalin\",\n        mandaty: 8,\n        mandatyPKW: 7,\n        glosy2019: 271711,\n        wynik2019: {\n            KO: 32.31,\n            KONF: 5.98,\n            PSL: 9.43,\n            PIS: 36.83,\n            LEWICA: 15.44\n        }\n    },\n    {\n        nr: 41,\n        miasto: \"Szczecin\",\n        mandaty: 12,\n        mandatyPKW: 12,\n        glosy2019: 470529,\n        wynik2019: {\n            KO: 35.71,\n            KONF: 6.53,\n            PSL: 7.4,\n            PIS: 35.11,\n            LEWICA: 15.25\n        }\n    }\n];\nconst $d0bdfc9e83895ac0$export$1697adf3f88eb3ce = [\n    [\n        108191,\n        25319,\n        31006,\n        183364,\n        71061\n    ],\n    [\n        90812,\n        15346,\n        20528,\n        114728,\n        34957\n    ],\n    [\n        214629,\n        48775,\n        42269,\n        226915,\n        100843\n    ],\n    [\n        142844,\n        32406,\n        41497,\n        167550,\n        69763\n    ],\n    [\n        119526,\n        28625,\n        49225,\n        182648,\n        67076\n    ],\n    [\n        109185,\n        40012,\n        51474,\n        313284,\n        44152\n    ],\n    [\n        59401,\n        23439,\n        47604,\n        238802,\n        27404\n    ],\n    [\n        136955,\n        31490,\n        50943,\n        150188,\n        68341\n    ],\n    [\n        148830,\n        27627,\n        18828,\n        136731,\n        83524\n    ],\n    [\n        54160,\n        23427,\n        36151,\n        194658,\n        37930\n    ],\n    [\n        94268,\n        27054,\n        47373,\n        229245,\n        55116\n    ],\n    [\n        72869,\n        22334,\n        24996,\n        169106,\n        26909\n    ],\n    [\n        197930,\n        51855,\n        47219,\n        256847,\n        84457\n    ],\n    [\n        51183,\n        25747,\n        27203,\n        243583,\n        22483\n    ],\n    [\n        48597,\n        24695,\n        46333,\n        206845,\n        20618\n    ],\n    [\n        62429,\n        19405,\n        56227,\n        194371,\n        32448\n    ],\n    [\n        57449,\n        19724,\n        34185,\n        193709,\n        24884\n    ],\n    [\n        63124,\n        29390,\n        54085,\n        270641,\n        29235\n    ],\n    [\n        581077,\n        103843,\n        65683,\n        379880,\n        251434\n    ],\n    [\n        171286,\n        39675,\n        51484,\n        244823,\n        78348\n    ],\n    [\n        108570,\n        23176,\n        41901,\n        152999,\n        47699\n    ],\n    [\n        62246,\n        26615,\n        30655,\n        247488,\n        23577\n    ],\n    [\n        84703,\n        48600,\n        45868,\n        367268,\n        38817\n    ],\n    [\n        109527,\n        36207,\n        48566,\n        270888,\n        47342\n    ],\n    [\n        218484,\n        38153,\n        31203,\n        169753,\n        71236\n    ],\n    [\n        208208,\n        42364,\n        46132,\n        211582,\n        72436\n    ],\n    [\n        105876,\n        28900,\n        27752,\n        182027,\n        44701\n    ],\n    [\n        64374,\n        17278,\n        24704,\n        125990,\n        44354\n    ],\n    [\n        111078,\n        26114,\n        20408,\n        128579,\n        45583\n    ],\n    [\n        92493,\n        23939,\n        18816,\n        161160,\n        32300\n    ],\n    [\n        174683,\n        34416,\n        20512,\n        184030,\n        55992\n    ],\n    [\n        99499,\n        21650,\n        16263,\n        124553,\n        73466\n    ],\n    [\n        94880,\n        33895,\n        56289,\n        314455,\n        56699\n    ],\n    [\n        71320,\n        14187,\n        27319,\n        102478,\n        29196\n    ],\n    [\n        87780,\n        23134,\n        43758,\n        128760,\n        45912\n    ],\n    [\n        113489,\n        30177,\n        58759,\n        195053,\n        61674\n    ],\n    [\n        72295,\n        23810,\n        34620,\n        166965,\n        53090\n    ],\n    [\n        106810,\n        23123,\n        48371,\n        124392,\n        46355\n    ],\n    [\n        233474,\n        34024,\n        31875,\n        130319,\n        84835\n    ],\n    [\n        87799,\n        16259,\n        25632,\n        100078,\n        41943\n    ],\n    [\n        168022,\n        30744,\n        34807,\n        165200,\n        71756\n    ]\n];\n\n});\n\nparcelRequire.register(\"3i35a\", function(module, exports) {\n\n$parcel$export(module.exports, \"NaPolDemo\", () => $9bc43309e06c2764$export$c7f05eb85d8ce4ff);\n$parcel$export(module.exports, \"NaDemo\", () => $9bc43309e06c2764$export$249f49cfde10ec4a);\n$parcel$export(module.exports, \"PoparcieWOkregu\", () => $9bc43309e06c2764$export$78b00e1dcefd3798);\n$parcel$export(module.exports, \"PodzialMandatowKraj\", () => $9bc43309e06c2764$export$ba59b43972503164);\n$parcel$export(module.exports, \"PodzialMandatowWOkregu\", () => $9bc43309e06c2764$export$d6b31143b10bb361);\n$parcel$export(module.exports, \"dhondtKraj\", () => $9bc43309e06c2764$export$5c32ee91b60df44e);\n$parcel$export(module.exports, \"NormalizujWynik\", () => $9bc43309e06c2764$export$51a1424039638d72);\n$parcel$export(module.exports, \"losowanieWyniku\", () => $9bc43309e06c2764$export$3c6e5268720b9520);\n\nvar $geIQo = parcelRequire(\"geIQo\");\n\nvar $cWeek = parcelRequire(\"cWeek\");\n\nvar $iXaHu = parcelRequire(\"iXaHu\");\n\nvar $9HmlY = parcelRequire(\"9HmlY\");\n\nvar $8OXs6 = parcelRequire(\"8OXs6\");\n\nvar $h5k33 = parcelRequire(\"h5k33\");\n// Do jakich wartości +- od środka uwzględniać wartości, żeby wykres nie był zbyt szeroki.\nconst $9bc43309e06c2764$var$ZAKRES_DOL = 2.5;\nconst $9bc43309e06c2764$var$ZAKRES_GORA = 3;\nfunction $9bc43309e06c2764$export$c7f05eb85d8ce4ff(wynik) {\n    return {\n        KO: wynik.KO,\n        LEWICA: wynik.LEWICA || 0,\n        TD: wynik.TD || 0,\n        NIEDEMO: wynik.PIS + (wynik.KONF || 0)\n    };\n}\nfunction $9bc43309e06c2764$export$249f49cfde10ec4a(wynik) {\n    return {\n        DEMO: wynik.KO + (wynik.LEWICA || 0) + (wynik.TD || 0),\n        NIEDEMO: wynik.PIS + (wynik.KONF || 0)\n    };\n}\nlet $9bc43309e06c2764$var$glosyTD = 0;\nlet $9bc43309e06c2764$var$glosyMnoznikTD = 0;\nfunction $9bc43309e06c2764$export$78b00e1dcefd3798(wynik, okreg) {\n    const wynikWOkregu = {};\n    const odchylenieWOkregu = {};\n    for (const [partia, procent] of Object.entries(wynik)){\n        wynikWOkregu[partia] = procent * (0, $8OXs6.ROZKLAD)[partia][okreg.nr - 1];\n        odchylenieWOkregu[partia] = $9bc43309e06c2764$export$f43f50db268314fa(partia, procent, okreg.nr);\n    }\n    return {\n        wynikWOkregu: wynikWOkregu,\n        odchylenieWOkregu: odchylenieWOkregu\n    };\n}\nfunction $9bc43309e06c2764$export$ba59b43972503164(wynik) {\n    $9bc43309e06c2764$var$glosyTD = 0;\n    $9bc43309e06c2764$var$glosyMnoznikTD = 0;\n    const mandatyWKraju = {\n        PIS: 0,\n        KO: 0,\n        LEWICA: 0,\n        TD: 0,\n        KONF: 0\n    };\n    for (const okreg of (0, $geIQo.okregi)){\n        const wynikWOkregu = $9bc43309e06c2764$export$78b00e1dcefd3798(wynik, okreg).wynikWOkregu;\n        const mandatyWOkregu = $9bc43309e06c2764$export$d6b31143b10bb361(wynikWOkregu, okreg);\n        for (const [partia, mandaty] of Object.entries(mandatyWOkregu))// TODO: @tomek czy tu może wystąpić partia inna niż {PIS, KO, LEWICA, TD, KONF}\n        mandatyWKraju[partia] += mandaty;\n    }\n    return mandatyWKraju;\n}\nconst $9bc43309e06c2764$export$5c32ee91b60df44e = [];\nfunction $9bc43309e06c2764$export$d6b31143b10bb361(wynik, okreg, options) {\n    const MAX_MANDATOW_DLA_KOMITETU = 12;\n    const dhont = [];\n    // Jeśli ilorazy są takie same to liczy się liczba głosów, ale ignorujemy to bo interesuje nas statystyka.\n    for (const [partia, procent] of Object.entries(wynik))for(let i = 1; i <= Math.min(MAX_MANDATOW_DLA_KOMITETU, okreg.mandaty); i++){\n        dhont.push({\n            partia: partia,\n            iloraz: procent / i,\n            nrMandatu: i\n        });\n        if (options?.log) $9bc43309e06c2764$export$5c32ee91b60df44e.push({\n            partia: partia,\n            iloraz: procent / i,\n            nrMandatu: i,\n            okreg: okreg\n        });\n    }\n    const posortowanyDhont = dhont.sort((a, b)=>{\n        return b.iloraz - a.iloraz;\n    });\n    const ostatniWzietyMandat = posortowanyDhont[okreg.mandaty - 1];\n    const pierwszyNiewzietyMandat = posortowanyDhont[okreg.mandaty];\n    // NOTE @tomek niesamowite. 2023 i nie można napisać w TypeScript sum(glosy2019[okreg.nr - 1]) jak np. w Pythonie ;-)\n    const glosyWOkregu2019 = (0, $geIQo.glosy2019)[okreg.nr - 1].reduce((accumulator, currentValue)=>{\n        return accumulator + currentValue;\n    }, 0);\n    const podzial = posortowanyDhont.slice(0, okreg.mandaty).map((x)=>x.partia).reduce((acc, cur)=>{\n        acc[cur] ? acc[cur]++ : acc[cur] = 1;\n        return acc;\n    }, {});\n    podzial.cenaMandatu = options?.inputWGlosach ? ostatniWzietyMandat.iloraz : Math.round(ostatniWzietyMandat.iloraz / 100 * glosyWOkregu2019);\n    // Sekcja do tabelki której aktualnie nie wyświetlamy z powodu niezdebugowanych błędów w logice poniżej (sumy powinny być prawie 100% a są dużo niższe)\n    for (const d of dhont.filter((value)=>value.iloraz + 0.001 >= ostatniWzietyMandat.iloraz)){\n        const glosy = d.iloraz * d.nrMandatu;\n        const resztaUlamek = Math.round(10000 * (glosy % ostatniWzietyMandat.iloraz) / ostatniWzietyMandat.iloraz) / 1000;\n        if (!podzial[`${d.partia}_zagrozenie`]) podzial[`${d.partia}_zagrozenie`] = resztaUlamek < 0.20 && resztaUlamek > 0;\n        if (!podzial[`${d.partia}_ostatnie`]) podzial[`${d.partia}_ostatnie`] = resztaUlamek === 0;\n        if (!podzial[`${d.partia}_dawca`]) podzial[`${d.partia}_dawca`] = resztaUlamek < 0.75 && resztaUlamek > 0.25;\n    }\n    for (const d of dhont.filter((value)=>value.iloraz < ostatniWzietyMandat.iloraz)){\n        const glosy = d.iloraz * d.nrMandatu;\n        if (!podzial[`${d.partia}_szansa`]) podzial[`${d.partia}_szansa`] = glosy % ostatniWzietyMandat.iloraz / ostatniWzietyMandat.iloraz > 0.8;\n    }\n    if (options?.log) {\n        const round2Fn = (num)=>Math.round(num * 100) / 100;\n        let tabelka = `<tr><td>${okreg.miasto} (${okreg.nr})</td>`;\n        // Dla wszystkich okręgów poza Warszawą dodajemy wypełniacz:\n        tabelka += okreg.mandaty === 20 ? \"\" : `<td colspan=\"${20 - okreg.mandaty}\">&nbsp;</td>`;\n        let mandat = 0;\n        // Zróbmy linijke z numerem mandatu\n        // if (okreg.nr % 11 === 1) {\n        //   tabelka += `<tr><td>Mandat nr</td><td colspan=\"${\n        //     21 - okreg.mandaty\n        //   }\">&nbsp;</td>`;\n        // }\n        for (const rekord of posortowanyDhont){\n            let ramka = \"\";\n            mandat++;\n            if (mandat <= okreg.mandaty && mandat > okreg.mandatyPKW) ramka = \" border: 2px dashed red;\";\n            if (mandat > okreg.mandaty && mandat <= okreg.mandatyPKW) ramka = \" border: 2px dashed green;\";\n            tabelka += `<td style=\"background-color: ${(0, (/*@__PURE__*/$parcel$interopDefault($h5k33)))((0, $geIQo.KOLOR_PARTII)[rekord.partia]).fade(0.6)};${ramka}\">${rekord.partia} #${rekord.nrMandatu} ${round2Fn(rekord.iloraz)}</td>`;\n            if (mandat === okreg.mandaty) tabelka += `<td style=\"background-color: black\">&nbsp;</td>`;\n            if (mandat > okreg.mandaty + 2) break;\n        }\n        tabelka += `<td>${okreg.miasto} (${okreg.nr})</td></tr>`;\n        console.log(tabelka);\n    // const roznica = Math.round((ostatniWzietyMandat.iloraz - pierwszyNiewzietyMandat.iloraz) * pierwszyNiewzietyMandat.nrMandatu);\n    // const roznicaHTML =\n    //   roznica < 1000\n    //     ? `<b style=\"color: red\">${roznica}</b>`\n    //     : `<b>${roznica}</b>`;\n    // console.log(\n    //   `W okręgu <u>${\n    //     okreg.miasto\n    //   }</u> różnica głosów potrzebna żeby zmienić wynik wynosiła ${roznicaHTML}. Liczymy to jako różnicę między ostatnim wprowadzonym posłem (mandat numer #${\n    //     ostatniWzietyMandat.nrMandatu\n    //   }\n    //   dla ${\n    //     ostatniWzietyMandat.partia\n    //   }) a pierwszym niebiorącym miejscem (byłby to mandat #${\n    //     pierwszyNiewzietyMandat.nrMandatu\n    //   } \n    //   dla ${\n    //     pierwszyNiewzietyMandat.partia\n    //   }). Wyliczamy to odejmując ilorazy (${round2Fn(\n    //     ostatniWzietyMandat.iloraz\n    //   )} -\n    //   ${round2Fn(pierwszyNiewzietyMandat.iloraz)}) i mnożąc przez ${\n    //     pierwszyNiewzietyMandat.nrMandatu\n    //   }, bo byłby to mandat numer ${pierwszyNiewzietyMandat.nrMandatu} dla ${\n    //     pierwszyNiewzietyMandat.partia\n    //   } w tym okręgu.`\n    // );\n    }\n    return podzial;\n}\nfunction $9bc43309e06c2764$var$czestoscNaProcentSymulacji(value) {\n    return (Math.round(1000 * (value / (0, $cWeek.ILE_SYMULACJI))) / 10).toString() + \"%\";\n}\nfunction $9bc43309e06c2764$export$f43f50db268314fa(partia, procent, okreg) {\n    // https://chat.openai.com/share/30b1d901-30b1-46bb-af91-a831affbc3e7\n    const PROBA_LOSOWA_SONDAZY = 1000;\n    const n = PROBA_LOSOWA_SONDAZY * Object.entries((0, $geIQo.sondazeDoSredniej)).length;\n    const p = procent / 100;\n    const bladProporcji = Math.sqrt(p * (1 - p) / n);\n    // TODO @tomek funkcja odchylenie jest używana intensywnie w obliczeniach, ten sqrt(5) nie jest dla mmie oczywisty\n    // Mnożymy przez sqrt(5), żeby przeliczyć bląd statystyczny z wykresu na odchylenie standardowe. Potem przeliczamy na punkty procentowe.\n    // TODO @kuba zamienić na stabilne źródło danych (arkusz: https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1787689356) i przeliczyć ponownie bez sztuczek\n    const bladOdchyleniaWRegionie = (0, $8OXs6.ROZKLAD)[`${partia}_BLAD`][okreg - 1] * Math.sqrt(5) * (procent / 100);\n    // return (100 * bladProporcji) + (ROZKLAD[`${partia}_BLAD`][okreg - 1] * Math.sqrt(5));\n    // sumowanie odchylen standardowych: https://chat.openai.com/share/81cdfe04-09b5-45b6-8624-b3d402b12a60\n    // TODO @tomek dlaczego 100 * bladProporcji? bo bladOdchyleniaWREgionie byl przeliczony na punkty procentowe a bladProporcji nie?\n    return Math.sqrt((100 * bladProporcji) ** 2 + bladOdchyleniaWRegionie ** 2);\n}\nfunction $9bc43309e06c2764$export$51a1424039638d72(wynik) {\n    const suma = wynik.KO + wynik.PIS + wynik.TD + wynik.KONF + wynik.LEWICA;\n    const mnożnik = 100 / suma;\n    return {\n        PIS: wynik.PIS * mnożnik,\n        KO: wynik.KO * mnożnik,\n        TD: wynik.TD * mnożnik,\n        KONF: wynik.KONF * mnożnik,\n        LEWICA: wynik.LEWICA * mnożnik\n    };\n}\nfunction $9bc43309e06c2764$export$cf1782a3046d6a77(wynik, okreg) {\n    const { wynikWOkregu: wynikWOkregu, odchylenieWOkregu: odchylenieWOkregu } = $9bc43309e06c2764$export$78b00e1dcefd3798(wynik, okreg);\n    const procentyWOkreguSrednia = $9bc43309e06c2764$export$51a1424039638d72(wynikWOkregu);\n    const rozklad = {};\n    const rozkladDemo = {};\n    const histogram = {};\n    const minimumMandatow = {\n        KO: 100,\n        TD: 100,\n        LEWICA: 100\n    };\n    const zagrozoneMandaty = {\n        KO: 0,\n        TD: 0,\n        LEWICA: 0\n    };\n    const potencjalneMandaty = {\n        KO: 0,\n        TD: 0,\n        LEWICA: 0\n    };\n    const ostatnieMandaty = {\n        KO: 0,\n        TD: 0,\n        LEWICA: 0\n    };\n    const dawcyGlosow = {\n        KO: 0,\n        TD: 0,\n        LEWICA: 0\n    };\n    const bucketFn = (num, bucket)=>Math.round(num * bucket) / bucket;\n    for(let i = 1; i <= (0, $cWeek.ILE_SYMULACJI); i++){\n        // Losowanie poparcia dla partii\n        let { procentWOkreguLosoweUncapped: procentWOkreguLosoweUncapped, procentWOkreguLosoweCapped: procentWOkreguLosoweCapped } = $9bc43309e06c2764$export$3c6e5268720b9520(procentyWOkreguSrednia, odchylenieWOkregu, bucketFn);\n        // Podział mandatów\n        const mandatyWOkregu = $9bc43309e06c2764$export$d6b31143b10bb361(procentWOkreguLosoweUncapped, okreg);\n        // info dla wykresów\n        minimumMandatow.KO > (mandatyWOkregu.KO || 0) && (minimumMandatow.KO = mandatyWOkregu.KO || 0);\n        minimumMandatow.LEWICA > (mandatyWOkregu.LEWICA || 0) && (minimumMandatow.LEWICA = mandatyWOkregu.LEWICA || 0);\n        minimumMandatow.TD > (mandatyWOkregu.TD || 0) && (minimumMandatow.TD = mandatyWOkregu.TD || 0);\n        const str = (0, $9HmlY.sortedStringify)($9bc43309e06c2764$export$c7f05eb85d8ce4ff(mandatyWOkregu));\n        const strDemo = (0, $9HmlY.sortedStringify)($9bc43309e06c2764$export$249f49cfde10ec4a(mandatyWOkregu));\n        rozklad[str] ? rozklad[str]++ : rozklad[str] = 1;\n        rozkladDemo[strDemo] ? rozkladDemo[strDemo]++ : rozkladDemo[strDemo] = 1;\n        // Zapisanie mandatów w histogramie\n        for (const [partia, procent] of Object.entries(procentWOkreguLosoweCapped)){\n            if (!histogram[partia]) histogram[partia] = {};\n            if (!histogram[partia][String(procent)]) histogram[partia][String(procent)] = {};\n            // Dodajemy czestosc dla danej ilości mandatów dla danego procentu ze wszystkich symulacji.\n            const mandaty = String(mandatyWOkregu[partia] || 0);\n            histogram[partia][String(procent)][mandaty] ? histogram[partia][String(procent)][mandaty] += 1 : histogram[partia][String(procent)][mandaty] = 1;\n        }\n        // Liczenie sytuacji zagrożenia/szansy\n        if (mandatyWOkregu.KO_zagrozenie) zagrozoneMandaty.KO++;\n        if (mandatyWOkregu.TD_zagrozenie) zagrozoneMandaty.TD++;\n        if (mandatyWOkregu.LEWICA_zagrozenie) zagrozoneMandaty.LEWICA++;\n        if (mandatyWOkregu.KO_szansa) potencjalneMandaty.KO++;\n        if (mandatyWOkregu.TD_szansa) potencjalneMandaty.TD++;\n        if (mandatyWOkregu.LEWICA_szansa) potencjalneMandaty.LEWICA++;\n        if (mandatyWOkregu.KO_dawca) dawcyGlosow.KO++;\n        if (mandatyWOkregu.TD_dawca) dawcyGlosow.TD++;\n        if (mandatyWOkregu.LEWICA_dawca) dawcyGlosow.LEWICA++;\n        if (mandatyWOkregu.KO_ostatnie) ostatnieMandaty.KO++;\n        if (mandatyWOkregu.TD_ostatnie) ostatnieMandaty.TD++;\n        if (mandatyWOkregu.LEWICA_ostatnie) ostatnieMandaty.LEWICA++;\n    } // end of ILE_SYMULACJI loop\n    const wykresRozkladu = {};\n    (0, $9HmlY.sortObjectByValues)(rozklad).slice(0, 12).forEach(({ key: key, value: value })=>{\n        wykresRozkladu[$9bc43309e06c2764$var$czestoscNaProcentSymulacji(value)] = JSON.parse(key);\n    });\n    const wykresRozkladuDemo = {};\n    (0, $9HmlY.sortObjectByValues)(rozkladDemo).slice(0, 3).forEach(({ key: key, value: value })=>{\n        wykresRozkladuDemo[$9bc43309e06c2764$var$czestoscNaProcentSymulacji(value)] = JSON.parse(key);\n    });\n    return {\n        procentyWOkreguSrednia: procentyWOkreguSrednia,\n        odchylenieWOkregu: odchylenieWOkregu,\n        wykresRozkladu: wykresRozkladu,\n        wykresRozkladuDemo: wykresRozkladuDemo,\n        histogram: histogram,\n        // W Warszawie mamy b. szeroki zakres możliwości, szczególnie dla KO i Lewicy, podbijamy więc tam minimalne mandaty, żeby wykres wyglądał lepiej\n        minimumMandatow: {\n            ...minimumMandatow,\n            KO: okreg.nr === 19 ? 8 : minimumMandatow.KO,\n            LEWICA: okreg.nr === 19 ? 2 : minimumMandatow.LEWICA\n        },\n        zagrozoneMandaty: zagrozoneMandaty,\n        potencjalneMandaty: potencjalneMandaty,\n        ostatnieMandaty: ostatnieMandaty,\n        dawcyGlosow: dawcyGlosow\n    };\n}\nfunction $9bc43309e06c2764$export$3c6e5268720b9520(procentyWOkreguSrednia, odchylenieWOkregu, bucketFn) {\n    let procentWOkreguLosoweUncapped = {};\n    for (const [partia, procent] of Object.entries(procentyWOkreguSrednia)){\n        const wynikLosowyUncapped = Math.max((0, $iXaHu.default).normal(procent, odchylenieWOkregu[partia])(), 0);\n        procentWOkreguLosoweUncapped[partia] = wynikLosowyUncapped;\n    }\n    procentWOkreguLosoweUncapped = $9bc43309e06c2764$export$51a1424039638d72(procentWOkreguLosoweUncapped);\n    let procentWOkreguLosoweCapped = {};\n    for (const [partia, procent] of Object.entries(procentWOkreguLosoweUncapped)){\n        // Musimy używać tego samego odchylenia w każdej symulacji do cappowania\n        const procentOczekiwany = procentyWOkreguSrednia[partia];\n        const stddev = odchylenieWOkregu[partia];\n        const wynikLosowyCapped = bucketFn(Math.max(Math.min(procent, procentOczekiwany + stddev * $9bc43309e06c2764$var$ZAKRES_GORA), Math.max(procentOczekiwany - stddev * $9bc43309e06c2764$var$ZAKRES_DOL, 0)), 5 // dzielimy kazdy procent na przedziały co 0.2%, czyli na 5 bucketów\n        );\n        procentWOkreguLosoweCapped[partia] = wynikLosowyCapped;\n    }\n    return {\n        procentWOkreguLosoweUncapped: procentWOkreguLosoweUncapped,\n        procentWOkreguLosoweCapped: procentWOkreguLosoweCapped\n    };\n}\n\n});\nparcelRequire.register(\"cWeek\", function(module, exports) {\n\n$parcel$export(module.exports, \"ILE_SYMULACJI\", () => $565b4f3f01e0b40a$export$f88c97427ae2a295);\nconst $565b4f3f01e0b40a$export$f88c97427ae2a295 = 200000;\n\n});\n\nparcelRequire.register(\"iXaHu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $dcc60992372e5fa5$export$2e2bcd8739ae039);\n\nvar $ftPHE = parcelRequire(\"ftPHE\");\nfunction $dcc60992372e5fa5$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, $dcc60992372e5fa5$var$_toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction $dcc60992372e5fa5$var$_createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) $dcc60992372e5fa5$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $dcc60992372e5fa5$var$_defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction $dcc60992372e5fa5$var$_inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    $dcc60992372e5fa5$var$_setPrototypeOf(subClass, superClass);\n}\nfunction $dcc60992372e5fa5$var$_setPrototypeOf(o, p) {\n    $dcc60992372e5fa5$var$_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return $dcc60992372e5fa5$var$_setPrototypeOf(o, p);\n}\nfunction $dcc60992372e5fa5$var$_toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (typeof res !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction $dcc60992372e5fa5$var$_toPropertyKey(arg) {\n    var key = $dcc60992372e5fa5$var$_toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n}\nvar $dcc60992372e5fa5$export$7492a095b4ff4e68 = /*#__PURE__*/ function() {\n    function RNG() {}\n    var _proto = RNG.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _proto._seed = function _seed(seed, _opts) {\n        // TODO: add entropy and stuff\n        if (seed === (seed || 0)) return seed;\n        else {\n            var strSeed = \"\" + seed;\n            var s = 0;\n            for(var k = 0; k < strSeed.length; ++k)s ^= strSeed.charCodeAt(k) | 0;\n            return s;\n        }\n    };\n    return RNG;\n}();\nvar $dcc60992372e5fa5$var$RNGFunction = /*#__PURE__*/ function(_RNG) {\n    $dcc60992372e5fa5$var$_inheritsLoose(RNGFunction, _RNG);\n    function RNGFunction(thunk, opts) {\n        var _this;\n        _this = _RNG.call(this) || this;\n        _this._rng = void 0;\n        _this.seed(thunk, opts);\n        return _this;\n    }\n    var _proto = RNGFunction.prototype;\n    _proto.next = function next() {\n        return this._rng();\n    };\n    _proto.seed = function seed(thunk, _opts) {\n        this._rng = thunk;\n    };\n    _proto.clone = function clone(_, opts) {\n        return new RNGFunction(this._rng, opts);\n    };\n    $dcc60992372e5fa5$var$_createClass(RNGFunction, [\n        {\n            key: \"name\",\n            get: function get() {\n                return \"function\";\n            }\n        }\n    ]);\n    return RNGFunction;\n}($dcc60992372e5fa5$export$7492a095b4ff4e68);\n/**\r\n * Construct an RNG with variable inputs. Used in calls to Random constructor\r\n * @param {...*} args - Distribution-specific arguments\r\n * @return RNG\r\n *\r\n * @example\r\n * new Random(RNGFactory(...args))\r\n */ var $dcc60992372e5fa5$export$e6cb7150fd4ac6e7 = function() {\n    var args = [].slice.call(arguments);\n    var _args = args, _args$ = _args[0], arg0 = _args$ === void 0 ? \"default\" : _args$;\n    switch(typeof arg0){\n        case \"object\":\n            if (arg0 instanceof $dcc60992372e5fa5$export$7492a095b4ff4e68) return arg0;\n            break;\n        case \"function\":\n            return new $dcc60992372e5fa5$var$RNGFunction(arg0);\n        case \"number\":\n        case \"string\":\n        default:\n            return new $dcc60992372e5fa5$var$RNGFunction((0, (/*@__PURE__*/$parcel$interopDefault($ftPHE))).apply(void 0, args));\n    }\n    throw new Error('invalid RNG \"' + arg0 + '\"');\n};\nvar $dcc60992372e5fa5$var$uniform = function(random, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return function() {\n        return random.next() * (max - min) + min;\n    };\n};\nfunction $dcc60992372e5fa5$var$numberValidator(num) {\n    return new $dcc60992372e5fa5$var$NumberValidator(num);\n}\nvar $dcc60992372e5fa5$var$NumberValidator = function NumberValidator(num) {\n    var _this = this;\n    this.n = void 0;\n    this.isInt = function() {\n        if (Number.isInteger(_this.n)) return _this;\n        throw new Error(\"Expected number to be an integer, got \" + _this.n);\n    };\n    this.isPositive = function() {\n        if (_this.n > 0) return _this;\n        throw new Error(\"Expected number to be positive, got \" + _this.n);\n    };\n    this.lessThan = function(v) {\n        if (_this.n < v) return _this;\n        throw new Error(\"Expected number to be less than \" + v + \", got \" + _this.n);\n    };\n    this.greaterThanOrEqual = function(v) {\n        if (_this.n >= v) return _this;\n        throw new Error(\"Expected number to be greater than or equal to \" + v + \", got \" + _this.n);\n    };\n    this.greaterThan = function(v) {\n        if (_this.n > v) return _this;\n        throw new Error(\"Expected number to be greater than \" + v + \", got \" + _this.n);\n    };\n    this.n = num;\n};\nvar $dcc60992372e5fa5$var$uniformInt = function(random, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    if (max === undefined) {\n        max = min === undefined ? 1 : min;\n        min = 0;\n    }\n    $dcc60992372e5fa5$var$numberValidator(min).isInt();\n    $dcc60992372e5fa5$var$numberValidator(max).isInt();\n    return function() {\n        return Math.floor(random.next() * (max - min + 1) + min);\n    };\n};\nvar $dcc60992372e5fa5$var$uniformBoolean = function(random) {\n    return function() {\n        return random.next() >= 0.5;\n    };\n};\nvar $dcc60992372e5fa5$var$normal = function(random, mu, sigma) {\n    if (mu === void 0) mu = 0;\n    if (sigma === void 0) sigma = 1;\n    return function() {\n        var x, y, r;\n        do {\n            x = random.next() * 2 - 1;\n            y = random.next() * 2 - 1;\n            r = x * x + y * y;\n        }while (!r || r > 1);\n        return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n};\nvar $dcc60992372e5fa5$var$logNormal = function(random, mu, sigma) {\n    if (mu === void 0) mu = 0;\n    if (sigma === void 0) sigma = 1;\n    var normal = random.normal(mu, sigma);\n    return function() {\n        return Math.exp(normal());\n    };\n};\nvar $dcc60992372e5fa5$var$bernoulli = function(random, p) {\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n    return function() {\n        return Math.floor(random.next() + p);\n    };\n};\nvar $dcc60992372e5fa5$var$binomial = function(random, n, p) {\n    if (n === void 0) n = 1;\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().isPositive();\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n    return function() {\n        var i = 0;\n        var x = 0;\n        while(i++ < n)if (random.next() < p) x++;\n        return x;\n    };\n};\nvar $dcc60992372e5fa5$var$geometric = function(random, p) {\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThan(0).lessThan(1);\n    var invLogP = 1.0 / Math.log(1.0 - p);\n    return function() {\n        return Math.floor(1 + Math.log(random.next()) * invLogP);\n    };\n};\nvar $dcc60992372e5fa5$var$logFactorialTable = [\n    0.0,\n    0.0,\n    0.69314718055994529,\n    1.791759469228055,\n    3.1780538303479458,\n    4.7874917427820458,\n    6.5792512120101012,\n    8.5251613610654147,\n    10.604602902745251,\n    12.801827480081469\n];\nvar $dcc60992372e5fa5$var$logFactorial = function logFactorial(k) {\n    return $dcc60992372e5fa5$var$logFactorialTable[k];\n};\nvar $dcc60992372e5fa5$var$logSqrt2PI = 0.91893853320467267;\nvar $dcc60992372e5fa5$var$poisson = function(random, lambda) {\n    if (lambda === void 0) lambda = 1;\n    $dcc60992372e5fa5$var$numberValidator(lambda).isPositive();\n    if (lambda < 10) {\n        // inversion method\n        var expMean = Math.exp(-lambda);\n        return function() {\n            var p = expMean;\n            var x = 0;\n            var u = random.next();\n            while(u > p){\n                u = u - p;\n                p = lambda * p / ++x;\n            }\n            return x;\n        };\n    } else {\n        // generative method\n        var smu = Math.sqrt(lambda);\n        var b = 0.931 + 2.53 * smu;\n        var a = -0.059 + 0.02483 * b;\n        var invAlpha = 1.1239 + 1.1328 / (b - 3.4);\n        var vR = 0.9277 - 3.6224 / (b - 2);\n        return function() {\n            while(true){\n                var u = void 0;\n                var v = random.next();\n                if (v <= 0.86 * vR) {\n                    u = v / vR - 0.43;\n                    return Math.floor((2 * a / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445);\n                }\n                if (v >= vR) u = random.next() - 0.5;\n                else {\n                    u = v / vR - 0.93;\n                    u = (u < 0 ? -0.5 : 0.5) - u;\n                    v = random.next() * vR;\n                }\n                var us = 0.5 - Math.abs(u);\n                if (us < 0.013 && v > us) continue;\n                var k = Math.floor((2 * a / us + b) * u + lambda + 0.445);\n                v = v * invAlpha / (a / (us * us) + b);\n                if (k >= 10) {\n                    var t = (k + 0.5) * Math.log(lambda / k) - lambda - $dcc60992372e5fa5$var$logSqrt2PI + k - (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k;\n                    if (Math.log(v * smu) <= t) return k;\n                } else if (k >= 0) {\n                    var _logFactorial;\n                    var f = (_logFactorial = $dcc60992372e5fa5$var$logFactorial(k)) != null ? _logFactorial : 0;\n                    if (Math.log(v) <= k * Math.log(lambda) - lambda - f) return k;\n                }\n            }\n        };\n    }\n};\nvar $dcc60992372e5fa5$var$exponential = function(random, lambda) {\n    if (lambda === void 0) lambda = 1;\n    $dcc60992372e5fa5$var$numberValidator(lambda).isPositive();\n    return function() {\n        return -Math.log(1 - random.next()) / lambda;\n    };\n};\nvar $dcc60992372e5fa5$var$irwinHall = function(random, n) {\n    if (n === void 0) n = 1;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().greaterThanOrEqual(0);\n    return function() {\n        var sum = 0;\n        for(var i = 0; i < n; ++i)sum += random.next();\n        return sum;\n    };\n};\nvar $dcc60992372e5fa5$var$bates = function(random, n) {\n    if (n === void 0) n = 1;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().isPositive();\n    var irwinHall = random.irwinHall(n);\n    return function() {\n        return irwinHall() / n;\n    };\n};\nvar $dcc60992372e5fa5$var$pareto = function(random, alpha) {\n    if (alpha === void 0) alpha = 1;\n    $dcc60992372e5fa5$var$numberValidator(alpha).greaterThanOrEqual(0);\n    var invAlpha = 1.0 / alpha;\n    return function() {\n        return 1.0 / Math.pow(1.0 - random.next(), invAlpha);\n    };\n};\nvar $dcc60992372e5fa5$var$RNGMathRandom = /*#__PURE__*/ function(_RNG) {\n    $dcc60992372e5fa5$var$_inheritsLoose(RNGMathRandom, _RNG);\n    function RNGMathRandom() {\n        return _RNG.apply(this, arguments) || this;\n    }\n    var _proto = RNGMathRandom.prototype;\n    _proto.next = function next() {\n        return Math.random();\n    };\n    _proto.seed = function seed(_seed, _opts) {\n    // intentionally empty\n    };\n    _proto.clone = function clone() {\n        return new RNGMathRandom();\n    };\n    $dcc60992372e5fa5$var$_createClass(RNGMathRandom, [\n        {\n            key: \"name\",\n            get: function get() {\n                return \"default\";\n            }\n        }\n    ]);\n    return RNGMathRandom;\n}($dcc60992372e5fa5$export$7492a095b4ff4e68);\n/**\r\n * Seedable random number generator supporting many common distributions.\r\n *\r\n * Defaults to Math.random as its underlying pseudorandom number generator.\r\n *\r\n * @name Random\r\n * @class\r\n *\r\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\r\n */ var $dcc60992372e5fa5$export$a92776769f460054 = /*#__PURE__*/ function() {\n    function Random(rng) {\n        var _this = this;\n        this._rng = void 0;\n        this._patch = void 0;\n        this._cache = {};\n        this.next = function() {\n            return _this._rng.next();\n        };\n        this[\"float\"] = function(min, max) {\n            return _this.uniform(min, max)();\n        };\n        this[\"int\"] = function(min, max) {\n            return _this.uniformInt(min, max)();\n        };\n        this.integer = function(min, max) {\n            return _this.uniformInt(min, max)();\n        };\n        this.bool = function() {\n            return _this.uniformBoolean()();\n        };\n        this[\"boolean\"] = function() {\n            return _this.uniformBoolean()();\n        };\n        this.uniform = function(min, max) {\n            return _this._memoize(\"uniform\", $dcc60992372e5fa5$var$uniform, min, max);\n        };\n        this.uniformInt = function(min, max) {\n            return _this._memoize(\"uniformInt\", $dcc60992372e5fa5$var$uniformInt, min, max);\n        };\n        this.uniformBoolean = function() {\n            return _this._memoize(\"uniformBoolean\", $dcc60992372e5fa5$var$uniformBoolean);\n        };\n        this.normal = function(mu, sigma) {\n            return $dcc60992372e5fa5$var$normal(_this, mu, sigma);\n        };\n        this.logNormal = function(mu, sigma) {\n            return $dcc60992372e5fa5$var$logNormal(_this, mu, sigma);\n        };\n        this.bernoulli = function(p) {\n            return $dcc60992372e5fa5$var$bernoulli(_this, p);\n        };\n        this.binomial = function(n, p) {\n            return $dcc60992372e5fa5$var$binomial(_this, n, p);\n        };\n        this.geometric = function(p) {\n            return $dcc60992372e5fa5$var$geometric(_this, p);\n        };\n        this.poisson = function(lambda) {\n            return $dcc60992372e5fa5$var$poisson(_this, lambda);\n        };\n        this.exponential = function(lambda) {\n            return $dcc60992372e5fa5$var$exponential(_this, lambda);\n        };\n        this.irwinHall = function(n) {\n            return $dcc60992372e5fa5$var$irwinHall(_this, n);\n        };\n        this.bates = function(n) {\n            return $dcc60992372e5fa5$var$bates(_this, n);\n        };\n        this.pareto = function(alpha) {\n            return $dcc60992372e5fa5$var$pareto(_this, alpha);\n        };\n        if (rng && rng instanceof $dcc60992372e5fa5$export$7492a095b4ff4e68) this.use(rng);\n        else this.use(new $dcc60992372e5fa5$var$RNGMathRandom());\n        this._cache = {};\n    }\n    /**\r\n   * @member {RNG} Underlying pseudo-random number generator\r\n   */ var _proto = Random.prototype;\n    /**\r\n   * Creates a new `Random` instance, optionally specifying parameters to\r\n   * set a new seed.\r\n   *\r\n   * @see RNG.clone\r\n   *\r\n   * @param {string} [seed] - Optional seed for new RNG.\r\n   * @param {object} [opts] - Optional config for new RNG options.\r\n   * @return {Random}\r\n   */ _proto.clone = function clone() {\n        var args = [].slice.call(arguments);\n        if (args.length) return new Random($dcc60992372e5fa5$export$e6cb7150fd4ac6e7.apply(void 0, args));\n        else return new Random(this.rng.clone());\n    } /**\r\n   * Sets the underlying pseudorandom number generator used via\r\n   * either an instance of `seedrandom`, a custom instance of RNG\r\n   * (for PRNG plugins), or a string specifying the PRNG to use\r\n   * along with an optional `seed` and `opts` to initialize the\r\n   * RNG.\r\n   *\r\n   * @example\r\n   * import random from 'random'\r\n   *\r\n   * random.use('example_seedrandom_string')\r\n   * // or\r\n   * random.use(seedrandom('kittens'))\r\n   * // or\r\n   * random.use(Math.random)\r\n   *\r\n   * @param {...*} args\r\n   */ ;\n    _proto.use = function use() {\n        this._rng = $dcc60992372e5fa5$export$e6cb7150fd4ac6e7.apply(void 0, [].slice.call(arguments));\n    } /**\r\n   * Patches `Math.random` with this Random instance's PRNG.\r\n   */ ;\n    _proto.patch = function patch() {\n        if (this._patch) throw new Error(\"Math.random already patched\");\n        this._patch = Math.random;\n        Math.random = this.uniform();\n    } /**\r\n   * Restores a previously patched `Math.random` to its original value.\r\n   */ ;\n    _proto.unpatch = function unpatch() {\n        if (this._patch) {\n            Math.random = this._patch;\n            delete this._patch;\n        }\n    } /**\r\n   * Convenience wrapper around `this.rng.next()`\r\n   *\r\n   * Returns a floating point number in [0, 1).\r\n   *\r\n   * @return {number}\r\n   */ ;\n    /**\r\n   * Returns an item chosen uniformly at trandom from the given array.\r\n   *\r\n   * Convence wrapper around `random.uniformInt()`\r\n   *\r\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\r\n   * @return {T | undefined}\r\n   */ _proto.choice = function choice(array) {\n        if (!Array.isArray(array)) throw new Error(\"Random.choice expected input to be an array, got \" + typeof array);\n        var length = array == null ? void 0 : array.length;\n        if (length > 0) {\n            var index = this.uniformInt(0, length - 1)();\n            return array[index];\n        } else return undefined;\n    } /**\r\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\r\n   *\r\n   * @param {number} [min=0] - Lower bound (float, inclusive)\r\n   * @param {number} [max=1] - Upper bound (float, exclusive)\r\n   * @return {function}\r\n   */ ;\n    // --------------------------------------------------------------------------\n    // Internal\n    // --------------------------------------------------------------------------\n    /**\r\n   * Memoizes distributions to ensure they're only created when necessary.\r\n   *\r\n   * Returns a thunk which that returns independent, identically distributed\r\n   * samples from the specified distribution.\r\n   *\r\n   * @private\r\n   *\r\n   * @param {string} label - Name of distribution\r\n   * @param {function} getter - Function which generates a new distribution\r\n   * @param {...*} args - Distribution-specific arguments\r\n   *\r\n   * @return {function}\r\n   */ _proto._memoize = function _memoize(label, getter) {\n        var args = [].slice.call(arguments, 2);\n        var key = \"\" + args.join(\";\");\n        var value = this._cache[label];\n        if (value === undefined || value.key !== key) {\n            value = {\n                key: key,\n                distribution: getter.apply(void 0, [\n                    this\n                ].concat(args))\n            };\n            this._cache[label] = value;\n        }\n        return value.distribution;\n    };\n    $dcc60992372e5fa5$var$_createClass(Random, [\n        {\n            key: \"rng\",\n            get: function get() {\n                return this._rng;\n            }\n        }\n    ]);\n    return Random;\n}();\n// defaults to Math.random as its RNG\nvar $dcc60992372e5fa5$export$2e2bcd8739ae039 = new $dcc60992372e5fa5$export$a92776769f460054();\n\n});\nparcelRequire.register(\"ftPHE\", function(module, exports) {\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\n\nvar $1NWL6 = parcelRequire(\"1NWL6\");\n\nvar $8FlDu = parcelRequire(\"8FlDu\");\n\nvar $1rFi6 = parcelRequire(\"1rFi6\");\n\nvar $iDdZD = parcelRequire(\"iDdZD\");\n\nvar $bDA0X = parcelRequire(\"bDA0X\");\n\nvar $oBon1 = parcelRequire(\"oBon1\");\n\nvar $layLz = parcelRequire(\"layLz\");\n$layLz.alea = $1NWL6;\n$layLz.xor128 = $8FlDu;\n$layLz.xorwow = $1rFi6;\n$layLz.xorshift7 = $iDdZD;\n$layLz.xor4096 = $bDA0X;\n$layLz.tychei = $oBon1;\nmodule.exports = $layLz;\n\n});\nparcelRequire.register(\"1NWL6\", function(module, exports) {\n// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function(global, module1, define1) {\n    function Alea(seed) {\n        var me = this, mash = Mash();\n        me.next = function() {\n            var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n            me.s0 = me.s1;\n            me.s1 = me.s2;\n            return me.s2 = t - (me.c = t | 0);\n        };\n        // Apply the seeding algorithm from Baagoe.\n        me.c = 1;\n        me.s0 = mash(\" \");\n        me.s1 = mash(\" \");\n        me.s2 = mash(\" \");\n        me.s0 -= mash(seed);\n        if (me.s0 < 0) me.s0 += 1;\n        me.s1 -= mash(seed);\n        if (me.s1 < 0) me.s1 += 1;\n        me.s2 -= mash(seed);\n        if (me.s2 < 0) me.s2 += 1;\n        mash = null;\n    }\n    function copy(f, t) {\n        t.c = f.c;\n        t.s0 = f.s0;\n        t.s1 = f.s1;\n        t.s2 = f.s2;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new Alea(seed), state = opts && opts.state, prng = xg.next;\n        prng.int32 = function() {\n            return xg.next() * 0x100000000 | 0;\n        };\n        prng.double = function() {\n            return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n        };\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    function Mash() {\n        var n = 0xefc8249d;\n        var mash = function(data) {\n            data = String(data);\n            for(var i = 0; i < data.length; i++){\n                n += data.charCodeAt(i);\n                var h = 0.02519603282416938 * n;\n                n = h >>> 0;\n                h -= n;\n                h *= n;\n                n = h >>> 0;\n                h -= n;\n                n += h * 0x100000000; // 2^32\n            }\n            return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n        };\n        return mash;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.alea = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"8FlDu\", function(module, exports) {\n// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x << 11;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;\n        };\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor128 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"1rFi6\", function(module, exports) {\n// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x >>> 2;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            me.w = me.v;\n            return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;\n        };\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        me.v = 0;\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            if (k == strseed.length) me.d = me.x << 10 ^ me.x >>> 4;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        t.v = f.v;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorwow = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"iDdZD\", function(module, exports) {\n// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            // Update xor generator.\n            var X = me.x, i = me.i, t, v, w;\n            t = X[i];\n            t ^= t >>> 7;\n            v = t ^ t << 24;\n            t = X[i + 1 & 7];\n            v ^= t ^ t >>> 10;\n            t = X[i + 3 & 7];\n            v ^= t ^ t >>> 3;\n            t = X[i + 4 & 7];\n            v ^= t ^ t << 7;\n            t = X[i + 7 & 7];\n            t = t ^ t << 13;\n            v ^= t ^ t << 9;\n            X[i] = v;\n            me.i = i + 1 & 7;\n            return v;\n        };\n        function init(me, seed) {\n            var j, w, X = [];\n            if (seed === (seed | 0)) // Seed state array using a 32-bit integer.\n            w = X[0] = seed;\n            else {\n                // Seed state using a string.\n                seed = \"\" + seed;\n                for(j = 0; j < seed.length; ++j)X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n            }\n            // Enforce an array length of 8, not all zeroes.\n            while(X.length < 8)X.push(0);\n            for(j = 0; j < 8 && X[j] === 0; ++j);\n            if (j == 8) w = X[7] = -1;\n            else w = X[j];\n            me.x = X;\n            me.i = 0;\n            // Discard an initial 256 values.\n            for(j = 256; j > 0; --j)me.next();\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.x = f.x.slice();\n        t.i = f.i;\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.x) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorshift7 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"bDA0X\", function(module, exports) {\n// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            var w = me.w, X = me.X, i = me.i, t, v;\n            // Update Weyl generator.\n            me.w = w = w + 0x61c88647 | 0;\n            // Update xor generator.\n            v = X[i + 34 & 127];\n            t = X[i = i + 1 & 127];\n            v ^= v << 13;\n            t ^= t << 17;\n            v ^= v >>> 15;\n            t ^= t >>> 12;\n            // Update Xor generator array state.\n            v = X[i] = v ^ t;\n            me.i = i;\n            // Result is the combination.\n            return v + (w ^ w >>> 16) | 0;\n        };\n        function init(me, seed) {\n            var t, v, i, j, w, X = [], limit = 128;\n            if (seed === (seed | 0)) {\n                // Numeric seeds initialize v, which is used to generates X.\n                v = seed;\n                seed = null;\n            } else {\n                // String seeds are mixed into v and X one character at a time.\n                seed = seed + \"\\x00\";\n                v = 0;\n                limit = Math.max(limit, seed.length);\n            }\n            // Initialize circular array and weyl value.\n            for(i = 0, j = -32; j < limit; ++j){\n                // Put the unicode characters into the array, and shuffle them.\n                if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n                // After 32 shuffles, take v as the starting w value.\n                if (j === 0) w = v;\n                v ^= v << 10;\n                v ^= v >>> 15;\n                v ^= v << 4;\n                v ^= v >>> 13;\n                if (j >= 0) {\n                    w = w + 0x61c88647 | 0; // Weyl.\n                    t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.\n                    i = 0 == t ? i + 1 : 0; // Count zeroes.\n                }\n            }\n            // We have detected all zeroes; make the key nonzero.\n            if (i >= 128) X[(seed && seed.length || 0) & 127] = -1;\n            // Run the generator 512 times to further mix the state before using it.\n            // Factoring this as a function slows the main generator, so it is just\n            // unrolled here.  The weyl generator is not advanced while warming up.\n            i = 127;\n            for(j = 512; j > 0; --j){\n                v = X[i + 34 & 127];\n                t = X[i = i + 1 & 127];\n                v ^= v << 13;\n                t ^= t << 17;\n                v ^= v >>> 15;\n                t ^= t >>> 12;\n                X[i] = v ^ t;\n            }\n            // Storing state as object members is faster than using closure variables.\n            me.w = w;\n            me.X = X;\n            me.i = i;\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.i = f.i;\n        t.w = f.w;\n        t.X = f.X.slice();\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.X) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor4096 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"oBon1\", function(module, exports) {\n// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        // Set up generator function.\n        me.next = function() {\n            var b = me.b, c = me.c, d = me.d, a = me.a;\n            b = b << 25 ^ b >>> 7 ^ c;\n            c = c - d | 0;\n            d = d << 24 ^ d >>> 8 ^ a;\n            a = a - b | 0;\n            me.b = b = b << 20 ^ b >>> 12 ^ c;\n            me.c = c = c - d | 0;\n            me.d = d << 16 ^ c >>> 16 ^ a;\n            return me.a = a - b | 0;\n        };\n        /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */ me.a = 0;\n        me.b = 0;\n        me.c = -1640531527;\n        me.d = 1367130551;\n        if (seed === Math.floor(seed)) {\n            // Integer seed.\n            me.a = seed / 0x100000000 | 0;\n            me.b = seed | 0;\n        } else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 20; k++){\n            me.b ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.a = f.a;\n        t.b = f.b;\n        t.c = f.c;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.tychei = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"layLz\", function(module, exports) {\n\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/ (function(global, pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var width = 256, chunks = 6, digits = 52, rngname = \"random\", startdenom = math.pow(width, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask = width - 1, nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n        var key = [];\n        options = options == true ? {\n            entropy: true\n        } : options || {};\n        // Flatten the seed string or build one from local entropy if needed.\n        var shortseed = mixkey(flatten(options.entropy ? [\n            seed,\n            tostring(pool)\n        ] : seed == null ? autoseed() : seed, 3), key);\n        // Use the seed to initialize an ARC4 generator.\n        var arc4 = new ARC4(key);\n        // This function returns a random double in [0, 1) that contains\n        // randomness in every bit of the mantissa of the IEEE 754 value.\n        var prng = function() {\n            var n = arc4.g(chunks), d = startdenom, x = 0; //   and no 'extra last byte'.\n            while(n < significance){\n                n = (n + x) * width; //   shifting numerator and\n                d *= width; //   denominator and generating a\n                x = arc4.g(1); //   new least-significant-byte.\n            }\n            while(n >= overflow){\n                n /= 2; //   last byte, shift everything\n                d /= 2; //   right using integer math until\n                x >>>= 1; //   we have exactly the desired bits.\n            }\n            return (n + x) / d; // Form the number within [0, 1).\n        };\n        prng.int32 = function() {\n            return arc4.g(4) | 0;\n        };\n        prng.quick = function() {\n            return arc4.g(4) / 0x100000000;\n        };\n        prng.double = prng;\n        // Mix the randomness into accumulated entropy.\n        mixkey(tostring(arc4.S), pool);\n        // Calling convention: what to return as a function of prng, seed, is_math.\n        return (options.pass || callback || function(prng, seed, is_math_call, state) {\n            if (state) {\n                // Load the arc4 state from the given state if it has an S array.\n                if (state.S) copy(state, arc4);\n                // Only provide the .state method if requested via options.state.\n                prng.state = function() {\n                    return copy(arc4, {});\n                };\n            }\n            // If called as a method of Math (Math.seedrandom()), mutate\n            // Math.random because that is how seedrandom.js has worked since v1.0.\n            if (is_math_call) {\n                math[rngname] = prng;\n                return seed;\n            } else return prng;\n        })(prng, shortseed, \"global\" in options ? options.global : this == math, options.state);\n    }\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n        var t, keylen = key.length, me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n        // The empty key [] is treated as [0].\n        if (!keylen) key = [\n            keylen++\n        ];\n        // Set up S using the standard key scheduling algorithm.\n        while(i < width)s[i] = i++;\n        for(i = 0; i < width; i++){\n            s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n            s[j] = t;\n        }\n        // The \"g\" method returns the next (count) outputs as one number.\n        (me.g = function(count) {\n            // Using instance members instead of closure state nearly doubles speed.\n            var t, r = 0, i = me.i, j = me.j, s = me.S;\n            while(count--){\n                t = s[i = mask & i + 1];\n                r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n            }\n            me.i = i;\n            me.j = j;\n            return r;\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n        })(width);\n    }\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n        t.i = f.i;\n        t.j = f.j;\n        t.S = f.S.slice();\n        return t;\n    }\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n        var result = [], typ = typeof obj, prop;\n        if (depth && typ == \"object\") {\n            for(prop in obj)try {\n                result.push(flatten(obj[prop], depth - 1));\n            } catch (e) {}\n        }\n        return result.length ? result : typ == \"string\" ? obj : obj + \"\\x00\";\n    }\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n        var stringseed = seed + \"\", smear, j = 0;\n        while(j < stringseed.length)key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n        return tostring(key);\n    }\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n        try {\n            var out;\n            if (nodecrypto && (out = nodecrypto.randomBytes)) // The use of 'out' to remember randomBytes makes tight minified code.\n            out = out(width);\n            else {\n                out = new Uint8Array(width);\n                (global.crypto || global.msCrypto).getRandomValues(out);\n            }\n            return tostring(out);\n        } catch (e) {\n            var browser = global.navigator, plugins = browser && browser.plugins;\n            return [\n                +new Date,\n                global,\n                plugins,\n                global.screen,\n                tostring(pool)\n            ];\n        }\n    }\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n        return String.fromCharCode.apply(0, a);\n    }\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool);\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    if (0, module.exports) {\n        module.exports = seedrandom;\n        // When in node.js, try using crypto package for autoseeding.\n        try {\n            nodecrypto = (parcelRequire(\"kjyEk\"));\n        } catch (ex) {}\n    } else if (typeof define == \"function\" && define.amd) define(function() {\n        return seedrandom;\n    });\n    else // When included as a plain script, set up Math.seedrandom global.\n    math[\"seed\" + rngname] = seedrandom;\n// End anonymous scope, and pass initial values.\n})(// global: `self` in browsers (including strict mode and web workers),\n// otherwise `this` in Node and other environments\ntypeof self !== \"undefined\" ? self : module.exports, [], Math // math: package containing random, pow, and seedrandom\n);\n\n});\nparcelRequire.register(\"kjyEk\", function(module, exports) {\n\"use strict\";\n\n});\n\n\n\n\nparcelRequire.register(\"9HmlY\", function(module, exports) {\n\n$parcel$export(module.exports, \"sortedStringify\", () => $b21b317d60618aca$export$637321ccaed74326);\n$parcel$export(module.exports, \"sortObjectByValues\", () => $b21b317d60618aca$export$8ac25fd097dcfc2);\nfunction $b21b317d60618aca$export$637321ccaed74326(wynik) {\n    const sortedObj = {};\n    Object.keys(wynik).sort().forEach((key)=>{\n        sortedObj[key] = wynik[key];\n    });\n    return JSON.stringify(sortedObj);\n}\nfunction $b21b317d60618aca$export$8ac25fd097dcfc2(obj) {\n    // Convert the object to an array of key-value pairs\n    const keyValueArray = Object.entries(obj);\n    // Sort the array based on the values (ascending order)\n    return keyValueArray.sort((a, b)=>b[1] - a[1]).map(([key, value])=>{\n        return {\n            key: key,\n            value: value\n        };\n    });\n}\n\n});\n\nparcelRequire.register(\"8OXs6\", function(module, exports) {\n\n$parcel$export(module.exports, \"ROZKLAD\", () => $dd9e9330ab7ef6b5$export$3ef61f55ef8769bb);\n// Źródło:\n// https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=592625443&range=AI4:AI44,\n// import { Partia, Partie, sondaz_uliczny } from \"./sondaz_uliczny\";\n// const TD = Object.entries(sondaz_uliczny).map(([okreg, partie]) => {\n//   return partie['TD'].poparcie\n// });\n// console.log(TD);\nconst $dd9e9330ab7ef6b5$export$3ef61f55ef8769bb = {\n    LEWICA: [\n        0.0282571335,\n        0.01488150667,\n        0.0478222815,\n        0.02984793983,\n        0.029476448,\n        0.0180548925,\n        0.010392221,\n        0.02975490417,\n        0.03759809833,\n        0.01542527167,\n        0.0236883605,\n        0.01100846683,\n        0.0397647275,\n        0.0091506275,\n        0.007909908333,\n        0.014014961,\n        0.008859429833,\n        0.010201509,\n        0.118083528,\n        0.03675424117,\n        0.020347473,\n        0.008839666333,\n        0.0155574055,\n        0.017031283,\n        0.032726717,\n        0.03074119817,\n        0.020098175,\n        0.0194996075,\n        0.01982511017,\n        0.01285778183,\n        0.02496772,\n        0.032462213,\n        0.0220234625,\n        0.0126734095,\n        0.01999657117,\n        0.02434270517,\n        0.021791153,\n        0.01856165517,\n        0.0379657795,\n        0.01779259133,\n        0.02895186617\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=592625443&range=AN4:AN44,\n    LEWICA_BLAD: [\n        5.44,\n        4.35,\n        9.6,\n        7.9,\n        7.12,\n        3.38,\n        7.34,\n        3.42,\n        7.25,\n        3.99,\n        5.89,\n        3.0,\n        6.74,\n        3.41,\n        3.53,\n        6.97,\n        6.73,\n        5.94,\n        9.39,\n        8.1,\n        1.61,\n        5.79,\n        2.92,\n        7.77,\n        5.7,\n        2.09,\n        3.51,\n        8.74,\n        2.27,\n        5.02,\n        3.17,\n        5.67,\n        6.45,\n        4.54,\n        3.6,\n        6.46,\n        8.97,\n        7.86,\n        6.82,\n        5.23,\n        3.79\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1383721529&range=U3:U43,\n    KO: [\n        0.02095042333,\n        0.01835469433,\n        0.04189383883,\n        0.02857291333,\n        0.02348052333,\n        0.02197197817,\n        0.01186840483,\n        0.02720124583,\n        0.0292574625,\n        0.01053707333,\n        0.0189868865,\n        0.01425199983,\n        0.03839594083,\n        0.009164819667,\n        0.008615772,\n        0.01198455117,\n        0.01145744533,\n        0.01229867283,\n        0.1181621912,\n        0.0343164895,\n        0.02074295667,\n        0.01193354767,\n        0.01593256617,\n        0.0210371165,\n        0.0441507985,\n        0.04206959417,\n        0.020244877,\n        0.01245059417,\n        0.02117911833,\n        0.01750180833,\n        0.034037158,\n        0.01911514317,\n        0.019047872,\n        0.01428191817,\n        0.017092405,\n        0.02281050867,\n        0.01443454267,\n        0.02173799933,\n        0.047433574,\n        0.01732140367,\n        0.03372117283\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1383721529&range=X3:X43,\n    KO_BLAD: [\n        2.38,\n        4.81,\n        2.31,\n        6.08,\n        5.05,\n        1.21,\n        1.82,\n        2.96,\n        5.81,\n        1.72,\n        4.21,\n        1.47,\n        3.91,\n        6.86,\n        6.03,\n        2.58,\n        1.74,\n        1.66,\n        6.52,\n        2.43,\n        3.08,\n        2.44,\n        3.1,\n        2.78,\n        6.05,\n        3.14,\n        2.42,\n        3.58,\n        3.46,\n        5.66,\n        4.79,\n        1.11,\n        1.82,\n        4.67,\n        2.93,\n        2.28,\n        1.65,\n        4.96,\n        4.83,\n        5.98,\n        3.32\n    ],\n    // TRZEBA POSORTOWAĆ ARKUSZ!!!\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1231789773&range=R4:R44,\n    TD: [\n        0.022415876,\n        0.0140898335,\n        0.03175889317,\n        0.0283710235,\n        0.02891201475,\n        0.026946886,\n        0.022047627,\n        0.03287808558,\n        0.01753570292,\n        0.01884171267,\n        0.02608876458,\n        0.01569827233,\n        0.03346774583,\n        0.0150046695,\n        0.02292685725,\n        0.02517498925,\n        0.01684268933,\n        0.02528291583,\n        0.05741305392,\n        0.03330098842,\n        0.02768583583,\n        0.0156986055,\n        0.0244913335,\n        0.03222947392,\n        0.02653349625,\n        0.033979463,\n        0.02036296842,\n        0.01573798425,\n        0.017095344,\n        0.01606130233,\n        0.02022854192,\n        0.01415383625,\n        0.02527398442,\n        0.01563157683,\n        0.02427266483,\n        0.03357863792,\n        0.02057061317,\n        0.02859777067,\n        0.0285236385,\n        0.01738948992,\n        0.02690483617\n    ],\n    // stały\n    TD_BLAD: [\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=418600979&range=V3:V43,\n    PIS: [\n        0.02289047833,\n        0.014539447,\n        0.02776369267,\n        0.02131711167,\n        0.02294950533,\n        0.03838390783,\n        0.02973062217,\n        0.01900597067,\n        0.01591571983,\n        0.02408826683,\n        0.02904836917,\n        0.02130995067,\n        0.0311625805,\n        0.02963938367,\n        0.02562634467,\n        0.02475671167,\n        0.02382695067,\n        0.033949261,\n        0.04304594533,\n        0.02970509583,\n        0.01980732767,\n        0.03061604567,\n        0.04447523967,\n        0.03270840817,\n        0.02036073383,\n        0.02608811483,\n        0.0227350815,\n        0.0159613145,\n        0.016143496,\n        0.02084102017,\n        0.02295180183,\n        0.01589586733,\n        0.04070432767,\n        0.013169903,\n        0.01636291267,\n        0.02526424917,\n        0.02164847417,\n        0.01629085967,\n        0.01578302817,\n        0.012774997,\n        0.02076148367\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=418600979&range=X3:X43,\n    PIS_BLAD: [\n        1.25,\n        2.27,\n        2.65,\n        3.22,\n        1.73,\n        6.49,\n        10.69,\n        2.54,\n        2.74,\n        8.62,\n        6.18,\n        1.37,\n        7.92,\n        5.76,\n        3.48,\n        5.35,\n        7.48,\n        8.33,\n        7.79,\n        4.64,\n        3.03,\n        4.2,\n        3.39,\n        3.23,\n        3.62,\n        3.23,\n        5.0,\n        2.05,\n        4.8,\n        3.58,\n        5.93,\n        3.25,\n        6.75,\n        3.18,\n        2.45,\n        3.75,\n        5.87,\n        3.43,\n        6.49,\n        2.91,\n        2.37\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=173675036&range=W3:W43,\n    KONF: [\n        0.02060562967,\n        0.01229549835,\n        0.03603269929,\n        0.02187492114,\n        0.022931464,\n        0.03703330869,\n        0.02519996845,\n        0.02217074937,\n        0.01722519479,\n        0.01994023364,\n        0.02252087825,\n        0.02050570213,\n        0.03539542744,\n        0.02552712404,\n        0.02291576829,\n        0.01795242761,\n        0.01920071307,\n        0.02779108581,\n        0.05962854781,\n        0.02940181365,\n        0.02027409076,\n        0.02730411279,\n        0.04747821146,\n        0.03286621146,\n        0.0258593653,\n        0.03152217595,\n        0.0235678845,\n        0.01403419925,\n        0.01896100225,\n        0.02215147004,\n        0.02308606074,\n        0.01587827245,\n        0.03247476995,\n        0.01196144868,\n        0.01944236486,\n        0.0257290283,\n        0.01804960345,\n        0.01795606471,\n        0.02234484537,\n        0.01189939569,\n        0.02101026617\n    ],\n    // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=173675036&range=Z3:Z43,\n    KONF_BLAD: [\n        1.14,\n        3.14,\n        6.32,\n        4.99,\n        7.07,\n        13.57,\n        20.14,\n        3.12,\n        2.92,\n        6.45,\n        2.25,\n        10.94,\n        13.54,\n        15.52,\n        13.43,\n        2.83,\n        7.4,\n        14.28,\n        11.92,\n        3.44,\n        3.64,\n        18.1,\n        12.97,\n        10.15,\n        8.59,\n        3.48,\n        4.35,\n        9.07,\n        11.42,\n        5.82,\n        12.97,\n        2.62,\n        3.15,\n        8.41,\n        2.01,\n        1.66,\n        6.39,\n        4.99,\n        7.92,\n        7.85,\n        7.46\n    ]\n};\n\n});\n\nparcelRequire.register(\"h5k33\", function(module, exports) {\n\nvar $b5NLL = parcelRequire(\"b5NLL\");\n\nvar $3JNfW = parcelRequire(\"3JNfW\");\nconst $c7027472f2342e55$var$skippedModels = [\n    // To be honest, I don't really feel like keyword belongs in color convert, but eh.\n    \"keyword\",\n    // Gray conflicts with some method names, and has its own method defined.\n    \"gray\",\n    // Shouldn't really be in color-convert either...\n    \"hex\"\n];\nconst $c7027472f2342e55$var$hashedModelKeys = {};\nfor (const model of Object.keys($3JNfW))$c7027472f2342e55$var$hashedModelKeys[[\n    ...$3JNfW[model].labels\n].sort().join(\"\")] = model;\nconst $c7027472f2342e55$var$limiters = {};\nfunction $c7027472f2342e55$var$Color(object, model) {\n    if (!(this instanceof $c7027472f2342e55$var$Color)) return new $c7027472f2342e55$var$Color(object, model);\n    if (model && model in $c7027472f2342e55$var$skippedModels) model = null;\n    if (model && !(model in $3JNfW)) throw new Error(\"Unknown model: \" + model);\n    let i;\n    let channels;\n    if (object == null) {\n        this.model = \"rgb\";\n        this.color = [\n            0,\n            0,\n            0\n        ];\n        this.valpha = 1;\n    } else if (object instanceof $c7027472f2342e55$var$Color) {\n        this.model = object.model;\n        this.color = [\n            ...object.color\n        ];\n        this.valpha = object.valpha;\n    } else if (typeof object === \"string\") {\n        const result = $b5NLL.get(object);\n        if (result === null) throw new Error(\"Unable to parse color from string: \" + object);\n        this.model = result.model;\n        channels = $3JNfW[this.model].channels;\n        this.color = result.value.slice(0, channels);\n        this.valpha = typeof result.value[channels] === \"number\" ? result.value[channels] : 1;\n    } else if (object.length > 0) {\n        this.model = model || \"rgb\";\n        channels = $3JNfW[this.model].channels;\n        const newArray = Array.prototype.slice.call(object, 0, channels);\n        this.color = $c7027472f2342e55$var$zeroArray(newArray, channels);\n        this.valpha = typeof object[channels] === \"number\" ? object[channels] : 1;\n    } else if (typeof object === \"number\") {\n        // This is always RGB - can be converted later on.\n        this.model = \"rgb\";\n        this.color = [\n            object >> 16 & 0xFF,\n            object >> 8 & 0xFF,\n            object & 0xFF\n        ];\n        this.valpha = 1;\n    } else {\n        this.valpha = 1;\n        const keys = Object.keys(object);\n        if (\"alpha\" in object) {\n            keys.splice(keys.indexOf(\"alpha\"), 1);\n            this.valpha = typeof object.alpha === \"number\" ? object.alpha : 0;\n        }\n        const hashedKeys = keys.sort().join(\"\");\n        if (!(hashedKeys in $c7027472f2342e55$var$hashedModelKeys)) throw new Error(\"Unable to parse color from object: \" + JSON.stringify(object));\n        this.model = $c7027472f2342e55$var$hashedModelKeys[hashedKeys];\n        const { labels: labels } = $3JNfW[this.model];\n        const color = [];\n        for(i = 0; i < labels.length; i++)color.push(object[labels[i]]);\n        this.color = $c7027472f2342e55$var$zeroArray(color);\n    }\n    // Perform limitations (clamping, etc.)\n    if ($c7027472f2342e55$var$limiters[this.model]) {\n        channels = $3JNfW[this.model].channels;\n        for(i = 0; i < channels; i++){\n            const limit = $c7027472f2342e55$var$limiters[this.model][i];\n            if (limit) this.color[i] = limit(this.color[i]);\n        }\n    }\n    this.valpha = Math.max(0, Math.min(1, this.valpha));\n    if (Object.freeze) Object.freeze(this);\n}\n$c7027472f2342e55$var$Color.prototype = {\n    toString () {\n        return this.string();\n    },\n    toJSON () {\n        return this[this.model]();\n    },\n    string (places) {\n        let self = this.model in $b5NLL.to ? this : this.rgb();\n        self = self.round(typeof places === \"number\" ? places : 1);\n        const args = self.valpha === 1 ? self.color : [\n            ...self.color,\n            this.valpha\n        ];\n        return $b5NLL.to[self.model](args);\n    },\n    percentString (places) {\n        const self = this.rgb().round(typeof places === \"number\" ? places : 1);\n        const args = self.valpha === 1 ? self.color : [\n            ...self.color,\n            this.valpha\n        ];\n        return $b5NLL.to.rgb.percent(args);\n    },\n    array () {\n        return this.valpha === 1 ? [\n            ...this.color\n        ] : [\n            ...this.color,\n            this.valpha\n        ];\n    },\n    object () {\n        const result = {};\n        const { channels: channels } = $3JNfW[this.model];\n        const { labels: labels } = $3JNfW[this.model];\n        for(let i = 0; i < channels; i++)result[labels[i]] = this.color[i];\n        if (this.valpha !== 1) result.alpha = this.valpha;\n        return result;\n    },\n    unitArray () {\n        const rgb = this.rgb().color;\n        rgb[0] /= 255;\n        rgb[1] /= 255;\n        rgb[2] /= 255;\n        if (this.valpha !== 1) rgb.push(this.valpha);\n        return rgb;\n    },\n    unitObject () {\n        const rgb = this.rgb().object();\n        rgb.r /= 255;\n        rgb.g /= 255;\n        rgb.b /= 255;\n        if (this.valpha !== 1) rgb.alpha = this.valpha;\n        return rgb;\n    },\n    round (places) {\n        places = Math.max(places || 0, 0);\n        return new $c7027472f2342e55$var$Color([\n            ...this.color.map($c7027472f2342e55$var$roundToPlace(places)),\n            this.valpha\n        ], this.model);\n    },\n    alpha (value) {\n        if (value !== undefined) return new $c7027472f2342e55$var$Color([\n            ...this.color,\n            Math.max(0, Math.min(1, value))\n        ], this.model);\n        return this.valpha;\n    },\n    // Rgb\n    red: $c7027472f2342e55$var$getset(\"rgb\", 0, $c7027472f2342e55$var$maxfn(255)),\n    green: $c7027472f2342e55$var$getset(\"rgb\", 1, $c7027472f2342e55$var$maxfn(255)),\n    blue: $c7027472f2342e55$var$getset(\"rgb\", 2, $c7027472f2342e55$var$maxfn(255)),\n    hue: $c7027472f2342e55$var$getset([\n        \"hsl\",\n        \"hsv\",\n        \"hsl\",\n        \"hwb\",\n        \"hcg\"\n    ], 0, (value)=>(value % 360 + 360) % 360),\n    saturationl: $c7027472f2342e55$var$getset(\"hsl\", 1, $c7027472f2342e55$var$maxfn(100)),\n    lightness: $c7027472f2342e55$var$getset(\"hsl\", 2, $c7027472f2342e55$var$maxfn(100)),\n    saturationv: $c7027472f2342e55$var$getset(\"hsv\", 1, $c7027472f2342e55$var$maxfn(100)),\n    value: $c7027472f2342e55$var$getset(\"hsv\", 2, $c7027472f2342e55$var$maxfn(100)),\n    chroma: $c7027472f2342e55$var$getset(\"hcg\", 1, $c7027472f2342e55$var$maxfn(100)),\n    gray: $c7027472f2342e55$var$getset(\"hcg\", 2, $c7027472f2342e55$var$maxfn(100)),\n    white: $c7027472f2342e55$var$getset(\"hwb\", 1, $c7027472f2342e55$var$maxfn(100)),\n    wblack: $c7027472f2342e55$var$getset(\"hwb\", 2, $c7027472f2342e55$var$maxfn(100)),\n    cyan: $c7027472f2342e55$var$getset(\"cmyk\", 0, $c7027472f2342e55$var$maxfn(100)),\n    magenta: $c7027472f2342e55$var$getset(\"cmyk\", 1, $c7027472f2342e55$var$maxfn(100)),\n    yellow: $c7027472f2342e55$var$getset(\"cmyk\", 2, $c7027472f2342e55$var$maxfn(100)),\n    black: $c7027472f2342e55$var$getset(\"cmyk\", 3, $c7027472f2342e55$var$maxfn(100)),\n    x: $c7027472f2342e55$var$getset(\"xyz\", 0, $c7027472f2342e55$var$maxfn(95.047)),\n    y: $c7027472f2342e55$var$getset(\"xyz\", 1, $c7027472f2342e55$var$maxfn(100)),\n    z: $c7027472f2342e55$var$getset(\"xyz\", 2, $c7027472f2342e55$var$maxfn(108.833)),\n    l: $c7027472f2342e55$var$getset(\"lab\", 0, $c7027472f2342e55$var$maxfn(100)),\n    a: $c7027472f2342e55$var$getset(\"lab\", 1),\n    b: $c7027472f2342e55$var$getset(\"lab\", 2),\n    keyword (value) {\n        if (value !== undefined) return new $c7027472f2342e55$var$Color(value);\n        return $3JNfW[this.model].keyword(this.color);\n    },\n    hex (value) {\n        if (value !== undefined) return new $c7027472f2342e55$var$Color(value);\n        return $b5NLL.to.hex(this.rgb().round().color);\n    },\n    hexa (value) {\n        if (value !== undefined) return new $c7027472f2342e55$var$Color(value);\n        const rgbArray = this.rgb().round().color;\n        let alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n        if (alphaHex.length === 1) alphaHex = \"0\" + alphaHex;\n        return $b5NLL.to.hex(rgbArray) + alphaHex;\n    },\n    rgbNumber () {\n        const rgb = this.rgb().color;\n        return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;\n    },\n    luminosity () {\n        // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n        const rgb = this.rgb().color;\n        const lum = [];\n        for (const [i, element] of rgb.entries()){\n            const chan = element / 255;\n            lum[i] = chan <= 0.04045 ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n        }\n        return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast (color2) {\n        // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n        const lum1 = this.luminosity();\n        const lum2 = color2.luminosity();\n        if (lum1 > lum2) return (lum1 + 0.05) / (lum2 + 0.05);\n        return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level (color2) {\n        // https://www.w3.org/TR/WCAG/#contrast-enhanced\n        const contrastRatio = this.contrast(color2);\n        if (contrastRatio >= 7) return \"AAA\";\n        return contrastRatio >= 4.5 ? \"AA\" : \"\";\n    },\n    isDark () {\n        // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n        const rgb = this.rgb().color;\n        const yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n        return yiq < 128;\n    },\n    isLight () {\n        return !this.isDark();\n    },\n    negate () {\n        const rgb = this.rgb();\n        for(let i = 0; i < 3; i++)rgb.color[i] = 255 - rgb.color[i];\n        return rgb;\n    },\n    lighten (ratio) {\n        const hsl = this.hsl();\n        hsl.color[2] += hsl.color[2] * ratio;\n        return hsl;\n    },\n    darken (ratio) {\n        const hsl = this.hsl();\n        hsl.color[2] -= hsl.color[2] * ratio;\n        return hsl;\n    },\n    saturate (ratio) {\n        const hsl = this.hsl();\n        hsl.color[1] += hsl.color[1] * ratio;\n        return hsl;\n    },\n    desaturate (ratio) {\n        const hsl = this.hsl();\n        hsl.color[1] -= hsl.color[1] * ratio;\n        return hsl;\n    },\n    whiten (ratio) {\n        const hwb = this.hwb();\n        hwb.color[1] += hwb.color[1] * ratio;\n        return hwb;\n    },\n    blacken (ratio) {\n        const hwb = this.hwb();\n        hwb.color[2] += hwb.color[2] * ratio;\n        return hwb;\n    },\n    grayscale () {\n        // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n        const rgb = this.rgb().color;\n        const value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n        return $c7027472f2342e55$var$Color.rgb(value, value, value);\n    },\n    fade (ratio) {\n        return this.alpha(this.valpha - this.valpha * ratio);\n    },\n    opaquer (ratio) {\n        return this.alpha(this.valpha + this.valpha * ratio);\n    },\n    rotate (degrees) {\n        const hsl = this.hsl();\n        let hue = hsl.color[0];\n        hue = (hue + degrees) % 360;\n        hue = hue < 0 ? 360 + hue : hue;\n        hsl.color[0] = hue;\n        return hsl;\n    },\n    mix (mixinColor, weight) {\n        // Ported from sass implementation in C\n        // https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n        if (!mixinColor || !mixinColor.rgb) throw new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n        const color1 = mixinColor.rgb();\n        const color2 = this.rgb();\n        const p = weight === undefined ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = color1.alpha() - color2.alpha();\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;\n        const w2 = 1 - w1;\n        return $c7027472f2342e55$var$Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));\n    }\n};\n// Model conversion methods and static constructors\nfor (const model of Object.keys($3JNfW)){\n    if ($c7027472f2342e55$var$skippedModels.includes(model)) continue;\n    const { channels: channels } = $3JNfW[model];\n    // Conversion methods\n    $c7027472f2342e55$var$Color.prototype[model] = function(...args) {\n        if (this.model === model) return new $c7027472f2342e55$var$Color(this);\n        if (args.length > 0) return new $c7027472f2342e55$var$Color(args, model);\n        return new $c7027472f2342e55$var$Color([\n            ...$c7027472f2342e55$var$assertArray($3JNfW[this.model][model].raw(this.color)),\n            this.valpha\n        ], model);\n    };\n    // 'static' construction methods\n    $c7027472f2342e55$var$Color[model] = function(...args) {\n        let color = args[0];\n        if (typeof color === \"number\") color = $c7027472f2342e55$var$zeroArray(args, channels);\n        return new $c7027472f2342e55$var$Color(color, model);\n    };\n}\nfunction $c7027472f2342e55$var$roundTo(number, places) {\n    return Number(number.toFixed(places));\n}\nfunction $c7027472f2342e55$var$roundToPlace(places) {\n    return function(number) {\n        return $c7027472f2342e55$var$roundTo(number, places);\n    };\n}\nfunction $c7027472f2342e55$var$getset(model, channel, modifier) {\n    model = Array.isArray(model) ? model : [\n        model\n    ];\n    for (const m of model)($c7027472f2342e55$var$limiters[m] || ($c7027472f2342e55$var$limiters[m] = []))[channel] = modifier;\n    model = model[0];\n    return function(value) {\n        let result;\n        if (value !== undefined) {\n            if (modifier) value = modifier(value);\n            result = this[model]();\n            result.color[channel] = value;\n            return result;\n        }\n        result = this[model]().color[channel];\n        if (modifier) result = modifier(result);\n        return result;\n    };\n}\nfunction $c7027472f2342e55$var$maxfn(max) {\n    return function(v) {\n        return Math.max(0, Math.min(max, v));\n    };\n}\nfunction $c7027472f2342e55$var$assertArray(value) {\n    return Array.isArray(value) ? value : [\n        value\n    ];\n}\nfunction $c7027472f2342e55$var$zeroArray(array, length) {\n    for(let i = 0; i < length; i++)if (typeof array[i] !== \"number\") array[i] = 0;\n    return array;\n}\nmodule.exports = $c7027472f2342e55$var$Color;\n\n});\nparcelRequire.register(\"b5NLL\", function(module, exports) {\n/* MIT license */ \nvar $iXgRS = parcelRequire(\"iXgRS\");\n\nvar $fiNA2 = parcelRequire(\"fiNA2\");\nvar $8136c47c546fcb63$var$hasOwnProperty = Object.hasOwnProperty;\nvar $8136c47c546fcb63$var$reverseNames = Object.create(null);\n// create a list of reverse color names\nfor(var $8136c47c546fcb63$var$name in $iXgRS)if ($8136c47c546fcb63$var$hasOwnProperty.call($iXgRS, $8136c47c546fcb63$var$name)) $8136c47c546fcb63$var$reverseNames[$iXgRS[$8136c47c546fcb63$var$name]] = $8136c47c546fcb63$var$name;\nvar $8136c47c546fcb63$var$cs = module.exports = {\n    to: {},\n    get: {}\n};\n$8136c47c546fcb63$var$cs.get = function(string) {\n    var prefix = string.substring(0, 3).toLowerCase();\n    var val;\n    var model;\n    switch(prefix){\n        case \"hsl\":\n            val = $8136c47c546fcb63$var$cs.get.hsl(string);\n            model = \"hsl\";\n            break;\n        case \"hwb\":\n            val = $8136c47c546fcb63$var$cs.get.hwb(string);\n            model = \"hwb\";\n            break;\n        default:\n            val = $8136c47c546fcb63$var$cs.get.rgb(string);\n            model = \"rgb\";\n            break;\n    }\n    if (!val) return null;\n    return {\n        model: model,\n        value: val\n    };\n};\n$8136c47c546fcb63$var$cs.get.rgb = function(string) {\n    if (!string) return null;\n    var abbr = /^#([a-f0-9]{3,4})$/i;\n    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n    var rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n    var per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n    var keyword = /^(\\w+)$/;\n    var rgb = [\n        0,\n        0,\n        0,\n        1\n    ];\n    var match;\n    var i;\n    var hexAlpha;\n    if (match = string.match(hex)) {\n        hexAlpha = match[2];\n        match = match[1];\n        for(i = 0; i < 3; i++){\n            // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n            var i2 = i * 2;\n            rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n        }\n        if (hexAlpha) rgb[3] = parseInt(hexAlpha, 16) / 255;\n    } else if (match = string.match(abbr)) {\n        match = match[1];\n        hexAlpha = match[3];\n        for(i = 0; i < 3; i++)rgb[i] = parseInt(match[i] + match[i], 16);\n        if (hexAlpha) rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n    } else if (match = string.match(rgba)) {\n        for(i = 0; i < 3; i++)rgb[i] = parseInt(match[i + 1], 0);\n        if (match[4]) {\n            if (match[5]) rgb[3] = parseFloat(match[4]) * 0.01;\n            else rgb[3] = parseFloat(match[4]);\n        }\n    } else if (match = string.match(per)) {\n        for(i = 0; i < 3; i++)rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n        if (match[4]) {\n            if (match[5]) rgb[3] = parseFloat(match[4]) * 0.01;\n            else rgb[3] = parseFloat(match[4]);\n        }\n    } else if (match = string.match(keyword)) {\n        if (match[1] === \"transparent\") return [\n            0,\n            0,\n            0,\n            0\n        ];\n        if (!$8136c47c546fcb63$var$hasOwnProperty.call($iXgRS, match[1])) return null;\n        rgb = $iXgRS[match[1]];\n        rgb[3] = 1;\n        return rgb;\n    } else return null;\n    for(i = 0; i < 3; i++)rgb[i] = $8136c47c546fcb63$var$clamp(rgb[i], 0, 255);\n    rgb[3] = $8136c47c546fcb63$var$clamp(rgb[3], 0, 1);\n    return rgb;\n};\n$8136c47c546fcb63$var$cs.get.hsl = function(string) {\n    if (!string) return null;\n    var hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n    var match = string.match(hsl);\n    if (match) {\n        var alpha = parseFloat(match[4]);\n        var h = (parseFloat(match[1]) % 360 + 360) % 360;\n        var s = $8136c47c546fcb63$var$clamp(parseFloat(match[2]), 0, 100);\n        var l = $8136c47c546fcb63$var$clamp(parseFloat(match[3]), 0, 100);\n        var a = $8136c47c546fcb63$var$clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n        return [\n            h,\n            s,\n            l,\n            a\n        ];\n    }\n    return null;\n};\n$8136c47c546fcb63$var$cs.get.hwb = function(string) {\n    if (!string) return null;\n    var hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n    var match = string.match(hwb);\n    if (match) {\n        var alpha = parseFloat(match[4]);\n        var h = (parseFloat(match[1]) % 360 + 360) % 360;\n        var w = $8136c47c546fcb63$var$clamp(parseFloat(match[2]), 0, 100);\n        var b = $8136c47c546fcb63$var$clamp(parseFloat(match[3]), 0, 100);\n        var a = $8136c47c546fcb63$var$clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n        return [\n            h,\n            w,\n            b,\n            a\n        ];\n    }\n    return null;\n};\n$8136c47c546fcb63$var$cs.to.hex = function() {\n    var rgba = $fiNA2(arguments);\n    return \"#\" + $8136c47c546fcb63$var$hexDouble(rgba[0]) + $8136c47c546fcb63$var$hexDouble(rgba[1]) + $8136c47c546fcb63$var$hexDouble(rgba[2]) + (rgba[3] < 1 ? $8136c47c546fcb63$var$hexDouble(Math.round(rgba[3] * 255)) : \"\");\n};\n$8136c47c546fcb63$var$cs.to.rgb = function() {\n    var rgba = $fiNA2(arguments);\n    return rgba.length < 4 || rgba[3] === 1 ? \"rgb(\" + Math.round(rgba[0]) + \", \" + Math.round(rgba[1]) + \", \" + Math.round(rgba[2]) + \")\" : \"rgba(\" + Math.round(rgba[0]) + \", \" + Math.round(rgba[1]) + \", \" + Math.round(rgba[2]) + \", \" + rgba[3] + \")\";\n};\n$8136c47c546fcb63$var$cs.to.rgb.percent = function() {\n    var rgba = $fiNA2(arguments);\n    var r = Math.round(rgba[0] / 255 * 100);\n    var g = Math.round(rgba[1] / 255 * 100);\n    var b = Math.round(rgba[2] / 255 * 100);\n    return rgba.length < 4 || rgba[3] === 1 ? \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\" : \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + rgba[3] + \")\";\n};\n$8136c47c546fcb63$var$cs.to.hsl = function() {\n    var hsla = $fiNA2(arguments);\n    return hsla.length < 4 || hsla[3] === 1 ? \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\" : \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + hsla[3] + \")\";\n};\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n$8136c47c546fcb63$var$cs.to.hwb = function() {\n    var hwba = $fiNA2(arguments);\n    var a = \"\";\n    if (hwba.length >= 4 && hwba[3] !== 1) a = \", \" + hwba[3];\n    return \"hwb(\" + hwba[0] + \", \" + hwba[1] + \"%, \" + hwba[2] + \"%\" + a + \")\";\n};\n$8136c47c546fcb63$var$cs.to.keyword = function(rgb) {\n    return $8136c47c546fcb63$var$reverseNames[rgb.slice(0, 3)];\n};\n// helpers\nfunction $8136c47c546fcb63$var$clamp(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n}\nfunction $8136c47c546fcb63$var$hexDouble(num) {\n    var str = Math.round(num).toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n}\n\n});\nparcelRequire.register(\"iXgRS\", function(module, exports) {\n\"use strict\";\nmodule.exports = {\n    \"aliceblue\": [\n        240,\n        248,\n        255\n    ],\n    \"antiquewhite\": [\n        250,\n        235,\n        215\n    ],\n    \"aqua\": [\n        0,\n        255,\n        255\n    ],\n    \"aquamarine\": [\n        127,\n        255,\n        212\n    ],\n    \"azure\": [\n        240,\n        255,\n        255\n    ],\n    \"beige\": [\n        245,\n        245,\n        220\n    ],\n    \"bisque\": [\n        255,\n        228,\n        196\n    ],\n    \"black\": [\n        0,\n        0,\n        0\n    ],\n    \"blanchedalmond\": [\n        255,\n        235,\n        205\n    ],\n    \"blue\": [\n        0,\n        0,\n        255\n    ],\n    \"blueviolet\": [\n        138,\n        43,\n        226\n    ],\n    \"brown\": [\n        165,\n        42,\n        42\n    ],\n    \"burlywood\": [\n        222,\n        184,\n        135\n    ],\n    \"cadetblue\": [\n        95,\n        158,\n        160\n    ],\n    \"chartreuse\": [\n        127,\n        255,\n        0\n    ],\n    \"chocolate\": [\n        210,\n        105,\n        30\n    ],\n    \"coral\": [\n        255,\n        127,\n        80\n    ],\n    \"cornflowerblue\": [\n        100,\n        149,\n        237\n    ],\n    \"cornsilk\": [\n        255,\n        248,\n        220\n    ],\n    \"crimson\": [\n        220,\n        20,\n        60\n    ],\n    \"cyan\": [\n        0,\n        255,\n        255\n    ],\n    \"darkblue\": [\n        0,\n        0,\n        139\n    ],\n    \"darkcyan\": [\n        0,\n        139,\n        139\n    ],\n    \"darkgoldenrod\": [\n        184,\n        134,\n        11\n    ],\n    \"darkgray\": [\n        169,\n        169,\n        169\n    ],\n    \"darkgreen\": [\n        0,\n        100,\n        0\n    ],\n    \"darkgrey\": [\n        169,\n        169,\n        169\n    ],\n    \"darkkhaki\": [\n        189,\n        183,\n        107\n    ],\n    \"darkmagenta\": [\n        139,\n        0,\n        139\n    ],\n    \"darkolivegreen\": [\n        85,\n        107,\n        47\n    ],\n    \"darkorange\": [\n        255,\n        140,\n        0\n    ],\n    \"darkorchid\": [\n        153,\n        50,\n        204\n    ],\n    \"darkred\": [\n        139,\n        0,\n        0\n    ],\n    \"darksalmon\": [\n        233,\n        150,\n        122\n    ],\n    \"darkseagreen\": [\n        143,\n        188,\n        143\n    ],\n    \"darkslateblue\": [\n        72,\n        61,\n        139\n    ],\n    \"darkslategray\": [\n        47,\n        79,\n        79\n    ],\n    \"darkslategrey\": [\n        47,\n        79,\n        79\n    ],\n    \"darkturquoise\": [\n        0,\n        206,\n        209\n    ],\n    \"darkviolet\": [\n        148,\n        0,\n        211\n    ],\n    \"deeppink\": [\n        255,\n        20,\n        147\n    ],\n    \"deepskyblue\": [\n        0,\n        191,\n        255\n    ],\n    \"dimgray\": [\n        105,\n        105,\n        105\n    ],\n    \"dimgrey\": [\n        105,\n        105,\n        105\n    ],\n    \"dodgerblue\": [\n        30,\n        144,\n        255\n    ],\n    \"firebrick\": [\n        178,\n        34,\n        34\n    ],\n    \"floralwhite\": [\n        255,\n        250,\n        240\n    ],\n    \"forestgreen\": [\n        34,\n        139,\n        34\n    ],\n    \"fuchsia\": [\n        255,\n        0,\n        255\n    ],\n    \"gainsboro\": [\n        220,\n        220,\n        220\n    ],\n    \"ghostwhite\": [\n        248,\n        248,\n        255\n    ],\n    \"gold\": [\n        255,\n        215,\n        0\n    ],\n    \"goldenrod\": [\n        218,\n        165,\n        32\n    ],\n    \"gray\": [\n        128,\n        128,\n        128\n    ],\n    \"green\": [\n        0,\n        128,\n        0\n    ],\n    \"greenyellow\": [\n        173,\n        255,\n        47\n    ],\n    \"grey\": [\n        128,\n        128,\n        128\n    ],\n    \"honeydew\": [\n        240,\n        255,\n        240\n    ],\n    \"hotpink\": [\n        255,\n        105,\n        180\n    ],\n    \"indianred\": [\n        205,\n        92,\n        92\n    ],\n    \"indigo\": [\n        75,\n        0,\n        130\n    ],\n    \"ivory\": [\n        255,\n        255,\n        240\n    ],\n    \"khaki\": [\n        240,\n        230,\n        140\n    ],\n    \"lavender\": [\n        230,\n        230,\n        250\n    ],\n    \"lavenderblush\": [\n        255,\n        240,\n        245\n    ],\n    \"lawngreen\": [\n        124,\n        252,\n        0\n    ],\n    \"lemonchiffon\": [\n        255,\n        250,\n        205\n    ],\n    \"lightblue\": [\n        173,\n        216,\n        230\n    ],\n    \"lightcoral\": [\n        240,\n        128,\n        128\n    ],\n    \"lightcyan\": [\n        224,\n        255,\n        255\n    ],\n    \"lightgoldenrodyellow\": [\n        250,\n        250,\n        210\n    ],\n    \"lightgray\": [\n        211,\n        211,\n        211\n    ],\n    \"lightgreen\": [\n        144,\n        238,\n        144\n    ],\n    \"lightgrey\": [\n        211,\n        211,\n        211\n    ],\n    \"lightpink\": [\n        255,\n        182,\n        193\n    ],\n    \"lightsalmon\": [\n        255,\n        160,\n        122\n    ],\n    \"lightseagreen\": [\n        32,\n        178,\n        170\n    ],\n    \"lightskyblue\": [\n        135,\n        206,\n        250\n    ],\n    \"lightslategray\": [\n        119,\n        136,\n        153\n    ],\n    \"lightslategrey\": [\n        119,\n        136,\n        153\n    ],\n    \"lightsteelblue\": [\n        176,\n        196,\n        222\n    ],\n    \"lightyellow\": [\n        255,\n        255,\n        224\n    ],\n    \"lime\": [\n        0,\n        255,\n        0\n    ],\n    \"limegreen\": [\n        50,\n        205,\n        50\n    ],\n    \"linen\": [\n        250,\n        240,\n        230\n    ],\n    \"magenta\": [\n        255,\n        0,\n        255\n    ],\n    \"maroon\": [\n        128,\n        0,\n        0\n    ],\n    \"mediumaquamarine\": [\n        102,\n        205,\n        170\n    ],\n    \"mediumblue\": [\n        0,\n        0,\n        205\n    ],\n    \"mediumorchid\": [\n        186,\n        85,\n        211\n    ],\n    \"mediumpurple\": [\n        147,\n        112,\n        219\n    ],\n    \"mediumseagreen\": [\n        60,\n        179,\n        113\n    ],\n    \"mediumslateblue\": [\n        123,\n        104,\n        238\n    ],\n    \"mediumspringgreen\": [\n        0,\n        250,\n        154\n    ],\n    \"mediumturquoise\": [\n        72,\n        209,\n        204\n    ],\n    \"mediumvioletred\": [\n        199,\n        21,\n        133\n    ],\n    \"midnightblue\": [\n        25,\n        25,\n        112\n    ],\n    \"mintcream\": [\n        245,\n        255,\n        250\n    ],\n    \"mistyrose\": [\n        255,\n        228,\n        225\n    ],\n    \"moccasin\": [\n        255,\n        228,\n        181\n    ],\n    \"navajowhite\": [\n        255,\n        222,\n        173\n    ],\n    \"navy\": [\n        0,\n        0,\n        128\n    ],\n    \"oldlace\": [\n        253,\n        245,\n        230\n    ],\n    \"olive\": [\n        128,\n        128,\n        0\n    ],\n    \"olivedrab\": [\n        107,\n        142,\n        35\n    ],\n    \"orange\": [\n        255,\n        165,\n        0\n    ],\n    \"orangered\": [\n        255,\n        69,\n        0\n    ],\n    \"orchid\": [\n        218,\n        112,\n        214\n    ],\n    \"palegoldenrod\": [\n        238,\n        232,\n        170\n    ],\n    \"palegreen\": [\n        152,\n        251,\n        152\n    ],\n    \"paleturquoise\": [\n        175,\n        238,\n        238\n    ],\n    \"palevioletred\": [\n        219,\n        112,\n        147\n    ],\n    \"papayawhip\": [\n        255,\n        239,\n        213\n    ],\n    \"peachpuff\": [\n        255,\n        218,\n        185\n    ],\n    \"peru\": [\n        205,\n        133,\n        63\n    ],\n    \"pink\": [\n        255,\n        192,\n        203\n    ],\n    \"plum\": [\n        221,\n        160,\n        221\n    ],\n    \"powderblue\": [\n        176,\n        224,\n        230\n    ],\n    \"purple\": [\n        128,\n        0,\n        128\n    ],\n    \"rebeccapurple\": [\n        102,\n        51,\n        153\n    ],\n    \"red\": [\n        255,\n        0,\n        0\n    ],\n    \"rosybrown\": [\n        188,\n        143,\n        143\n    ],\n    \"royalblue\": [\n        65,\n        105,\n        225\n    ],\n    \"saddlebrown\": [\n        139,\n        69,\n        19\n    ],\n    \"salmon\": [\n        250,\n        128,\n        114\n    ],\n    \"sandybrown\": [\n        244,\n        164,\n        96\n    ],\n    \"seagreen\": [\n        46,\n        139,\n        87\n    ],\n    \"seashell\": [\n        255,\n        245,\n        238\n    ],\n    \"sienna\": [\n        160,\n        82,\n        45\n    ],\n    \"silver\": [\n        192,\n        192,\n        192\n    ],\n    \"skyblue\": [\n        135,\n        206,\n        235\n    ],\n    \"slateblue\": [\n        106,\n        90,\n        205\n    ],\n    \"slategray\": [\n        112,\n        128,\n        144\n    ],\n    \"slategrey\": [\n        112,\n        128,\n        144\n    ],\n    \"snow\": [\n        255,\n        250,\n        250\n    ],\n    \"springgreen\": [\n        0,\n        255,\n        127\n    ],\n    \"steelblue\": [\n        70,\n        130,\n        180\n    ],\n    \"tan\": [\n        210,\n        180,\n        140\n    ],\n    \"teal\": [\n        0,\n        128,\n        128\n    ],\n    \"thistle\": [\n        216,\n        191,\n        216\n    ],\n    \"tomato\": [\n        255,\n        99,\n        71\n    ],\n    \"turquoise\": [\n        64,\n        224,\n        208\n    ],\n    \"violet\": [\n        238,\n        130,\n        238\n    ],\n    \"wheat\": [\n        245,\n        222,\n        179\n    ],\n    \"white\": [\n        255,\n        255,\n        255\n    ],\n    \"whitesmoke\": [\n        245,\n        245,\n        245\n    ],\n    \"yellow\": [\n        255,\n        255,\n        0\n    ],\n    \"yellowgreen\": [\n        154,\n        205,\n        50\n    ]\n};\n\n});\n\nparcelRequire.register(\"fiNA2\", function(module, exports) {\n\"use strict\";\n\nvar $eRiD0 = parcelRequire(\"eRiD0\");\nvar $b23eff0c3c350e64$var$concat = Array.prototype.concat;\nvar $b23eff0c3c350e64$var$slice = Array.prototype.slice;\nvar $b23eff0c3c350e64$var$swizzle = module.exports = function swizzle(args) {\n    var results = [];\n    for(var i = 0, len = args.length; i < len; i++){\n        var arg = args[i];\n        if ($eRiD0(arg)) // http://jsperf.com/javascript-array-concat-vs-push/98\n        results = $b23eff0c3c350e64$var$concat.call(results, $b23eff0c3c350e64$var$slice.call(arg));\n        else results.push(arg);\n    }\n    return results;\n};\n$b23eff0c3c350e64$var$swizzle.wrap = function(fn) {\n    return function() {\n        return fn($b23eff0c3c350e64$var$swizzle(arguments));\n    };\n};\n\n});\nparcelRequire.register(\"eRiD0\", function(module, exports) {\nmodule.exports = function isArrayish(obj) {\n    if (!obj || typeof obj === \"string\") return false;\n    return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== \"String\");\n};\n\n});\n\n\n\nparcelRequire.register(\"3JNfW\", function(module, exports) {\n\nvar $34eeA = parcelRequire(\"34eeA\");\n\nvar $lIrBP = parcelRequire(\"lIrBP\");\nconst $2b8bc8511c5c8bbe$var$convert = {};\nconst $2b8bc8511c5c8bbe$var$models = Object.keys($34eeA);\nfunction $2b8bc8511c5c8bbe$var$wrapRaw(fn) {\n    const wrappedFn = function(...args) {\n        const arg0 = args[0];\n        if (arg0 === undefined || arg0 === null) return arg0;\n        if (arg0.length > 1) args = arg0;\n        return fn(args);\n    };\n    // Preserve .conversion property if there is one\n    if (\"conversion\" in fn) wrappedFn.conversion = fn.conversion;\n    return wrappedFn;\n}\nfunction $2b8bc8511c5c8bbe$var$wrapRounded(fn) {\n    const wrappedFn = function(...args) {\n        const arg0 = args[0];\n        if (arg0 === undefined || arg0 === null) return arg0;\n        if (arg0.length > 1) args = arg0;\n        const result = fn(args);\n        // We're assuming the result is an array here.\n        // see notice in conversions.js; don't use box types\n        // in conversion functions.\n        if (typeof result === \"object\") for(let len = result.length, i = 0; i < len; i++)result[i] = Math.round(result[i]);\n        return result;\n    };\n    // Preserve .conversion property if there is one\n    if (\"conversion\" in fn) wrappedFn.conversion = fn.conversion;\n    return wrappedFn;\n}\n$2b8bc8511c5c8bbe$var$models.forEach((fromModel)=>{\n    $2b8bc8511c5c8bbe$var$convert[fromModel] = {};\n    Object.defineProperty($2b8bc8511c5c8bbe$var$convert[fromModel], \"channels\", {\n        value: $34eeA[fromModel].channels\n    });\n    Object.defineProperty($2b8bc8511c5c8bbe$var$convert[fromModel], \"labels\", {\n        value: $34eeA[fromModel].labels\n    });\n    const routes = $lIrBP(fromModel);\n    const routeModels = Object.keys(routes);\n    routeModels.forEach((toModel)=>{\n        const fn = routes[toModel];\n        $2b8bc8511c5c8bbe$var$convert[fromModel][toModel] = $2b8bc8511c5c8bbe$var$wrapRounded(fn);\n        $2b8bc8511c5c8bbe$var$convert[fromModel][toModel].raw = $2b8bc8511c5c8bbe$var$wrapRaw(fn);\n    });\n});\nmodule.exports = $2b8bc8511c5c8bbe$var$convert;\n\n});\nparcelRequire.register(\"34eeA\", function(module, exports) {\n/* MIT license */ /* eslint-disable no-mixed-operators */ \nvar $iXgRS = parcelRequire(\"iXgRS\");\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nconst $23bcc96f08b27157$var$reverseKeywords = {};\nfor (const key of Object.keys($iXgRS))$23bcc96f08b27157$var$reverseKeywords[$iXgRS[key]] = key;\nconst $23bcc96f08b27157$var$convert = {\n    rgb: {\n        channels: 3,\n        labels: \"rgb\"\n    },\n    hsl: {\n        channels: 3,\n        labels: \"hsl\"\n    },\n    hsv: {\n        channels: 3,\n        labels: \"hsv\"\n    },\n    hwb: {\n        channels: 3,\n        labels: \"hwb\"\n    },\n    cmyk: {\n        channels: 4,\n        labels: \"cmyk\"\n    },\n    xyz: {\n        channels: 3,\n        labels: \"xyz\"\n    },\n    lab: {\n        channels: 3,\n        labels: \"lab\"\n    },\n    lch: {\n        channels: 3,\n        labels: \"lch\"\n    },\n    hex: {\n        channels: 1,\n        labels: [\n            \"hex\"\n        ]\n    },\n    keyword: {\n        channels: 1,\n        labels: [\n            \"keyword\"\n        ]\n    },\n    ansi16: {\n        channels: 1,\n        labels: [\n            \"ansi16\"\n        ]\n    },\n    ansi256: {\n        channels: 1,\n        labels: [\n            \"ansi256\"\n        ]\n    },\n    hcg: {\n        channels: 3,\n        labels: [\n            \"h\",\n            \"c\",\n            \"g\"\n        ]\n    },\n    apple: {\n        channels: 3,\n        labels: [\n            \"r16\",\n            \"g16\",\n            \"b16\"\n        ]\n    },\n    gray: {\n        channels: 1,\n        labels: [\n            \"gray\"\n        ]\n    }\n};\nmodule.exports = $23bcc96f08b27157$var$convert;\n// Hide .channels and .labels properties\nfor (const model of Object.keys($23bcc96f08b27157$var$convert)){\n    if (!(\"channels\" in $23bcc96f08b27157$var$convert[model])) throw new Error(\"missing channels property: \" + model);\n    if (!(\"labels\" in $23bcc96f08b27157$var$convert[model])) throw new Error(\"missing channel labels property: \" + model);\n    if ($23bcc96f08b27157$var$convert[model].labels.length !== $23bcc96f08b27157$var$convert[model].channels) throw new Error(\"channel and label counts mismatch: \" + model);\n    const { channels: channels, labels: labels } = $23bcc96f08b27157$var$convert[model];\n    delete $23bcc96f08b27157$var$convert[model].channels;\n    delete $23bcc96f08b27157$var$convert[model].labels;\n    Object.defineProperty($23bcc96f08b27157$var$convert[model], \"channels\", {\n        value: channels\n    });\n    Object.defineProperty($23bcc96f08b27157$var$convert[model], \"labels\", {\n        value: labels\n    });\n}\n$23bcc96f08b27157$var$convert.rgb.hsl = function(rgb) {\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n    if (max === min) h = 0;\n    else if (r === max) h = (g - b) / delta;\n    else if (g === max) h = 2 + (b - r) / delta;\n    else if (b === max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    const l = (min + max) / 2;\n    if (max === min) s = 0;\n    else if (l <= 0.5) s = delta / (max + min);\n    else s = delta / (2 - max - min);\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.hsv = function(rgb) {\n    let rdif;\n    let gdif;\n    let bdif;\n    let h;\n    let s;\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n    const v = Math.max(r, g, b);\n    const diff = v - Math.min(r, g, b);\n    const diffc = function(c) {\n        return (v - c) / 6 / diff + 0.5;\n    };\n    if (diff === 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = diff / v;\n        rdif = diffc(r);\n        gdif = diffc(g);\n        bdif = diffc(b);\n        if (r === v) h = bdif - gdif;\n        else if (g === v) h = 1 / 3 + rdif - bdif;\n        else if (b === v) h = 2 / 3 + gdif - rdif;\n        if (h < 0) h += 1;\n        else if (h > 1) h -= 1;\n    }\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.hwb = function(rgb) {\n    const r = rgb[0];\n    const g = rgb[1];\n    let b = rgb[2];\n    const h = $23bcc96f08b27157$var$convert.rgb.hsl(rgb)[0];\n    const w = 1 / 255 * Math.min(r, Math.min(g, b));\n    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [\n        h,\n        w * 100,\n        b * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.cmyk = function(rgb) {\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n    const k = Math.min(1 - r, 1 - g, 1 - b);\n    const c = (1 - r - k) / (1 - k) || 0;\n    const m = (1 - g - k) / (1 - k) || 0;\n    const y = (1 - b - k) / (1 - k) || 0;\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n};\nfunction $23bcc96f08b27157$var$comparativeDistance(x, y) {\n    /*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/ return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;\n}\n$23bcc96f08b27157$var$convert.rgb.keyword = function(rgb) {\n    const reversed = $23bcc96f08b27157$var$reverseKeywords[rgb];\n    if (reversed) return reversed;\n    let currentClosestDistance = Infinity;\n    let currentClosestKeyword;\n    for (const keyword of Object.keys($iXgRS)){\n        const value = $iXgRS[keyword];\n        // Compute comparative distance\n        const distance = $23bcc96f08b27157$var$comparativeDistance(rgb, value);\n        // Check if its less, if so set as closest\n        if (distance < currentClosestDistance) {\n            currentClosestDistance = distance;\n            currentClosestKeyword = keyword;\n        }\n    }\n    return currentClosestKeyword;\n};\n$23bcc96f08b27157$var$convert.keyword.rgb = function(keyword) {\n    return $iXgRS[keyword];\n};\n$23bcc96f08b27157$var$convert.rgb.xyz = function(rgb) {\n    let r = rgb[0] / 255;\n    let g = rgb[1] / 255;\n    let b = rgb[2] / 255;\n    // Assume sRGB\n    r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;\n    g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;\n    b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;\n    const x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    const y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    const z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [\n        x * 100,\n        y * 100,\n        z * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.lab = function(rgb) {\n    const xyz = $23bcc96f08b27157$var$convert.rgb.xyz(rgb);\n    let x = xyz[0];\n    let y = xyz[1];\n    let z = xyz[2];\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n    const l = 116 * y - 16;\n    const a = 500 * (x - y);\n    const b = 200 * (y - z);\n    return [\n        l,\n        a,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.hsl.rgb = function(hsl) {\n    const h = hsl[0] / 360;\n    const s = hsl[1] / 100;\n    const l = hsl[2] / 100;\n    let t2;\n    let t3;\n    let val;\n    if (s === 0) {\n        val = l * 255;\n        return [\n            val,\n            val,\n            val\n        ];\n    }\n    if (l < 0.5) t2 = l * (1 + s);\n    else t2 = l + s - l * s;\n    const t1 = 2 * l - t2;\n    const rgb = [\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < 3; i++){\n        t3 = h + 1 / 3 * -(i - 1);\n        if (t3 < 0) t3++;\n        if (t3 > 1) t3--;\n        if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;\n        else if (2 * t3 < 1) val = t2;\n        else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        else val = t1;\n        rgb[i] = val * 255;\n    }\n    return rgb;\n};\n$23bcc96f08b27157$var$convert.hsl.hsv = function(hsl) {\n    const h = hsl[0];\n    let s = hsl[1] / 100;\n    let l = hsl[2] / 100;\n    let smin = s;\n    const lmin = Math.max(l, 0.01);\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    smin *= lmin <= 1 ? lmin : 2 - lmin;\n    const v = (l + s) / 2;\n    const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n    return [\n        h,\n        sv * 100,\n        v * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hsv.rgb = function(hsv) {\n    const h = hsv[0] / 60;\n    const s = hsv[1] / 100;\n    let v = hsv[2] / 100;\n    const hi = Math.floor(h) % 6;\n    const f = h - Math.floor(h);\n    const p = 255 * v * (1 - s);\n    const q = 255 * v * (1 - s * f);\n    const t = 255 * v * (1 - s * (1 - f));\n    v *= 255;\n    switch(hi){\n        case 0:\n            return [\n                v,\n                t,\n                p\n            ];\n        case 1:\n            return [\n                q,\n                v,\n                p\n            ];\n        case 2:\n            return [\n                p,\n                v,\n                t\n            ];\n        case 3:\n            return [\n                p,\n                q,\n                v\n            ];\n        case 4:\n            return [\n                t,\n                p,\n                v\n            ];\n        case 5:\n            return [\n                v,\n                p,\n                q\n            ];\n    }\n};\n$23bcc96f08b27157$var$convert.hsv.hsl = function(hsv) {\n    const h = hsv[0];\n    const s = hsv[1] / 100;\n    const v = hsv[2] / 100;\n    const vmin = Math.max(v, 0.01);\n    let sl;\n    let l;\n    l = (2 - s) * v;\n    const lmin = (2 - s) * vmin;\n    sl = s * vmin;\n    sl /= lmin <= 1 ? lmin : 2 - lmin;\n    sl = sl || 0;\n    l /= 2;\n    return [\n        h,\n        sl * 100,\n        l * 100\n    ];\n};\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n$23bcc96f08b27157$var$convert.hwb.rgb = function(hwb) {\n    const h = hwb[0] / 360;\n    let wh = hwb[1] / 100;\n    let bl = hwb[2] / 100;\n    const ratio = wh + bl;\n    let f;\n    // Wh + bl cant be > 1\n    if (ratio > 1) {\n        wh /= ratio;\n        bl /= ratio;\n    }\n    const i = Math.floor(6 * h);\n    const v = 1 - bl;\n    f = 6 * h - i;\n    if ((i & 0x01) !== 0) f = 1 - f;\n    const n = wh + f * (v - wh); // Linear interpolation\n    let r;\n    let g;\n    let b;\n    /* eslint-disable max-statements-per-line,no-multi-spaces */ switch(i){\n        default:\n        case 6:\n        case 0:\n            r = v;\n            g = n;\n            b = wh;\n            break;\n        case 1:\n            r = n;\n            g = v;\n            b = wh;\n            break;\n        case 2:\n            r = wh;\n            g = v;\n            b = n;\n            break;\n        case 3:\n            r = wh;\n            g = n;\n            b = v;\n            break;\n        case 4:\n            r = n;\n            g = wh;\n            b = v;\n            break;\n        case 5:\n            r = v;\n            g = wh;\n            b = n;\n            break;\n    }\n    /* eslint-enable max-statements-per-line,no-multi-spaces */ return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.cmyk.rgb = function(cmyk) {\n    const c = cmyk[0] / 100;\n    const m = cmyk[1] / 100;\n    const y = cmyk[2] / 100;\n    const k = cmyk[3] / 100;\n    const r = 1 - Math.min(1, c * (1 - k) + k);\n    const g = 1 - Math.min(1, m * (1 - k) + k);\n    const b = 1 - Math.min(1, y * (1 - k) + k);\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.xyz.rgb = function(xyz) {\n    const x = xyz[0] / 100;\n    const y = xyz[1] / 100;\n    const z = xyz[2] / 100;\n    let r;\n    let g;\n    let b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.204 + z * 1.0570;\n    // Assume sRGB\n    r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;\n    g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;\n    b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.xyz.lab = function(xyz) {\n    let x = xyz[0];\n    let y = xyz[1];\n    let z = xyz[2];\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n    const l = 116 * y - 16;\n    const a = 500 * (x - y);\n    const b = 200 * (y - z);\n    return [\n        l,\n        a,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.lab.xyz = function(lab) {\n    const l = lab[0];\n    const a = lab[1];\n    const b = lab[2];\n    let x;\n    let y;\n    let z;\n    y = (l + 16) / 116;\n    x = a / 500 + y;\n    z = y - b / 200;\n    const y2 = y ** 3;\n    const x2 = x ** 3;\n    const z2 = z ** 3;\n    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n    x *= 95.047;\n    y *= 100;\n    z *= 108.883;\n    return [\n        x,\n        y,\n        z\n    ];\n};\n$23bcc96f08b27157$var$convert.lab.lch = function(lab) {\n    const l = lab[0];\n    const a = lab[1];\n    const b = lab[2];\n    let h;\n    const hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n    if (h < 0) h += 360;\n    const c = Math.sqrt(a * a + b * b);\n    return [\n        l,\n        c,\n        h\n    ];\n};\n$23bcc96f08b27157$var$convert.lch.lab = function(lch) {\n    const l = lch[0];\n    const c = lch[1];\n    const h = lch[2];\n    const hr = h / 360 * 2 * Math.PI;\n    const a = c * Math.cos(hr);\n    const b = c * Math.sin(hr);\n    return [\n        l,\n        a,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.ansi16 = function(args, saturation = null) {\n    const [r, g, b] = args;\n    let value = saturation === null ? $23bcc96f08b27157$var$convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n    value = Math.round(value / 50);\n    if (value === 0) return 30;\n    let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n    if (value === 2) ansi += 60;\n    return ansi;\n};\n$23bcc96f08b27157$var$convert.hsv.ansi16 = function(args) {\n    // Optimization here; we already know the value and don't need to get\n    // it converted for us.\n    return $23bcc96f08b27157$var$convert.rgb.ansi16($23bcc96f08b27157$var$convert.hsv.rgb(args), args[2]);\n};\n$23bcc96f08b27157$var$convert.rgb.ansi256 = function(args) {\n    const r = args[0];\n    const g = args[1];\n    const b = args[2];\n    // We use the extended greyscale palette here, with the exception of\n    // black and white. normal palette only has 4 greyscale shades.\n    if (r === g && g === b) {\n        if (r < 8) return 16;\n        if (r > 248) return 231;\n        return Math.round((r - 8) / 247 * 24) + 232;\n    }\n    const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n    return ansi;\n};\n$23bcc96f08b27157$var$convert.ansi16.rgb = function(args) {\n    let color = args % 10;\n    // Handle greyscale\n    if (color === 0 || color === 7) {\n        if (args > 50) color += 3.5;\n        color = color / 10.5 * 255;\n        return [\n            color,\n            color,\n            color\n        ];\n    }\n    const mult = (~~(args > 50) + 1) * 0.5;\n    const r = (color & 1) * mult * 255;\n    const g = (color >> 1 & 1) * mult * 255;\n    const b = (color >> 2 & 1) * mult * 255;\n    return [\n        r,\n        g,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.ansi256.rgb = function(args) {\n    // Handle greyscale\n    if (args >= 232) {\n        const c = (args - 232) * 10 + 8;\n        return [\n            c,\n            c,\n            c\n        ];\n    }\n    args -= 16;\n    let rem;\n    const r = Math.floor(args / 36) / 5 * 255;\n    const g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n    const b = rem % 6 / 5 * 255;\n    return [\n        r,\n        g,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.hex = function(args) {\n    const integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n    const string = integer.toString(16).toUpperCase();\n    return \"000000\".substring(string.length) + string;\n};\n$23bcc96f08b27157$var$convert.hex.rgb = function(args) {\n    const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n    if (!match) return [\n        0,\n        0,\n        0\n    ];\n    let colorString = match[0];\n    if (match[0].length === 3) colorString = colorString.split(\"\").map((char)=>{\n        return char + char;\n    }).join(\"\");\n    const integer = parseInt(colorString, 16);\n    const r = integer >> 16 & 0xFF;\n    const g = integer >> 8 & 0xFF;\n    const b = integer & 0xFF;\n    return [\n        r,\n        g,\n        b\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.hcg = function(rgb) {\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n    const max = Math.max(Math.max(r, g), b);\n    const min = Math.min(Math.min(r, g), b);\n    const chroma = max - min;\n    let grayscale;\n    let hue;\n    if (chroma < 1) grayscale = min / (1 - chroma);\n    else grayscale = 0;\n    if (chroma <= 0) hue = 0;\n    else if (max === r) hue = (g - b) / chroma % 6;\n    else if (max === g) hue = 2 + (b - r) / chroma;\n    else hue = 4 + (r - g) / chroma;\n    hue /= 6;\n    hue %= 1;\n    return [\n        hue * 360,\n        chroma * 100,\n        grayscale * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hsl.hcg = function(hsl) {\n    const s = hsl[1] / 100;\n    const l = hsl[2] / 100;\n    const c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);\n    let f = 0;\n    if (c < 1.0) f = (l - 0.5 * c) / (1.0 - c);\n    return [\n        hsl[0],\n        c * 100,\n        f * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hsv.hcg = function(hsv) {\n    const s = hsv[1] / 100;\n    const v = hsv[2] / 100;\n    const c = s * v;\n    let f = 0;\n    if (c < 1.0) f = (v - c) / (1 - c);\n    return [\n        hsv[0],\n        c * 100,\n        f * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hcg.rgb = function(hcg) {\n    const h = hcg[0] / 360;\n    const c = hcg[1] / 100;\n    const g = hcg[2] / 100;\n    if (c === 0.0) return [\n        g * 255,\n        g * 255,\n        g * 255\n    ];\n    const pure = [\n        0,\n        0,\n        0\n    ];\n    const hi = h % 1 * 6;\n    const v = hi % 1;\n    const w = 1 - v;\n    let mg = 0;\n    /* eslint-disable max-statements-per-line */ switch(Math.floor(hi)){\n        case 0:\n            pure[0] = 1;\n            pure[1] = v;\n            pure[2] = 0;\n            break;\n        case 1:\n            pure[0] = w;\n            pure[1] = 1;\n            pure[2] = 0;\n            break;\n        case 2:\n            pure[0] = 0;\n            pure[1] = 1;\n            pure[2] = v;\n            break;\n        case 3:\n            pure[0] = 0;\n            pure[1] = w;\n            pure[2] = 1;\n            break;\n        case 4:\n            pure[0] = v;\n            pure[1] = 0;\n            pure[2] = 1;\n            break;\n        default:\n            pure[0] = 1;\n            pure[1] = 0;\n            pure[2] = w;\n    }\n    /* eslint-enable max-statements-per-line */ mg = (1.0 - c) * g;\n    return [\n        (c * pure[0] + mg) * 255,\n        (c * pure[1] + mg) * 255,\n        (c * pure[2] + mg) * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.hcg.hsv = function(hcg) {\n    const c = hcg[1] / 100;\n    const g = hcg[2] / 100;\n    const v = c + g * (1.0 - c);\n    let f = 0;\n    if (v > 0.0) f = c / v;\n    return [\n        hcg[0],\n        f * 100,\n        v * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hcg.hsl = function(hcg) {\n    const c = hcg[1] / 100;\n    const g = hcg[2] / 100;\n    const l = g * (1.0 - c) + 0.5 * c;\n    let s = 0;\n    if (l > 0.0 && l < 0.5) s = c / (2 * l);\n    else if (l >= 0.5 && l < 1.0) s = c / (2 * (1 - l));\n    return [\n        hcg[0],\n        s * 100,\n        l * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hcg.hwb = function(hcg) {\n    const c = hcg[1] / 100;\n    const g = hcg[2] / 100;\n    const v = c + g * (1.0 - c);\n    return [\n        hcg[0],\n        (v - c) * 100,\n        (1 - v) * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.hwb.hcg = function(hwb) {\n    const w = hwb[1] / 100;\n    const b = hwb[2] / 100;\n    const v = 1 - b;\n    const c = v - w;\n    let g = 0;\n    if (c < 1) g = (v - c) / (1 - c);\n    return [\n        hwb[0],\n        c * 100,\n        g * 100\n    ];\n};\n$23bcc96f08b27157$var$convert.apple.rgb = function(apple) {\n    return [\n        apple[0] / 65535 * 255,\n        apple[1] / 65535 * 255,\n        apple[2] / 65535 * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.rgb.apple = function(rgb) {\n    return [\n        rgb[0] / 255 * 65535,\n        rgb[1] / 255 * 65535,\n        rgb[2] / 255 * 65535\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.rgb = function(args) {\n    return [\n        args[0] / 100 * 255,\n        args[0] / 100 * 255,\n        args[0] / 100 * 255\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.hsl = function(args) {\n    return [\n        0,\n        0,\n        args[0]\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.hsv = $23bcc96f08b27157$var$convert.gray.hsl;\n$23bcc96f08b27157$var$convert.gray.hwb = function(gray) {\n    return [\n        0,\n        100,\n        gray[0]\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.cmyk = function(gray) {\n    return [\n        0,\n        0,\n        0,\n        gray[0]\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.lab = function(gray) {\n    return [\n        gray[0],\n        0,\n        0\n    ];\n};\n$23bcc96f08b27157$var$convert.gray.hex = function(gray) {\n    const val = Math.round(gray[0] / 100 * 255) & 0xFF;\n    const integer = (val << 16) + (val << 8) + val;\n    const string = integer.toString(16).toUpperCase();\n    return \"000000\".substring(string.length) + string;\n};\n$23bcc96f08b27157$var$convert.rgb.gray = function(rgb) {\n    const val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n    return [\n        val / 255 * 100\n    ];\n};\n\n});\n\nparcelRequire.register(\"lIrBP\", function(module, exports) {\n\nvar $34eeA = parcelRequire(\"34eeA\");\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/ function $fcf31fa4f4290ffc$var$buildGraph() {\n    const graph = {};\n    // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n    const models = Object.keys($34eeA);\n    for(let len = models.length, i = 0; i < len; i++)graph[models[i]] = {\n        // http://jsperf.com/1-vs-infinity\n        // micro-opt, but this is simple.\n        distance: -1,\n        parent: null\n    };\n    return graph;\n}\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction $fcf31fa4f4290ffc$var$deriveBFS(fromModel) {\n    const graph = $fcf31fa4f4290ffc$var$buildGraph();\n    const queue = [\n        fromModel\n    ]; // Unshift -> queue -> pop\n    graph[fromModel].distance = 0;\n    while(queue.length){\n        const current = queue.pop();\n        const adjacents = Object.keys($34eeA[current]);\n        for(let len = adjacents.length, i = 0; i < len; i++){\n            const adjacent = adjacents[i];\n            const node = graph[adjacent];\n            if (node.distance === -1) {\n                node.distance = graph[current].distance + 1;\n                node.parent = current;\n                queue.unshift(adjacent);\n            }\n        }\n    }\n    return graph;\n}\nfunction $fcf31fa4f4290ffc$var$link(from, to) {\n    return function(args) {\n        return to(from(args));\n    };\n}\nfunction $fcf31fa4f4290ffc$var$wrapConversion(toModel, graph) {\n    const path = [\n        graph[toModel].parent,\n        toModel\n    ];\n    let fn = $34eeA[graph[toModel].parent][toModel];\n    let cur = graph[toModel].parent;\n    while(graph[cur].parent){\n        path.unshift(graph[cur].parent);\n        fn = $fcf31fa4f4290ffc$var$link($34eeA[graph[cur].parent][cur], fn);\n        cur = graph[cur].parent;\n    }\n    fn.conversion = path;\n    return fn;\n}\nmodule.exports = function(fromModel) {\n    const graph = $fcf31fa4f4290ffc$var$deriveBFS(fromModel);\n    const conversion = {};\n    const models = Object.keys(graph);\n    for(let len = models.length, i = 0; i < len; i++){\n        const toModel = models[i];\n        const node = graph[toModel];\n        if (node.parent === null) continue;\n        conversion[toModel] = $fcf31fa4f4290ffc$var$wrapConversion(toModel, graph);\n    }\n    return conversion;\n};\n\n});\n\n\n\n\nparcelRequire.register(\"8VULN\", function(module, exports) {\n\n$parcel$export(module.exports, \"komentarze\", () => $efd47c46dd00e93d$export$fdd7a3ba59c98337);\n$parcel$export(module.exports, \"komentarzKoncowy\", () => $efd47c46dd00e93d$export$fcd124d90160e604);\n$parcel$export(module.exports, \"zaswiadczenia\", () => $efd47c46dd00e93d$export$53397944e62b6ac5);\nconst $efd47c46dd00e93d$export$fdd7a3ba59c98337 = {\n    Legnica: {\n        nazwaOkregu: \"Legnica\",\n        nrOkregu: 1,\n        rekomendacjePartii: [\n            \"KO\",\n            \"LEWICA\"\n        ],\n        txt: \"Lewica i KO konkuruje o ostatni mandat z PiS i Konfederacją, warto wesprzeć swym głosem jedną z nich.\"\n    },\n    Wałbrzych: {\n        nazwaOkregu: \"Wałbrzych\",\n        nrOkregu: 2,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Lewica i Trzecia Droga konkuruje o ostatni mandat z PiS, warto wesprzeć swym głosem jedną z nich.\"\n    },\n    Wrocław: {\n        nazwaOkregu: \"Wrocław\",\n        nrOkregu: 3,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"KO ma największe szanse zdobyć 6 mandat\\xf3w. Trzecia Droga ma szanse na drugi mandat. Warto wesprzeć swym głosem jedną z nich, bo mają największe szanse zdobyć mandat kosztem PiS lub Konfederacji.\"\n    },\n    Bydgoszcz: {\n        nazwaOkregu: \"Bydgoszcz\",\n        nrOkregu: 4,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Trzy partie opozycyjne razem konkurują o mandat z Konfederacją. Należy wesprzeć Lewicę i Trzecią Drogę, bo mają najbardziej przewidywalne, wysokie szanse na kolejne mandaty.\"\n    },\n    Toruń: {\n        nazwaOkregu: \"Toruń\",\n        nrOkregu: 5,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Trzy partie opozycyjne razem konkurują o mandat z Konfederacją. Należy wesprzeć Lewicę i Trzecią Drogę, bo ma najwyższą szansę na kolejny mandat.\"\n    },\n    Lublin: {\n        nazwaOkregu: \"Lublin\",\n        nrOkregu: 6,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"Wszystkie 5 ugrupowań walczy na r\\xf3wnych szansach o 3 ostatnie mandaty. Warto wesprzeć KO i Trzecią Drogę, gdyż mają największe szanse w walce z PiS i Konfederacją.\"\n    },\n    Chełm: {\n        nazwaOkregu: \"Chełm\",\n        nrOkregu: 7,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Lewica walczy z PiS o ostatni mandat i potrzebuje w tym okręgu wsparcia.\"\n    },\n    \"Zielona G\\xf3ra\": {\n        nazwaOkregu: \"Zielona G\\xf3ra\",\n        nrOkregu: 8,\n        rekomendacjePartii: [\n            \"LEWICA\"\n        ],\n        txt: \"O ostatni mandat walczy PiS, Konfederacja i Trzecia Droga. Na pewno trzeba wesprzeć Trzecią Drogę, ale poparcie KO r\\xf3wnież jest uzasadnione.\"\n    },\n    Łódź: {\n        nazwaOkregu: \"Ł\\xf3dź\",\n        nrOkregu: 9,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"O ostatni mandat walczy PiS, Konfederacja i Trzecia Droga. Na pewno trzeba wesprzeć Trzecią Drogę, ale poparcie KO r\\xf3wnież jest uzasadnione.\"\n    },\n    \"Piotrk\\xf3w Trybunalski\": {\n        nazwaOkregu: \"Piotrk\\xf3w Trybunalski\",\n        nrOkregu: 10,\n        rekomendacjePartii: [\n            \"KO\",\n            \"LEWICA\"\n        ],\n        txt: \"Cztery partie walczą o ostatnie trzy przydzielane mandaty: KO, Lewica, PiS i Konfederacja. By nie stracić jednego z mandat\\xf3w demokratycznych potrzebne jest wsparcie dla KO i Lewicy.\"\n    },\n    Sieradz: {\n        nazwaOkregu: \"Sieradz\",\n        nrOkregu: 11,\n        rekomendacjePartii: [\n            \"TD\"\n        ],\n        txt: \"PiS i Trzecia Droga walczą o ostatni mandat, dodatkowe wsparcie Trzeciej Drogi z okręg\\xf3w Kalisz i Konin pomoże odebrać PiS mandat.\"\n    },\n    Chrzanów: {\n        nazwaOkregu: \"Chrzan\\xf3w\",\n        nrOkregu: 12,\n        rekomendacjePartii: [\n            \"TD\"\n        ],\n        txt: \"PiS, Konfederacja i Trzecia Droga walczą o ostatnie dwa mandaty, dodatkowe wsparcie Trzeciej Drogi daje największe szanse na odebranie PiS mandatu.\"\n    },\n    Kraków: {\n        nazwaOkregu: \"Krak\\xf3w\",\n        nrOkregu: 13,\n        rekomendacjePartii: [\n            \"LEWICA\"\n        ],\n        txt: \"Trzy ugrupowania walczą z PiS o ostatnie 3 mandaty. Jedna z partii może stracić ten mandat na rzecz PiS, dlatego każda partia wymaga poparcia. Sugerujemy Lewicę, gdyż KO i Trzecia droga mogą strategicznie wyjechać odpowiednio do Tarnowa i Chrzanowa.\"\n    },\n    \"Nowy Sącz\": {\n        nazwaOkregu: \"Nowy Sącz\",\n        nrOkregu: 14,\n        rekomendacjePartii: [\n            \"LEWICA\"\n        ],\n        txt: \"W tym okręgu rekomendujemy wsparcie Lewicy, za pomocą wyborc\\xf3w niezdecydowanych z tego okręgu oraz turystyki wyborczej Lewicy z okręg\\xf3w Tarn\\xf3w i Chrzan\\xf3w. Więcej o tej strategi w artykule podlinkowanym pod logo Lewicy.\"\n    },\n    Tarnów: {\n        nazwaOkregu: \"Tarn\\xf3w\",\n        nrOkregu: 15,\n        rekomendacjePartii: [\n            \"TD\"\n        ],\n        txt: \"Domowy okręg Władysława Kosiniaka-Kamysza, Trzecia Droga z realnymi szansami na drugi mandat. Wyborcy Lewicy powinni głosować w okręgu Nowy Sącz, gdzie Lewica wsparta wyborcami z Tarnowa i Chrzanowa walczy o pierwszy mandat.\"\n    },\n    Płock: {\n        nazwaOkregu: \"Płock\",\n        nrOkregu: 16,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Lewica i Trzecia Droga mają szanse odebrać mandat Konfederacji. Obydwie te partie powinny liczyć na wsparcie ich wyborc\\xf3w z okręg\\xf3w 20 w przypadku Trzeciej Drogi, oraz 17 w przypadku Lewicy. Warto wesprzeć swym głosem jedną z nich.\"\n    },\n    Radom: {\n        nazwaOkregu: \"Radom\",\n        nrOkregu: 17,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Wyborcy Lewicy powinni wesprzeć turystyką wyborczą Piotrk\\xf3w Trybunalski i częściowo okręg płocki. Jest to okręg, gdzie spodziewanych jest wielu wyborc\\xf3w z Warszawy. Dla wzmocnienia tego efektu rekomendowane jest wsparcie KO.\"\n    },\n    Siedlce: {\n        nazwaOkregu: \"Siedlce\",\n        nrOkregu: 18,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"To jest okręg, w kt\\xf3rym spodziewany jest największy udział wyborc\\xf3w, kt\\xf3rzy przyjadą tu z Warszawy, będą to gł\\xf3wnie wyborcy KO. Trzecia Droga zdobędzie prawdopodobnie dwa mandaty, Lewica ma zbyt niskie poparcie na pierwszy mandat. <br/>Rekomendacja wsparcia KO, dla wzmocnienia efektu turystyki wyborczej.<br/> Potrzebne jest wsparcie Trzeciej Drogi by nie doszło do odebrania mandatu nie PiS a Trzeciej Drodze przez KO\"\n    },\n    \"Warszawa I\": {\n        nazwaOkregu: \"Warszawa I\",\n        nrOkregu: 19,\n        rekomendacjePartii: [\n            \"LEWICA\",\n            \"TD\"\n        ],\n        txt: \"Warszawa I: Wyborcy KO powinni masowo zagłosować w okręgach Siedlce i Radom. Jest to strategia oparta na głosowaniu tam, gdzie jest większa siła głosu. Przy masowym wyjeździe z Warszawy do okręgu siedleckiego i radomskiego KO może stracić mandat, ale z dużym prawdopodobieństwem zostanie on przejęty przez Lewicę albo Trzecią Drogę. <br/>Część wyborc\\xf3w KO (mieszkańcy Bielan) powinni zagłosować w okręgu podwarszawskim dla zapewnienia piątego mandatu dla KO w tym okręgu. <br/>Wyborco Lewicy, Trzeciej Drogi, niezdecydowani lub gotowi działać strategicznie - Lewica w okręgu 19 (Warszawa) walczy o 4. mandat a Trzecia o 2. Więc jeśli chcesz to zagwarantować zagłosuj na jedną z tych partii lub wyjedź.\"\n    },\n    \"Warszawa II\": {\n        nazwaOkregu: \"Warszawa II\",\n        nrOkregu: 20,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"W tym okręgu po jednym mandacie zdobędą Lewica, Trzecia Droga i Konfederacja. Pozostałe 9 podzielą KO i PiS i może zadecydować r\\xf3żnica jednego głosu. Wyborcy KO powinni głosować w swoim domowym okręgu. Wyborcy Lewicy mają bezpieczne poparcie zapewniające pierwszy mandat. Wyborcy Lewicy mieszkający blisko okręgu płockiego, powinny wesprzeć Lewicę w okręgu płockim. Wyborcy Trzeciej Drogi, kt\\xf3rzy mogą głosować w innym okręgu, powinni wybrać okręg płocki lub siedlecki.\"\n    },\n    Opole: {\n        nazwaOkregu: \"Opole\",\n        nrOkregu: 21,\n        rekomendacjePartii: [],\n        txt: \"Założyliśmy, że w Opolu mandat weźmie (tak jak w kilku ostatnich wyborach) Mniejszość Niemiecka, a uwzględnienie jej w modelu zaciemniłoby\\xa0obraz całości. Policzenie, że w Opolu jest 11 mandat\\xf3w (a nie 12) było tutaj najłatwiejszym rozwiązaniem.\"\n    },\n    Krosno: {\n        nazwaOkregu: \"Krosno\",\n        nrOkregu: 22,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Największe szanse na kolejny mandat ma KO. Lewica bez realnych szans na mandat. Jej wyborcy powinni wesprzeć okręg rzeszowski.\"\n    },\n    Rzeszów: {\n        nazwaOkregu: \"Rzesz\\xf3w\",\n        nrOkregu: 23,\n        rekomendacjePartii: [\n            \"LEWICA\"\n        ],\n        txt: \"Lewica walczy o mandat przy wsparciu turystyki wyborczej z Krosna, Pozostałe partie ze stabilnym poparciem.\"\n    },\n    Białystok: {\n        nazwaOkregu: \"Białystok\",\n        nrOkregu: 24,\n        rekomendacjePartii: [\n            \"KO\",\n            \"LEWICA\"\n        ],\n        txt: \"Lewica walczy o ostatnie dwa mandaty z PiS i Konfederacją. Aby ochronić mandat należy wspierać Lewicę. Pr\\xf3ba przejęcia dodatkowego mandatu jest związana z głosem na KO, kt\\xf3rej najbliżej do kolejnego mandatu.\"\n    },\n    Gdańsk: {\n        nazwaOkregu: \"Gdańsk\",\n        nrOkregu: 25,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"KO i Konfederacja walczą o ostatni mandat w okręgu, dlatego należy wesprzeć KO.\"\n    },\n    Gdynia: {\n        nazwaOkregu: \"Gdynia\",\n        nrOkregu: 26,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Trzecia Droga i Lewica ze stabilnym poparciem na jeden mandat. Najwieksze szanse walki o kolejny mandat ma KO.\"\n    },\n    \"Bielsko-Biała\": {\n        nazwaOkregu: \"Bielsko-Biała\",\n        nrOkregu: 27,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"KO walczy Konfederacja i PiS o ostatni mandat w okręgu, dlatego należy wesprzeć KO.\"\n    },\n    Częstochowa: {\n        nazwaOkregu: \"Częstochowa\",\n        nrOkregu: 28,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"PiS i KO walczą o ostatni mandat, wobec tego należy tutaj wesprzeć KO.\"\n    },\n    Gliwice: {\n        nazwaOkregu: \"Gliwice\",\n        nrOkregu: 29,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"KO może być jedynym ugrupowaniem, kt\\xf3re może odebrać Konfederacji pierwszy mandat. Tw\\xf3j głos wspierający to upgrupowanie tą szanse zwieksza.\"\n    },\n    Rybnik: {\n        nazwaOkregu: \"Rybnik\",\n        nrOkregu: 30,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Trzy ugrupowania demokratyczne walczą z Konfederacją o ostatnie 3 mandaty. KO i Lewica mają najmniej pewną sytuację, warto wesprzeć swym głosem jedną z nich.\"\n    },\n    Katowice: {\n        nazwaOkregu: \"Katowice\",\n        nrOkregu: 31,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"KO walczy z PiS o ostatni mandat w okręgu, należy wesprzeć KO w tych wysiłkach.\"\n    },\n    Sosnowiec: {\n        nazwaOkregu: \"Sosnowiec\",\n        nrOkregu: 32,\n        rekomendacjePartii: [\n            \"TD\"\n        ],\n        txt: \"Trzecia Droga walczy z Konfederacja o ostatni mandat. Należy ją wesprzeć w tych wysiłkach.\"\n    },\n    Kielce: {\n        nazwaOkregu: \"Kielce\",\n        nrOkregu: 33,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"Kielce jako okręg o dużej sile głosu będzie zapewne celem turystyki wyborczej z innych okręg\\xf3w. Jest to miejsce, gdzie Giertych na liście KO konkuruje z Kaczyńskim na liście PiS. Warto wesprzeć KO, kt\\xf3re może liczyć na dodatkowych wyborc\\xf3w związanych z turystyką wyborczą. Trzecia Droga może potrzebować wsparcia by pewnie zdobyć 2 mandat.\"\n    },\n    Elbląg: {\n        nazwaOkregu: \"Elbląg\",\n        nrOkregu: 34,\n        rekomendacjePartii: [\n            \"KO\",\n            \"LEWICA\"\n        ],\n        txt: \"KO ze stabilnym poparciem na 3 mandaty. Elbląg jako okręg o największej sile głosu będzie zapewne celem turystyki wyborczej motywowanej siłą głosu. Tacy wyborcy powinni wesprzeć KO lub Lewicę.\"\n    },\n    Olsztyn: {\n        nazwaOkregu: \"Olsztyn\",\n        nrOkregu: 35,\n        rekomendacjePartii: [\n            \"KO\",\n            \"TD\"\n        ],\n        txt: \"Walka o ostatni mandat między Trzecią Drogą, KO i PiS. Tw\\xf3j głos na Trzecią Drogę lub KO zwiększa ich szanse na mandat.\"\n    },\n    Kalisz: {\n        nazwaOkregu: \"Kalisz\",\n        nrOkregu: 36,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Wyborcy Lewicy mają pewny jeden mandat, wyborcy Trzeciej Drogi moga wspierać turystyką wyborczą okręg 11. Najbliżej zdobycia mandatu jest KO, kt\\xf3re należy wspierać.\"\n    },\n    Konin: {\n        nazwaOkregu: \"Konin\",\n        nrOkregu: 37,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"Wyborcy Lewicy mają pewny jeden mandat, wyborcy Trzeciej Drogi moga wspierać turystyką wyborczą okręg 11. Najbliżej zdobycia mandatu jest KO, kt\\xf3re należy wspierać.\"\n    },\n    Piła: {\n        nazwaOkregu: \"Piła\",\n        nrOkregu: 38,\n        rekomendacjePartii: [\n            \"TD\"\n        ],\n        txt: \"Trzecia droga ma największe szanse na kolejny mandat, r\\xf3wnież przy wsparciu turystyką wyborczą z Poznania i Koszalina.\"\n    },\n    Poznań: {\n        nazwaOkregu: \"Poznań\",\n        nrOkregu: 39,\n        rekomendacjePartii: [\n            \"KO\",\n            \"LEWICA\"\n        ],\n        txt: \"KO i Lewica walczą o ostani mandat z Konfederacją, warto wesprzeć swym głosem jedną z nich.\"\n    },\n    Koszalin: {\n        nazwaOkregu: \"Koszalin\",\n        nrOkregu: 40,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"PIS z dużym prawdopodobieństwem zdobędzie ostatni mandat. Ponieważ żadna z mniejszych partii demokratycznych nie ma wystarczającej liczby głos\\xf3w by była szansa na drugi mandat należy poprzeć KO. Wyborcy Trzeciej Drogi mogą wspierać turystyką wyborczą walkę o dodatkowy mandat w Pile.\"\n    },\n    Szczecin: {\n        nazwaOkregu: \"Szczecin\",\n        nrOkregu: 41,\n        rekomendacjePartii: [\n            \"KO\"\n        ],\n        txt: \"PiS i Konfederacja mają największe szanse na ostatnie mandaty. Wspierając Trzecią Drogę lub Lewicę zwiększasz szanse na odebranie im tych mandat\\xf3w.\"\n    }\n};\nconst $efd47c46dd00e93d$export$fcd124d90160e604 = [\n    \"KO zdobyło +2 mandaty kosztem Lewicy i Konfederacji. 11k zaświadczeń, x2 do 2019. KO wyprzedziło Konfederację o 2k mandat\\xf3w. Turystyka mogła mieć tu wpływ.\",\n    \"Nie przydatna rekomendacja, bo nie dała Lewicy mandatu (zabrakło 5k). Trzecia Droga miała mandat i tak zapewniony z zapasem 9k głos\\xf3w. Na szczęście stracony mandat Lewicy był na rzecz KO.\",\n    \"We Wrocławiu ostatni mandat dostała KO ale 7k przed Lewicą. Trudno powiedziec kim było 14k os\\xf3b z zaświadczeniem, było to 1.6x stanu z 2019, zapewne Studenci i osoby spoza Wrocławia pracujące we Wrocławiu. \",\n    \"KO odebrała ostani mandat Konfederacji przewagą 3k głos\\xf3w. To nie była nasza rekomendacja. Kto dał te 3k głos\\xf3w? Może turyści, bo było 8.6k zaświadczeń i było to 2.5x to co w 2019.\",\n    \"Tu nasze przewidywania się nie sprawdziły - Lewica nie dostała -1 a PiS +1 mandatu, jednak żadne działania na poziomie kilku tysięcy by nic nie zmieniły. Ostatni mandat dostała Konfederacja z dużą przewagą nad wszystkimi 4 pozostałymi partiami.\",\n    \"W stosunku do przewidywań Trzecia odbiła 1 mandat Konfederacji. Jednak zrobiła to z bezpiecznym zapasem 30k głos\\xf3w, przy 6k dodatkowych głosach mogłaby zdobyć 3 mandat i zabrać go PIS, kt\\xf3ry dostał ostani Mandat.  Zaświadczeń było 9.4k i było to prawie x2 do 2019.\",\n    \"Tu wynik jest zgodny z przewidywaniami, choć zgodnie z rekomendacją Trzeciej (ostatni mandat) i Lewicy (zabrakło 4k) potrzeba by było dodatkowych głos\\xf3w aby odebrać ostatni mandat PiS.\",\n    \"Błędna rekomendacja, wbrew rekomendacji KO odbiło mandat Konfederacji. KO przegoniła PiS o 12 tyś głos\\xf3w. Było tutaj dużo turystyki - 10k zaświadczeń 3.3x tego co w 2019.\",\n    \"Tu żadna rekomendacja nie była potrzebna - ostatni mandat dostała KO z dużą przewagą nad pozostałymi 4 partiami. Liczyliśmy na +1 mandat dla Lewicy i -1 mandat dla KO. Wynik nie zmienił notowań demokrat\\xf3w. NIe przewidzieliśmy tak dużego wyniku Trzeciej.\",\n    \"Tu rekomendacja głosowania na Lewicę nie wystarczyła, zabrakło 5k głos\\xf3w by odebrać PiS ostatni mandat. W kolejce po ostatni głos zaraz za PiS była Konfederacja - zabrakło im 600 głos\\xf3w, Natomiast mandat KO był bezpieczny.\",\n    \"Trzecia dostała 1 mandat więcej niż oczekiwaliśmy kosztem Konfederacji. Przegoniła ona PIS o 3.5k a Konfederację o 4k. Os\\xf3b głosujących z zaświadczeniem było 7k i to było 3.1x tego co w 2019.\",\n    \"Nasza rekomendacja zakładała niższe poparcie TD. Do kolejnego mandatu brakowało im 8k głos\\xf3w natomiast KO tylko 4k, i bylo to 2.3 x stan z 2019. Konfederacji zabrakło 3k głos\\xf3w do odebrania mandatu ale PiS, a nie partiom demokratycznym.\",\n    \"Mimo rekomendacji Lewicy, zabrakło jej 9k do 2. mandatu. Na szczescie mandat ten wzieła TD, ale nie wymagał on wsparcia bo to był mandat przedostani.\",\n    \"Tu nasza rekomendacja była naiwna. Mieliśmy nadzieję, że wyborcy Lewicy z sąsiadujacych okręg\\xf3w mogą tu przyjechać i się zjednoczyć, ale tak się nie stało.\",\n    \"KO i Trzecia odebrały po jednym mandacie PiS i Konfederacji. Rekomendacja prawie dobra, bo KO nie dostała rekomendacji a nie wiele brakowało (2k głos\\xf3w) aby odebrać mandat Konfederacji. Mandat TD był wzięty z g\\xf3rką 6.5k głos\\xf3w, więc pewnie nie wymagało to głosowania strategicznego na TD.\",\n    \"KO zdobyło ostatni mandat przewagą 4k przed PiS i 5k przed Konfederacją i Lewicą. TD zdobyła +1 w stosunku do przewidywań. Można zakładać duży wpływ Turystyki bo było 7.5k głosujących z zaświadczeniem - x4 w stosunku do 2019.\",\n    \"Tu nasza rekomendacja nic nie dała KO - realnie to PiS i Konfederacja walczyły o ostatni mandat. Wygrała PiS przewagą 2.5k mandat\\xf3w.  \",\n    \"Tu mandaty rozdano zgodnie z przewidywaniami nie uwzgledniającymi turystyki. Czyli Turystyka nie miała tu znaczenia mimo że było to 10k głosujących - 4.1x wynik z 2019. Zar\\xf3wno KO jak i Trzeciej Drodze zabrakło po 12k do mandatu i odebrania go PiS. Rekomendacja trafna ale poparcie nie było wystarczające.\",\n    \"Tu rekomendacja była prawidłowa - za wsparciem Trzeciej Drogi i Lewicy. Lewica wzięła przewidywane 3 mandaty a Trzecia dostała o 1 więcej niż przewidywaliśmy. Liczba zaświadczeń to 63k czyli 1.6x liczby z 2023, ale połowa tego za granicą. KO straciło mandat przez turystykę bo zabrakło im 15k do 10 mandatu. ale zyskaliśmy dzięki temu mandaty w Płocku i Kielcach oraz było bardzo blisko dodatkowego mandatu w Obwarzanku (Okręg 20). Jednak szansa na stratę mandatu w okręgu 19 przez KO na rzecz partii populistycznych wynosiła tylko 25% i mieliśmy szczęście bo to się nie zdarzyło - KO oddało sw\\xf3j mandat TD a zyskała tam, gdzie pojechali turyści (Płock i Kielce).\",\n    \"Tu rekomendacje były dobre ale niewystarczające - gdyby KO zdobyło 311 głos\\xf3w więcej a Lewica o 20 więcej to KO zdobyło by jeszcze jeden mandat od PiS. Pewnie wystarczyło by 500 turyst\\xf3w więcej.  Zaświadczeń było 20k czyli 3.8x tego co w 2019.\",\n    \"Tu nie mieliśmy rekomendacji, baliśmy się zaszkodzić tracącej z wybor\\xf3w na wybory MN. Wygląda na to że już nie odzyskają swojego mandatu. W stosunku do przewidywań KO dostało +2 a TD -1 i MN-1.\",\n    \"Otrzymane mandaty zgodnie z prognozą, wsparcie KO nie zaszkodziło, ale też nie pomogło realnie KO - wzieła ona przedostatni mandat 1k głos\\xf3w przed PIS ale daleko przed Lewica i TD. 10k zaświadczeń i to było 1.4x tego co w 2019.\",\n    \"Bilans partii demokratycznych +1 w stosunku do przewidywań. Jednak wbrew rekomendacji Lewicy nie wystarczyło 6k głos\\xf3w do zabrania ostaniego mandatu PiS. Prawie 8k zaświadczeń to tylko 1.7 w stosunku do 2019.\",\n    \"W stosunku do przewidywań TD +1 a Lewica -1, ostatni mandat PIS przed Trzecią, może być duży wpływ turystyki bo 15k zaświadczeń, i x4 w stosunku do 2019. Prawdopodobnie to przyjezdne glosy na Hołownię. Jednak ten mandat był bezpieczny dla Trzeciej, bo żadne ugrupowanie nie było blisko za TD poza PiS ktore i tak dostało mandat.\",\n    \"KO odebrało Konfederacji ostatni mandat. Wyprzedziło ją o 4k. Było 13k zaświadczeń tylko 1.6x 2019. Prawdopodobnie to studenci i osoby przyjezdne.\",\n    \"Wynik zgodny z przewidywaniami, rzeczywiście KO dostało ostani mandat, ale daleko przed PiS (16k+). Choć może dzięki turystyce bo było 14k zaświdaczeń - x2 w stosunku do 2019.\",\n    \"Zła rekomendacja, KO nie walczyła o ostatni mandat - robiły to Lewica i TD. Lewicy zabrakło 300 głos\\xf3w by odebrać mandat Konfederacji.\",\n    \"KO odebrało mandat Lewicy w stosunku do przewidywań. Wyprzedziło lewicę o 600 głos\\xf3w. Nie było zagrożenia w relacji KO / PiS. Demokraci dostali zgodnie z szacunkami.\",\n    \"KO odebrał Konfederacji mandat w stosunku do przewidywań, rekomendacja prawidłowa bo KO dostała ostatni mandat. Wpływ turystyki prawdopodobnie był znikomy, bo tylko 4k zaświadczeń - x2 do 2019.\",\n    \"Rozklad zgodny z przewidywaniami, ale wskazana strategia powinna być tylko na Lewicę, bo zabrakło jej 4k aby przegonić Konfederacje w biegu o ostani mandat. Tu niemal nie było turystyki - tylko 3.5k, ale to i tak wzrost do 2019 x3.\",\n    \"Rozkład zgodny z przewidywaniami, choć rekomendacja na TD mogła dać 1 mandat więcej dla opozycji demokratycznej. TD zabrakło tylko 1k mandat\\xf3w by odebrać mandat Konfederacji. 7k zaświadczeń to 2.5x w stosunku do 2019.\",\n    \"Zgodnie z przewidywaniami Trzecia dostała ostatni mandat, więc rekomendacja prawidłowa, choć było on bezpieczny, bo Konfederacja daleko z tyłu. Rozkład mandat\\xf3w zgodny z przewidywaniami. 6k zaświadczeń to x4 w stosunku do 2019.\",\n    \"KO odebrało PiS mandat w stosunku do przewidywań, przegoniła PiS o ok 100 głos\\xf3w, czyli rekomendacja była prawidłowa. 12k zaświadczeń to 2.5x w stosunku do 2019.\",\n    \"PiS odebrał Lewicy mandat, wbrew przewidywanemu scenariuszowi. Rekomendowane wsparcie dla Lewicy było wymagane, ale nie wystarczyło, zabrakło jej 2k głos\\xf3w by odebrać mandat PiS. 5k zaświadczeń to x3 w stosunku do 2019, ale pewnie większość na KO, ktore z zapasem zdobyło 3 mandaty.\",\n    \"Rekomendacja prawidłowa, ale odzew nie wystarczający. Wyglada na to że Turystyka mogła pomoc, 8k zaświadczeń w stosunku to x2 w stosunku do 2019. KO wzięło przedostani mandat +3k przed PiS, kt\\xf3tre zabrało mandat TD - zabrakło jej zaledwie 300 głos\\xf3w do mandatu. Przewidziana liczba mandat\\xf3w dla demokrat\\xf3w.\",\n    \"KO wzięło ostatni mandat, przeganiając o 1000 głos\\xf3w Konfederację. Os\\xf3b z zaświadczeniem 5k, czyli prawie 3x tego co w 2019. Turystyka mogłą mieć więc wpływ.\",\n    \"KO rzeczywiście walczyło o mandat ale zostało wyminięte przez TD o 5000 głos\\xf3w (wynik lepszy niż przewidywany). 5k zaświadczeń, czyli 3.5x tego co w 2019. Konfederacja 1000 głos\\xf3w za KO. Rekomendacja bez znaczenia ale nie błędna. KO wzieło i tak przewidywaną liczbę mandat\\xf3wm ale dawaliśmy szanse na +1 na KO, podczas gdy realnie +1 wzieło TD a -1 Konfederacja.\",\n    \"KO wzięło ostatni mandat, Trzecia Droga przedostatni o 900 głos\\xf3w wcześniej. Dobra rekomendacja - rzeczywiście Trzecia Droga potrzebowała wsparcia. Wszystkich głos\\xf3w z zaświadczeniem było 5k, a więc ponad 3x więcej niż w 2019. Przewidywaliśmy na podstawie lepszych sondaży Lewicy +1 dla Lewicy i zagrożenie -1 dla KO.\",\n    \"Ostatni mandat wzięła Trzecia Droga, rekomendacja była zła. Przewidywaliśmy +1 dla KO i -1 dla Trzeciej.\",\n    \"Ostatni mandat zdobyła KO, 14k os\\xf3b zagłosowało z zaświadczeniem - jest to 48% kwoty mandatu i prawie x2 w stosunku do 2019. Jednak KO ten mandat odebrała Lewicy. Nie przewidzieliśmy tak niskiego poparcia dla Lewicy, a więc ryzyka straty mandatu.\",\n    \"Ostatni mandat zdobyła KO, 13k os\\xf3b z zaświadczeniem, odebrała ona ostatni mandat TD i Konfederacji, kt\\xf3rym zabrakło po 5k do ostatniego mandatu. Prawdopodobnie część os\\xf3b z zaświadczeniem to osoby mieszkające na stałe w Niemczech.\"\n];\nconst $efd47c46dd00e93d$export$53397944e62b6ac5 = [\n    {\n        zaswiadczenia2019: 5597,\n        zaswiadczenia2023: 11196\n    },\n    {\n        zaswiadczenia2019: 4854,\n        zaswiadczenia2023: 7157\n    },\n    {\n        zaswiadczenia2019: 8921,\n        zaswiadczenia2023: 14233\n    },\n    {\n        zaswiadczenia2019: 3538,\n        zaswiadczenia2023: 8692\n    },\n    {\n        zaswiadczenia2019: 5302,\n        zaswiadczenia2023: 11762\n    },\n    {\n        zaswiadczenia2019: 4939,\n        zaswiadczenia2023: 9488\n    },\n    {\n        zaswiadczenia2019: 3251,\n        zaswiadczenia2023: 7632\n    },\n    {\n        zaswiadczenia2019: 3003,\n        zaswiadczenia2023: 10170\n    },\n    {\n        zaswiadczenia2019: 2941,\n        zaswiadczenia2023: 7875\n    },\n    {\n        zaswiadczenia2019: 1725,\n        zaswiadczenia2023: 5312\n    },\n    {\n        zaswiadczenia2019: 2206,\n        zaswiadczenia2023: 6920\n    },\n    {\n        zaswiadczenia2019: 1780,\n        zaswiadczenia2023: 3971\n    },\n    {\n        zaswiadczenia2019: 9912,\n        zaswiadczenia2023: 14219\n    },\n    {\n        zaswiadczenia2019: 10724,\n        zaswiadczenia2023: 13737\n    },\n    {\n        zaswiadczenia2019: 1909,\n        zaswiadczenia2023: 4824\n    },\n    {\n        zaswiadczenia2019: 1885,\n        zaswiadczenia2023: 7596\n    },\n    {\n        zaswiadczenia2019: 1728,\n        zaswiadczenia2023: 7378\n    },\n    {\n        zaswiadczenia2019: 2582,\n        zaswiadczenia2023: 10706\n    },\n    {\n        zaswiadczenia2019: 38061,\n        zaswiadczenia2023: 63438\n    },\n    {\n        zaswiadczenia2019: 5330,\n        zaswiadczenia2023: 19912\n    },\n    {\n        zaswiadczenia2019: 2414,\n        zaswiadczenia2023: 6444\n    },\n    {\n        zaswiadczenia2019: 6939,\n        zaswiadczenia2023: 9928\n    },\n    {\n        zaswiadczenia2019: 4375,\n        zaswiadczenia2023: 7669\n    },\n    {\n        zaswiadczenia2019: 3680,\n        zaswiadczenia2023: 15150\n    },\n    {\n        zaswiadczenia2019: 8501,\n        zaswiadczenia2023: 13692\n    },\n    {\n        zaswiadczenia2019: 7362,\n        zaswiadczenia2023: 14709\n    },\n    {\n        zaswiadczenia2019: 4575,\n        zaswiadczenia2023: 8734\n    },\n    {\n        zaswiadczenia2019: 1864,\n        zaswiadczenia2023: 3902\n    },\n    {\n        zaswiadczenia2019: 1759,\n        zaswiadczenia2023: 4218\n    },\n    {\n        zaswiadczenia2019: 1107,\n        zaswiadczenia2023: 3661\n    },\n    {\n        zaswiadczenia2019: 2886,\n        zaswiadczenia2023: 7392\n    },\n    {\n        zaswiadczenia2019: 1516,\n        zaswiadczenia2023: 6292\n    },\n    {\n        zaswiadczenia2019: 4587,\n        zaswiadczenia2023: 12070\n    },\n    {\n        zaswiadczenia2019: 1772,\n        zaswiadczenia2023: 5273\n    },\n    {\n        zaswiadczenia2019: 3804,\n        zaswiadczenia2023: 7975\n    },\n    {\n        zaswiadczenia2019: 1897,\n        zaswiadczenia2023: 5234\n    },\n    {\n        zaswiadczenia2019: 1504,\n        zaswiadczenia2023: 5201\n    },\n    {\n        zaswiadczenia2019: 1825,\n        zaswiadczenia2023: 5834\n    },\n    {\n        zaswiadczenia2019: 6156,\n        zaswiadczenia2023: 10015\n    },\n    {\n        zaswiadczenia2019: 7719,\n        zaswiadczenia2023: 14999\n    },\n    {\n        zaswiadczenia2019: 6380,\n        zaswiadczenia2023: 13499\n    }\n];\n\n});\n\n\n//# sourceMappingURL=index.04aa80cf.js.map\n","import { PodzialMandatowWOkregu } from \"./ordynacja\";\nimport { Wynik, Okreg, Sondaze } from \"./typy\";\n\nexport const PARTIE = [\"LEWICA\", \"KO\", \"TD\", \"KONF\", \"PIS\"];\n\nexport const KOLOR_PARTII = {\n  PIS: \"rgb(38, 55, 120)\",\n  LEWICA: \"rgb(171,20,91)\",\n  KONF: \"rgb(0, 0, 0)\",\n  TD: \"rgb(220, 195, 16)\",\n  KO: \"rgb(0,68,149)\",\n  BIAŁY: \"rgb(255,255,255)\",\n};\n\nexport const sondaze: Sondaze = {\n  PKW_20231017: {\n    PIS: 35.38,\n    KO: 30.7,\n    TD: 14.40,\n    LEWICA: 8.61,\n    KONF: 7.16,\n  },\n  exitpoll_20231015: {\n    PIS: 36.8,\n    KO: 31.6,\n    TD: 13.0,\n    LEWICA: 8.6,\n    KONF: 6.2,\n  },\n  Opinia24_20231013: {\n    PIS: 32.0,\n    KO: 27.5,\n    TD: 11.2,\n    LEWICA: 7.9,\n    KONF: 8.8,\n  },\n  IBSP_20231013: {\n    PIS: 37.36,\n    KO: 27.77,\n    TD: 13.02,\n    LEWICA: 10.33,\n    KONF: 8.29,\n  },\n  IBRiS_20231012: {\n    PIS: 33.9,\n    KO: 27.0,\n    TD: 11.0,\n    LEWICA: 9.7,\n    KONF: 8.2,\n  },\n  Kantar_20231012: {\n    PIS: 30.0,\n    KO: 26.0,\n    TD: 12.0,\n    LEWICA: 11.0,\n    KONF: 8.0,\n  },\n  IBRiS_20231011: {\n    PIS: 34.9,\n    KO: 28.1,\n    TD: 10.3,\n    LEWICA: 10.0,\n    KONF: 8.3,\n  },\n  IBRiS_20231010: {\n    PIS: 33.5,\n    KO: 28.0,\n    TD: 10.9,\n    LEWICA: 10.1,\n    KONF: 9.2,\n  },\n  // ewybory_20231010: {\n  //   PIS: 33.45,\n  //   KO: 30.85,\n  //   TD: 11.03,\n  //   LEWICA: 12.88,\n  //   KONF: 8.5,\n  // },\n  // IPSOS_20231010: {\n  //   PIS: 36.0,\n  //   KO: 28.0,\n  //   TD: 8.0,\n  //   LEWICA: 8.0,\n  //   KONF: 9.0,\n  // },\n  // Pollster_CAWI_20231007: {\n  //   PIS: 34.3,\n  //   KO: 30.0,\n  //   TD: 11.8,\n  //   LEWICA: 8.2,\n  //   KONF: 8.2,\n  // },\n  // IBRiS_20231007: {\n  //   PIS: 34.6,\n  //   KO: 27.9,\n  //   TD: 7.6,\n  //   LEWICA: 11.4,\n  //   KONF: 7.7,\n  // },\n  // Estymator_20231006: {\n  //   PIS: 36.9,\n  //   KO: 30.5,\n  //   TD: 9.4,\n  //   LEWICA: 9.3,\n  //   KONF: 9.3,\n  // },\n  // Opinia24_20231004_plus_niezdecydowani: {\n  //   PIS: 32.9,\n  //   KO: 31.1,\n  //   TD: 13.2,\n  //   LEWICA: 11.3,\n  //   KONF: 6.5,\n  // },\n  // Opinia24_20231004: {\n  //   PIS: 30.0,\n  //   KO: 25.0,\n  //   TD: 6.0,\n  //   LEWICA: 9.0,\n  //   KONF: 5.0,\n  // },\n  // IBRiS_20231004: {\n  //   PIS: 34.0,\n  //   KO: 28.9,\n  //   TD: 10.6,\n  //   LEWICA: 10.0,\n  //   KONF: 9.7,\n  // },\n  // Kantar_20231004: {\n  //   PIS: 34.0,\n  //   KO: 30.0,\n  //   TD: 9.0,\n  //   LEWICA: 10.0,\n  //   KONF: 8.0,\n  // },\n  // UnitedSurveys_20231002: {\n  //   PIS: 32.0,\n  //   KO: 28.2,\n  //   TD: 11.0,\n  //   LEWICA: 10.2,\n  //   KONF: 10.0,\n  // },\n  // UnitedSurveys_20231001: {\n  //   PIS: 32.5,\n  //   KO: 26.4,\n  //   TD: 12.1,\n  //   LEWICA: 8.1,\n  //   KONF: 9.0,\n  // },\n  // Estymator_20230930: {\n  //   PIS: 37.4,\n  //   KO: 30.6,\n  //   TD: 9.6,\n  //   LEWICA: 8.7,\n  //   KONF: 9.5,\n  // },\n  // IBRiS_20230927: {\n  //   PIS: 35.1,\n  //   KO: 27.0,\n  //   TD: 10.4,\n  //   LEWICA: 10.1,\n  //   KONF: 9.5,\n  // },\n  // IPSOS_20230925: {\n  //   PIS: 36.0,\n  //   KO: 29.0,\n  //   TD: 8.0,\n  //   LEWICA: 10,\n  //   KONF: 7.0,\n  // },\n  // UnitedSurveys_20230924: {\n  //   PIS: 33.8,\n  //   KO: 28.1,\n  //   TD: 9.0,\n  //   LEWICA: 8.7,\n  //   KONF: 8.8,\n  // },\n  // Estymator_20230923: {\n  //   PIS: 37.3,\n  //   KO: 29.8,\n  //   TD: 9.9,\n  //   LEWICA: 8.5,\n  //   KONF: 10.6,\n  // },\n  // Pollster_20230922: {\n  //   PIS: 36.8,\n  //   KO: 30.4,\n  //   TD: 9.8,\n  //   LEWICA: 9.7,\n  //   KONF: 8.7,\n  // },\n  // IBRiS_20230920: {\n  //   PIS: 35.1,\n  //   KO: 26.1,\n  //   TD: 9.2,\n  //   LEWICA: 9.1,\n  //   KONF: 9.9,\n  // },\n  // UnitedSurveys_20230919: {\n  //   PIS: 31.6,\n  //   KO: 27.0,\n  //   TD: 10.2,\n  //   LEWICA: 9.9,\n  //   KONF: 9.3,\n  // },\n  // ResearchPartner_20230918: {\n  //   PIS: 35.4,\n  //   KO: 26.1,\n  //   TD: 10.1,\n  //   LEWICA: 8.0,\n  //   KONF: 9.5,\n  // },\n  // UnitedSurveys_20230917: {\n  //   PIS: 32.8,\n  //   KO: 26.3,\n  //   TD: 10.6,\n  //   LEWICA: 10.2,\n  //   KONF: 9.5,\n  // },\n  // IBRiS_20230917: {\n  //   PIS: 32.6,\n  //   KO: 26.6,\n  //   TD: 10.6,\n  //   LEWICA: 9.9,\n  //   KONF: 9.5,\n  // },\n};\n\nexport const sondazeDoSredniej = {\n  // PKW_20231017: sondaze.PKW_20231017,\n  // exitpoll_20231015: sondaze.exitpoll_20231015,\n  // Opinia24_20231013: sondaze.Opinia24_20231013,\n  // IBSP_20231013: sondaze.IBSP_20231013,\n  // IBRiS_20231012: sondaze.IBRiS_20231012,\n  Kantar_20231012: sondaze.Kantar_20231012,\n  IBRiS_20231011: sondaze.IBRiS_20231011,\n  IBRiS_20231010: sondaze.IBRiS_20231010,\n  // ewybory_20231010: sondaze.ewybory_20231010,\n  // IPSOS_20231010: sondaze.IPSOS_20231010,\n  // IBRiS_20231007: sondaze.IBRiS_20231007,\n  // Estymator_20231006: sondaze.Estymator_20231006,\n  // Opinia24_20231004: sondaze.Opinia24_20231004,\n  // IBRiS_20231004: sondaze.IBRiS_20231004,\n  // Kantar_20231004: sondaze.Kantar_20231004,\n};\n\n// Do wyświetlenia\nexport const srednia: Wynik = {};\n// Do obliczeń: znormalizowane do 100%\nexport const sredniaSondazy: Wynik = {};\nObject.entries(sondazeDoSredniej).forEach(([sondaz, wynik]) => {\n  Object.entries(wynik).forEach(([partia, procent]) =>\n    sredniaSondazy[partia]\n      ? (sredniaSondazy[partia] += procent)\n      : (sredniaSondazy[partia] = procent)\n  );\n});\n\n\nconst sumaProcentow =\n  Object.values(sredniaSondazy).reduce((acc, curr) => (acc += curr), 0) /\n  Object.entries(sondazeDoSredniej).length;\n\n\n// TODO @tomek warto zweryfikować, zwłaszcza zaokrąglenia\n\nObject.entries(sredniaSondazy).forEach(([partia, procent]) => {\n  srednia[partia] = (sredniaSondazy[partia] / Object.entries(sondazeDoSredniej).length);\n  sredniaSondazy[partia] =\n    (sredniaSondazy[partia] / Object.entries(sondazeDoSredniej).length) *\n    (100 / sumaProcentow);\n});\n\n// TODO: @tomek potrzeba by zweryfikować czy dane są poprawne\n\n// Źródło: https://sejmsenat2019.pkw.gov.pl/sejmsenat2019/pl/wyniki/sejm/pl\nexport const wybory2019: Wynik = {\n  PIS: 43.59,\n  KO: 27.4,\n  LEWICA: 12.56,\n  PSL: 8.55,\n  KONF: 6.81,\n};\n\n// Źródło: https://sejmsenat2019.pkw.gov.pl/sejmsenat2019/data/csv/wyniki_gl_na_listy_po_okregach_sejm_csv.zip\nexport const okregi: Okreg[] = [\n  {\n    nr: 1,\n    miasto: \"Legnica\",\n    mandaty: 12,\n    mandatyPKW: 11,\n    glosy2019: 432436,\n    wynik2019: {\n      KO: 25.02,\n      KONF: 5.85,\n      PSL: 7.17,\n      PIS: 42.4,\n      LEWICA: 16.43,\n    },\n  },\n  {\n    nr: 2,\n    miasto: \"Wałbrzych\",\n    mandaty: 8,\n    mandatyPKW: 7,\n    glosy2019: 283002,\n    wynik2019: {\n      KO: 32.09,\n      KONF: 5.42,\n      PSL: 7.25,\n      PIS: 40.54,\n      LEWICA: 12.35,\n    },\n  },\n  {\n    nr: 3,\n    miasto: \"Wrocław\",\n    mandaty: 14,\n    mandatyPKW: 15,\n    glosy2019: 654455,\n    wynik2019: {\n      KO: 32.8,\n      KONF: 7.45,\n      PSL: 6.46,\n      PIS: 34.67,\n      LEWICA: 15.41,\n    },\n  },\n  {\n    nr: 4,\n    miasto: \"Bydgoszcz\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 459982,\n    wynik2019: {\n      KO: 31.05,\n      KONF: 7.05,\n      PSL: 9.02,\n      PIS: 36.43,\n      LEWICA: 15.17,\n    },\n  },\n  {\n    nr: 5,\n    miasto: \"Toruń\",\n    mandaty: 13,\n    mandatyPKW: 12,\n    glosy2019: 452330,\n    wynik2019: {\n      KO: 26.42,\n      KONF: 6.33,\n      PSL: 10.88,\n      PIS: 40.38,\n      LEWICA: 14.83,\n    },\n  },\n  {\n    nr: 6,\n    miasto: \"Lublin\",\n    mandaty: 15,\n    mandatyPKW: 14,\n    glosy2019: 565597,\n    wynik2019: {\n      KO: 19.3,\n      KONF: 7.07,\n      PSL: 9.1,\n      PIS: 55.39,\n      LEWICA: 7.81,\n    },\n  },\n  {\n    nr: 7,\n    miasto: \"Chełm\",\n    mandaty: 12,\n    mandatyPKW: 11,\n    glosy2019: 401318,\n    wynik2019: {\n      KO: 14.8,\n      KONF: 5.84,\n      PSL: 11.86,\n      PIS: 59.5,\n      LEWICA: 6.83,\n    },\n  },\n  {\n    nr: 8,\n    miasto: \"Zielona Góra\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 437917,\n    wynik2019: {\n      KO: 31.27,\n      KONF: 7.19,\n      PSL: 11.63,\n      PIS: 34.3,\n      LEWICA: 15.61,\n    },\n  },\n  {\n    nr: 9,\n    miasto: \"Łódź\",\n    mandaty: 10,\n    mandatyPKW: 9,\n    glosy2019: 415540,\n    wynik2019: {\n      KO: 35.82,\n      KONF: 6.65,\n      PSL: 4.53,\n      PIS: 32.9,\n      LEWICA: 20.1,\n    },\n  },\n  {\n    nr: 10,\n    miasto: \"Piotrków Trybunalski\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 346326,\n    wynik2019: {\n      KO: 15.64,\n      KONF: 6.76,\n      PSL: 10.44,\n      PIS: 56.21,\n      LEWICA: 10.95,\n    },\n  },\n  {\n    nr: 11,\n    miasto: \"Sieradz\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 460239,\n    wynik2019: {\n      KO: 20.48,\n      KONF: 5.88,\n      PSL: 10.29,\n      PIS: 49.81,\n      LEWICA: 11.98,\n    },\n  },\n  {\n    nr: 12,\n    miasto: \"Chrzanów\",\n    mandaty: 8,\n    mandatyPKW: 8,\n    glosy2019: 316214,\n    wynik2019: {\n      KO: 23.04,\n      KONF: 7.06,\n      PSL: 7.9,\n      PIS: 53.48,\n      LEWICA: 8.51,\n    },\n  },\n  {\n    nr: 13,\n    miasto: \"Kraków\",\n    mandaty: 14,\n    mandatyPKW: 15,\n    glosy2019: 649287,\n    wynik2019: {\n      KO: 30.48,\n      KONF: 7.99,\n      PSL: 7.27,\n      PIS: 39.56,\n      LEWICA: 13.01,\n    },\n  },\n  {\n    nr: 14,\n    miasto: \"Nowy Sącz\",\n    mandaty: 10,\n    mandatyPKW: 10,\n    glosy2019: 370199,\n    wynik2019: {\n      KO: 13.83,\n      KONF: 6.95,\n      PSL: 7.35,\n      PIS: 65.8,\n      LEWICA: 6.07,\n    },\n  },\n  {\n    nr: 15,\n    miasto: \"Tarnów\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 347088,\n    wynik2019: {\n      KO: 14.0,\n      KONF: 7.11,\n      PSL: 13.35,\n      PIS: 59.59,\n      LEWICA: 5.94,\n    },\n  },\n  {\n    nr: 16,\n    miasto: \"Płock\",\n    mandaty: 10,\n    mandatyPKW: 10,\n    glosy2019: 370561,\n    wynik2019: {\n      KO: 16.85,\n      KONF: 5.24,\n      PSL: 15.17,\n      PIS: 52.45,\n      LEWICA: 8.76,\n    },\n  },\n  {\n    nr: 17,\n    miasto: \"Radom\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 335009,\n    wynik2019: {\n      KO: 17.15,\n      KONF: 5.89,\n      PSL: 10.2,\n      PIS: 57.82,\n      LEWICA: 7.43,\n    },\n  },\n  {\n    nr: 18,\n    miasto: \"Siedlce\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 452906,\n    wynik2019: {\n      KO: 13.94,\n      KONF: 6.49,\n      PSL: 11.94,\n      PIS: 59.76,\n      LEWICA: 6.45,\n    },\n  },\n  {\n    nr: 19,\n    miasto: \"Warszawa I\",\n    mandaty: 20,\n    mandatyPKW: 21,\n    glosy2019: 1381917,\n    wynik2019: {\n      KO: 42.05,\n      KONF: 7.51,\n      PSL: 4.75,\n      PIS: 27.49,\n      LEWICA: 18.19,\n    },\n  },\n  {\n    nr: 20,\n    miasto: \"Warszawa II\",\n    mandaty: 12,\n    mandatyPKW: 14,\n    glosy2019: 598727,\n    wynik2019: {\n      KO: 28.61,\n      KONF: 6.63,\n      PSL: 8.6,\n      PIS: 40.89,\n      LEWICA: 13.09,\n    },\n  },\n  {\n    nr: 21,\n    miasto: \"Opole\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 406439,\n    wynik2019: {\n      KO: 26.71,\n      KONF: 5.7,\n      PSL: 10.31,\n      PIS: 37.64,\n      LEWICA: 11.74,\n    },\n  },\n  {\n    nr: 22,\n    miasto: \"Krosno\",\n    mandaty: 11,\n    mandatyPKW: 11,\n    glosy2019: 390581,\n    wynik2019: {\n      KO: 15.94,\n      KONF: 6.81,\n      PSL: 7.85,\n      PIS: 63.36,\n      LEWICA: 6.04,\n    },\n  },\n  {\n    nr: 23,\n    miasto: \"Rzeszów\",\n    mandaty: 15,\n    mandatyPKW: 16,\n    glosy2019: 588786,\n    wynik2019: {\n      KO: 14.39,\n      KONF: 8.25,\n      PSL: 7.79,\n      PIS: 62.38,\n      LEWICA: 6.59,\n    },\n  },\n  {\n    nr: 24,\n    miasto: \"Białystok\",\n    mandaty: 14,\n    mandatyPKW: 14,\n    glosy2019: 520578,\n    wynik2019: {\n      KO: 21.04,\n      KONF: 6.96,\n      PSL: 9.33,\n      PIS: 52.04,\n      LEWICA: 9.09,\n    },\n  },\n  {\n    nr: 25,\n    miasto: \"Gdańsk\",\n    mandaty: 12,\n    mandatyPKW: 13,\n    glosy2019: 528829,\n    wynik2019: {\n      KO: 41.31,\n      KONF: 7.21,\n      PSL: 5.9,\n      PIS: 32.1,\n      LEWICA: 13.47,\n    },\n  },\n  {\n    nr: 26,\n    miasto: \"Gdynia\",\n    mandaty: 14,\n    mandatyPKW: 15,\n    glosy2019: 580722,\n    wynik2019: {\n      KO: 35.85,\n      KONF: 7.3,\n      PSL: 7.94,\n      PIS: 36.43,\n      LEWICA: 12.47,\n    },\n  },\n  {\n    nr: 27,\n    miasto: \"Bielsko-Biała\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 389256,\n    wynik2019: {\n      KO: 27.2,\n      KONF: 7.42,\n      PSL: 7.13,\n      PIS: 46.76,\n      LEWICA: 11.48,\n    },\n  },\n  {\n    nr: 28,\n    miasto: \"Częstochowa\",\n    mandaty: 7,\n    mandatyPKW: 7,\n    glosy2019: 284517,\n    wynik2019: {\n      KO: 22.63,\n      KONF: 6.07,\n      PSL: 8.68,\n      PIS: 44.28,\n      LEWICA: 15.59,\n    },\n  },\n  {\n    nr: 29,\n    miasto: \"Gliwice\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 340647,\n    wynik2019: {\n      KO: 32.61,\n      KONF: 7.67,\n      PSL: 5.99,\n      PIS: 37.75,\n      LEWICA: 13.38,\n    },\n  },\n  {\n    nr: 30,\n    miasto: \"Rybnik\",\n    mandaty: 9,\n    mandatyPKW: 9,\n    glosy2019: 333836,\n    wynik2019: {\n      KO: 27.71,\n      KONF: 7.17,\n      PSL: 5.64,\n      PIS: 48.28,\n      LEWICA: 9.68,\n    },\n  },\n  {\n    nr: 31,\n    miasto: \"Katowice\",\n    mandaty: 12,\n    mandatyPKW: 11,\n    glosy2019: 469633,\n    wynik2019: {\n      KO: 37.2,\n      KONF: 7.33,\n      PSL: 4.37,\n      PIS: 39.19,\n      LEWICA: 11.92,\n    },\n  },\n  {\n    nr: 32,\n    miasto: \"Sosnowiec\",\n    mandaty: 9,\n    mandatyPKW: 8,\n    glosy2019: 335431,\n    wynik2019: {\n      KO: 29.66,\n      KONF: 6.45,\n      PSL: 4.85,\n      PIS: 37.13,\n      LEWICA: 21.9,\n    },\n  },\n  {\n    nr: 33,\n    miasto: \"Kielce\",\n    mandaty: 16,\n    mandatyPKW: 15,\n    glosy2019: 569891,\n    wynik2019: {\n      KO: 16.65,\n      KONF: 5.95,\n      PSL: 9.88,\n      PIS: 55.18,\n      LEWICA: 9.95,\n    },\n  },\n  {\n    nr: 34,\n    miasto: \"Elbląg\",\n    mandaty: 8,\n    mandatyPKW: 7,\n    glosy2019: 250819,\n    wynik2019: {\n      KO: 28.43,\n      KONF: 5.66,\n      PSL: 10.89,\n      PIS: 40.86,\n      LEWICA: 11.64,\n    },\n  },\n  {\n    nr: 35,\n    miasto: \"Olsztyn\",\n    mandaty: 10,\n    mandatyPKW: 10,\n    glosy2019: 331684,\n    wynik2019: {\n      KO: 26.46,\n      KONF: 6.97,\n      PSL: 13.19,\n      PIS: 38.82,\n      LEWICA: 13.84,\n    },\n  },\n  {\n    nr: 36,\n    miasto: \"Kalisz\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 459152,\n    wynik2019: {\n      KO: 24.72,\n      KONF: 6.57,\n      PSL: 12.8,\n      PIS: 42.48,\n      LEWICA: 13.43,\n    },\n  },\n  {\n    nr: 37,\n    miasto: \"Konin\",\n    mandaty: 9,\n    mandatyPKW: 10,\n    glosy2019: 353041,\n    wynik2019: {\n      KO: 20.48,\n      KONF: 6.74,\n      PSL: 9.81,\n      PIS: 47.29,\n      LEWICA: 15.04,\n    },\n  },\n  {\n    nr: 38,\n    miasto: \"Piła\",\n    mandaty: 9,\n    mandatyPKW: 10,\n    glosy2019: 349051,\n    wynik2019: {\n      KO: 30.6,\n      KONF: 6.62,\n      PSL: 13.86,\n      PIS: 35.64,\n      LEWICA: 13.28,\n    },\n  },\n  {\n    nr: 39,\n    miasto: \"Poznań\",\n    mandaty: 10,\n    mandatyPKW: 11,\n    glosy2019: 514527,\n    wynik2019: {\n      KO: 45.38,\n      KONF: 6.61,\n      PSL: 6.2,\n      PIS: 25.33,\n      LEWICA: 16.49,\n    },\n  },\n  {\n    nr: 40,\n    miasto: \"Koszalin\",\n    mandaty: 8,\n    mandatyPKW: 7,\n    glosy2019: 271711,\n    wynik2019: {\n      KO: 32.31,\n      KONF: 5.98,\n      PSL: 9.43,\n      PIS: 36.83,\n      LEWICA: 15.44,\n    },\n  },\n  {\n    nr: 41,\n    miasto: \"Szczecin\",\n    mandaty: 12,\n    mandatyPKW: 12,\n    glosy2019: 470529,\n    wynik2019: {\n      KO: 35.71,\n      KONF: 6.53,\n      PSL: 7.4,\n      PIS: 35.11,\n      LEWICA: 15.25,\n    },\n  },\n];\n\n// [KO,KONF,PSL,PIS,SLD],\nexport const glosy2019 = [\n[108191,25319,31006,183364,71061],\n[90812,15346,20528,114728,34957],\n[214629,48775,42269,226915,100843],\n[142844,32406,41497,167550,69763],\n[119526,28625,49225,182648,67076],\n[109185,40012,51474,313284,44152],\n[59401,23439,47604,238802,27404],\n[136955,31490,50943,150188,68341],\n[148830,27627,18828,136731,83524],\n[54160,23427,36151,194658,37930],\n[94268,27054,47373,229245,55116],\n[72869,22334,24996,169106,26909],\n[197930,51855,47219,256847,84457],\n[51183,25747,27203,243583,22483],\n[48597,24695,46333,206845,20618],\n[62429,19405,56227,194371,32448],\n[57449,19724,34185,193709,24884],\n[63124,29390,54085,270641,29235],\n[581077,103843,65683,379880,251434],\n[171286,39675,51484,244823,78348],\n[108570,23176,41901,152999,47699],\n[62246,26615,30655,247488,23577],\n[84703,48600,45868,367268,38817],\n[109527,36207,48566,270888,47342],\n[218484,38153,31203,169753,71236],\n[208208,42364,46132,211582,72436],\n[105876,28900,27752,182027,44701],\n[64374,17278,24704,125990,44354],\n[111078,26114,20408,128579,45583],\n[92493,23939,18816,161160,32300],\n[174683,34416,20512,184030,55992],\n[99499,21650,16263,124553,73466],\n[94880,33895,56289,314455,56699],\n[71320,14187,27319,102478,29196],\n[87780,23134,43758,128760,45912],\n[113489,30177,58759,195053,61674],\n[72295,23810,34620,166965,53090],\n[106810,23123,48371,124392,46355],\n[233474,34024,31875,130319,84835],\n[87799,16259,25632,100078,41943],\n[168022,30744,34807,165200,71756]]\n","import { KOLOR_PARTII, glosy2019, okregi, sondazeDoSredniej, sredniaSondazy, wybory2019 } from \"./dane\";\nimport {\n  Histogram,\n  ILE_SYMULACJI,\n  Okreg,\n  PoparciePartii,\n  Sondaze,\n  Wynik,\n  WynikDemo,\n  WynikPolDemo,\n} from \"./typy\";\n\nimport random from \"random\";\nimport { sortObjectByValues, sortedStringify } from \"./util\";\nimport { ROZKLAD } from \"./rozklad_w_okregach\";\nimport Color from \"color\";\n\n// Do jakich wartości +- od środka uwzględniać wartości, żeby wykres nie był zbyt szeroki.\nconst ZAKRES_DOL = 2.5\nconst ZAKRES_GORA = 3;\n\nexport function NaPolDemo(wynik: Wynik): WynikPolDemo {\n  return {\n    KO: wynik.KO,\n    LEWICA: (wynik.LEWICA || 0),\n    TD: (wynik.TD || 0),\n    NIEDEMO: wynik.PIS + (wynik.KONF || 0),\n  };\n}\n\nexport function NaDemo(wynik: Wynik): WynikDemo {\n  return {\n    DEMO: wynik.KO + (wynik.LEWICA || 0) + (wynik.TD || 0),\n    NIEDEMO: wynik.PIS + (wynik.KONF || 0),\n  };\n}\n\nlet glosyTD = 0;\nlet glosyMnoznikTD = 0;\n\n// export function PoparcieWOkreguOLD(wynik: Wynik, okreg: Okreg): Wynik {\n//   const wynikWOkregu: Wynik = {};\n//   let sumaProcentowWOkregu = 0;\n//   for (const [partia, procent] of Object.entries(wynik)) {\n//     let mnoznik = 1;\n//     if (partia === \"TD\") {\n//       mnoznik =\n//         (okreg.wynik2019.PSL! / wybory2019.PSL! +\n//           okreg.wynik2019.KO! / wybory2019.KO!) /\n//         2;\n//       wynikWOkregu.TD = wynik.TD! * mnoznik;\n//       glosyTD += (wynik.TD! * okreg.glosy2019) / 100;\n//       glosyMnoznikTD += (wynik.TD! * mnoznik * okreg.glosy2019) / 100;\n//     } else {\n//       mnoznik =\n//         wynik[partia as keyof Wynik]! / wybory2019[partia as keyof Wynik]!;\n//       wynikWOkregu[partia as keyof Wynik] =\n//         (okreg.wynik2019[partia as keyof Wynik] ||\n//           wynik[partia as keyof Wynik]!) * mnoznik;\n//     }\n//     sumaProcentowWOkregu += wynikWOkregu[partia as keyof Wynik];\n//   }\n//   return wynikWOkregu;\n// }\n\nexport function PoparcieWOkregu(wynik: Wynik, okreg: Okreg): { wynikWOkregu: Wynik, odchylenieWOkregu: Wynik} {\n  const wynikWOkregu: Wynik = {};\n  const odchylenieWOkregu: Wynik = {};\n  for (const [partia, procent] of Object.entries(wynik)) {\n    wynikWOkregu[partia] = procent * ROZKLAD[partia][okreg.nr - 1];\n    odchylenieWOkregu[partia] = odchylenie(partia, procent, okreg.nr);\n  }\n  return { wynikWOkregu, odchylenieWOkregu };\n}\n\n// TODO @tomek można by dodać prosty test, że suma mandatów = 460?\nexport function PodzialMandatowKraj(wynik: Wynik) {\n  glosyTD = 0;\n  glosyMnoznikTD = 0;\n  const mandatyWKraju = {\n    PIS: 0,\n    KO: 0,\n    LEWICA: 0,\n    TD: 0,\n    KONF: 0,\n  };\n  for (const okreg of okregi) {\n    const wynikWOkregu = PoparcieWOkregu(wynik, okreg).wynikWOkregu;\n    const mandatyWOkregu = PodzialMandatowWOkregu(wynikWOkregu, okreg);\n    for (const [partia, mandaty] of Object.entries(mandatyWOkregu)) {\n      // TODO: @tomek czy tu może wystąpić partia inna niż {PIS, KO, LEWICA, TD, KONF}\n      mandatyWKraju[partia as keyof Wynik] += mandaty;\n    }\n  }\n  return mandatyWKraju;\n}\n\nexport const dhondtKraj: { partia: string; iloraz: number; nrMandatu: number, okreg: Okreg }[] = [];\n\nexport function PodzialMandatowWOkregu(\n  wynik: Wynik,\n  okreg: Okreg,\n  options?: { log: boolean, inputWGlosach: boolean }\n): Wynik {\n  const MAX_MANDATOW_DLA_KOMITETU = 12;\n  const dhont: {partia: string, iloraz: number, nrMandatu: number}[] = [];\n  // Jeśli ilorazy są takie same to liczy się liczba głosów, ale ignorujemy to bo interesuje nas statystyka.\n  for (const [partia, procent] of Object.entries(wynik)) {\n    for (let i = 1; i <= Math.min(MAX_MANDATOW_DLA_KOMITETU, okreg.mandaty); i++) {\n      dhont.push({ partia, iloraz: procent / i, nrMandatu: i });\n      if (options?.log) {\n        dhondtKraj.push({ partia, iloraz: procent / i, nrMandatu: i, okreg });\n      }\n    }\n  }\n\n  const posortowanyDhont = dhont.sort((a, b) => {\n    return b.iloraz - a.iloraz;\n  });\n\n  const ostatniWzietyMandat = posortowanyDhont[okreg.mandaty - 1];\n  const pierwszyNiewzietyMandat = posortowanyDhont[okreg.mandaty];\n\n  // NOTE @tomek niesamowite. 2023 i nie można napisać w TypeScript sum(glosy2019[okreg.nr - 1]) jak np. w Pythonie ;-)\n  const glosyWOkregu2019 = glosy2019[okreg.nr - 1].reduce(\n    (accumulator: number, currentValue: number): number => {\n      return accumulator + currentValue;\n    },\n    0\n  );\n\n  const podzial: Wynik = posortowanyDhont\n    .slice(0, okreg.mandaty)\n    .map((x) => x.partia)\n    .reduce((acc, cur) => {\n      acc[cur] ? acc[cur]++ : (acc[cur] = 1);\n      return acc;\n    }, {});\n\n  podzial.cenaMandatu = options?.inputWGlosach ? ostatniWzietyMandat.iloraz : Math.round(\n    (ostatniWzietyMandat.iloraz / 100) * glosyWOkregu2019);\n\n  // Sekcja do tabelki której aktualnie nie wyświetlamy z powodu niezdebugowanych błędów w logice poniżej (sumy powinny być prawie 100% a są dużo niższe)\n  for (const d of dhont.filter((value) => value.iloraz + 0.001 >= ostatniWzietyMandat.iloraz)) {\n    const glosy = d.iloraz * d.nrMandatu;\n    const resztaUlamek = Math.round(10000 * (glosy % ostatniWzietyMandat.iloraz) / ostatniWzietyMandat.iloraz) / 1000;\n    if (!podzial[`${d.partia}_zagrozenie`]) {\n      podzial[`${d.partia}_zagrozenie`] =\n        resztaUlamek < 0.20 && resztaUlamek > 0;\n    }\n    if (!podzial[`${d.partia}_ostatnie`]) {\n      podzial[`${d.partia}_ostatnie`] = resztaUlamek === 0;\n    }\n    if (!podzial[`${d.partia}_dawca`]) {\n      podzial[`${d.partia}_dawca`] = resztaUlamek < 0.75 && resztaUlamek > 0.25;\n    }\n  }\n  for (const d of dhont.filter(\n    (value) => value.iloraz < ostatniWzietyMandat.iloraz\n  )) {\n    const glosy = d.iloraz * d.nrMandatu;\n    if (!podzial[`${d.partia}_szansa`]) {\n      podzial[`${d.partia}_szansa`] =\n        (glosy % ostatniWzietyMandat.iloraz) / ostatniWzietyMandat.iloraz >\n        0.8;\n    }\n  }\n\n  if (options?.log) {\n    const round2Fn = (num:number) => Math.round(num * 100) / 100;\n    let tabelka = `<tr><td>${okreg.miasto} (${okreg.nr})</td>`;\n    // Dla wszystkich okręgów poza Warszawą dodajemy wypełniacz:\n    tabelka += okreg.mandaty === 20 ? '' : `<td colspan=\"${20 - okreg.mandaty}\">&nbsp;</td>`;\n    let mandat = 0;\n\n    // Zróbmy linijke z numerem mandatu\n    // if (okreg.nr % 11 === 1) {\n    //   tabelka += `<tr><td>Mandat nr</td><td colspan=\"${\n    //     21 - okreg.mandaty\n    //   }\">&nbsp;</td>`;\n    // }\n    for (const rekord of posortowanyDhont) {\n      let ramka = '';\n      mandat++;\n      if (mandat <= okreg.mandaty && mandat > okreg.mandatyPKW) {\n        ramka = \" border: 2px dashed red;\";\n      }\n      if (mandat > okreg.mandaty && mandat <= okreg.mandatyPKW) {\n        ramka = \" border: 2px dashed green;\";\n      }\n      tabelka += `<td style=\"background-color: ${Color(KOLOR_PARTII[rekord.partia]).fade(0.6)};${ramka}\">${rekord.partia} #${rekord.nrMandatu} ${round2Fn(rekord.iloraz)}</td>`\n      if (mandat === okreg.mandaty) {\n        tabelka += `<td style=\"background-color: black\">&nbsp;</td>`;\n      }\n      if (mandat > okreg.mandaty + 2) {\n        break;\n      }\n    }\n    tabelka += `<td>${okreg.miasto} (${okreg.nr})</td></tr>`;\n    console.log(tabelka);\n\n    // const roznica = Math.round((ostatniWzietyMandat.iloraz - pierwszyNiewzietyMandat.iloraz) * pierwszyNiewzietyMandat.nrMandatu);\n    // const roznicaHTML =\n    //   roznica < 1000\n    //     ? `<b style=\"color: red\">${roznica}</b>`\n    //     : `<b>${roznica}</b>`;\n\n    // console.log(\n    //   `W okręgu <u>${\n    //     okreg.miasto\n    //   }</u> różnica głosów potrzebna żeby zmienić wynik wynosiła ${roznicaHTML}. Liczymy to jako różnicę między ostatnim wprowadzonym posłem (mandat numer #${\n    //     ostatniWzietyMandat.nrMandatu\n    //   }\n    //   dla ${\n    //     ostatniWzietyMandat.partia\n    //   }) a pierwszym niebiorącym miejscem (byłby to mandat #${\n    //     pierwszyNiewzietyMandat.nrMandatu\n    //   } \n    //   dla ${\n    //     pierwszyNiewzietyMandat.partia\n    //   }). Wyliczamy to odejmując ilorazy (${round2Fn(\n    //     ostatniWzietyMandat.iloraz\n    //   )} -\n    //   ${round2Fn(pierwszyNiewzietyMandat.iloraz)}) i mnożąc przez ${\n    //     pierwszyNiewzietyMandat.nrMandatu\n    //   }, bo byłby to mandat numer ${pierwszyNiewzietyMandat.nrMandatu} dla ${\n    //     pierwszyNiewzietyMandat.partia\n    //   } w tym okręgu.`\n    // );\n  }\n  return podzial;\n}\n\nfunction czestoscNaProcentSymulacji(value: number) {\n  return (Math.round(1000 * (value / ILE_SYMULACJI)) / 10).toString() + \"%\";\n}\n\nexport function odchylenie(partia: string, procent: number, okreg: number) {\n  // https://chat.openai.com/share/30b1d901-30b1-46bb-af91-a831affbc3e7\n  const PROBA_LOSOWA_SONDAZY = 1000;\n  const n = PROBA_LOSOWA_SONDAZY * Object.entries(sondazeDoSredniej).length;\n  const p = procent / 100;\n  const bladProporcji = Math.sqrt((p * (1 - p)) / n);\n\n  // TODO @tomek funkcja odchylenie jest używana intensywnie w obliczeniach, ten sqrt(5) nie jest dla mmie oczywisty\n  // Mnożymy przez sqrt(5), żeby przeliczyć bląd statystyczny z wykresu na odchylenie standardowe. Potem przeliczamy na punkty procentowe.\n  // TODO @kuba zamienić na stabilne źródło danych (arkusz: https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1787689356) i przeliczyć ponownie bez sztuczek\n  const bladOdchyleniaWRegionie =\n    ROZKLAD[`${partia}_BLAD`][okreg - 1] * Math.sqrt(5) * (procent / 100);\n  // return (100 * bladProporcji) + (ROZKLAD[`${partia}_BLAD`][okreg - 1] * Math.sqrt(5));\n\n  // sumowanie odchylen standardowych: https://chat.openai.com/share/81cdfe04-09b5-45b6-8624-b3d402b12a60\n  // TODO @tomek dlaczego 100 * bladProporcji? bo bladOdchyleniaWREgionie byl przeliczony na punkty procentowe a bladProporcji nie?\n  return Math.sqrt((100 * bladProporcji) ** 2 + bladOdchyleniaWRegionie ** 2);\n}\n\nexport function NormalizujWynik(wynik: Wynik):Wynik {\n  const suma = wynik.KO + wynik.PIS + wynik.TD + wynik.KONF + wynik.LEWICA;\n  const mnożnik = 100/suma;\n  return {\n    PIS: wynik.PIS * mnożnik,\n    KO: wynik.KO * mnożnik,\n    TD: wynik.TD * mnożnik,\n    KONF: wynik.KONF * mnożnik,\n    LEWICA: wynik.LEWICA * mnożnik,\n  }\n}\n\nexport function RozkladPrawdopodobienstwaWOkregu(\n  wynik: Wynik,\n  okreg: Okreg\n): {\n  procentyWOkreguSrednia: Wynik;\n  odchylenieWOkregu: Wynik,\n  wykresRozkladu: Sondaze;\n  wykresRozkladuDemo: Sondaze;\n  histogram: Histogram;\n  minimumMandatow: Wynik;\n  ostatnieMandaty: Wynik; // reszta 0\n  zagrozoneMandaty: Wynik; // reszta (0, 25%)\n  potencjalneMandaty: Wynik; // reszta (75%, 99.99%)\n  dawcyGlosow: Wynik; // reszta (30%, 70%)\n} {\n  const { wynikWOkregu, odchylenieWOkregu } = PoparcieWOkregu(wynik, okreg);\n  const procentyWOkreguSrednia = NormalizujWynik(wynikWOkregu);\n  const rozklad = {};\n  const rozkladDemo = {};\n  const histogram: Histogram = {};\n  const minimumMandatow: Wynik = {\n    KO: 100,\n    TD: 100,\n    LEWICA: 100,\n  };\n  const zagrozoneMandaty: Wynik = {\n    KO: 0,\n    TD: 0,\n    LEWICA: 0,\n  };\n  const potencjalneMandaty: Wynik = {\n    KO: 0,\n    TD: 0,\n    LEWICA: 0,\n  };\n  const ostatnieMandaty: Wynik = {\n    KO: 0,\n    TD: 0,\n    LEWICA: 0,\n  };\n  const dawcyGlosow: Wynik = {\n    KO: 0,\n    TD: 0,\n    LEWICA: 0,\n  };\n\n  \n  const bucketFn = (num, bucket) => Math.round(num * bucket) / bucket;\n\n  for (let i = 1; i <= ILE_SYMULACJI; i++) {\n    // Losowanie poparcia dla partii\n    let { procentWOkreguLosoweUncapped, procentWOkreguLosoweCapped } = losowanieWyniku(procentyWOkreguSrednia, odchylenieWOkregu, bucketFn);\n    // Podział mandatów\n    const mandatyWOkregu = PodzialMandatowWOkregu(\n      procentWOkreguLosoweUncapped,\n      okreg\n    );\n    // info dla wykresów\n    minimumMandatow.KO > (mandatyWOkregu.KO || 0)\n      ? (minimumMandatow.KO = mandatyWOkregu.KO || 0)\n      : null;\n    minimumMandatow.LEWICA > (mandatyWOkregu.LEWICA || 0)\n      ? (minimumMandatow.LEWICA = mandatyWOkregu.LEWICA || 0)\n      : null;\n    minimumMandatow.TD > (mandatyWOkregu.TD || 0)\n      ? (minimumMandatow.TD = mandatyWOkregu.TD || 0)\n      : null;\n\n    const str = sortedStringify(NaPolDemo(mandatyWOkregu));\n    const strDemo = sortedStringify(NaDemo(mandatyWOkregu));\n    rozklad[str] ? rozklad[str]++ : (rozklad[str] = 1);\n    rozkladDemo[strDemo] ? rozkladDemo[strDemo]++ : (rozkladDemo[strDemo] = 1);\n    // Zapisanie mandatów w histogramie\n    for (const [partia, procent] of Object.entries(procentWOkreguLosoweCapped)) {\n      if (!histogram[partia]) {\n        histogram[partia] = {};\n      }\n      if (!histogram[partia][String(procent)]) {\n        histogram[partia][String(procent)] = {};\n      }\n      // Dodajemy czestosc dla danej ilości mandatów dla danego procentu ze wszystkich symulacji.\n      const mandaty = String(mandatyWOkregu[partia] || 0);\n      histogram[partia][String(procent)][mandaty]\n        ? (histogram[partia][String(procent)][mandaty] += 1)\n        : (histogram[partia][String(procent)][mandaty] = 1);\n    }\n    // Liczenie sytuacji zagrożenia/szansy\n    if (mandatyWOkregu.KO_zagrozenie) {\n      zagrozoneMandaty.KO++;\n    }\n    if (mandatyWOkregu.TD_zagrozenie) {\n      zagrozoneMandaty.TD++;\n    }\n    if (mandatyWOkregu.LEWICA_zagrozenie) {\n      zagrozoneMandaty.LEWICA++;\n    }\n\n    if (mandatyWOkregu.KO_szansa) {\n      potencjalneMandaty.KO++;\n    }\n    if (mandatyWOkregu.TD_szansa) {\n      potencjalneMandaty.TD++;\n    }\n    if (mandatyWOkregu.LEWICA_szansa) {\n      potencjalneMandaty.LEWICA++;\n    }\n\n    if (mandatyWOkregu.KO_dawca) {\n      dawcyGlosow.KO++;\n    }\n    if (mandatyWOkregu.TD_dawca) {\n      dawcyGlosow.TD++;\n    }\n    if (mandatyWOkregu.LEWICA_dawca) {\n      dawcyGlosow.LEWICA++;\n    }\n\n    if (mandatyWOkregu.KO_ostatnie) {\n      ostatnieMandaty.KO++;\n    }\n    if (mandatyWOkregu.TD_ostatnie) {\n      ostatnieMandaty.TD++;\n    }\n    if (mandatyWOkregu.LEWICA_ostatnie) {\n      ostatnieMandaty.LEWICA++;\n    }\n  } // end of ILE_SYMULACJI loop\n\n  const wykresRozkladu: Sondaze = {};\n  sortObjectByValues(rozklad)\n    .slice(0, 12)\n    .forEach(({ key, value }) => {\n      wykresRozkladu[czestoscNaProcentSymulacji(value)] = JSON.parse(\n        key\n      ) as Wynik;\n    });\n\n  const wykresRozkladuDemo: Sondaze = {};\n  sortObjectByValues(rozkladDemo)\n    .slice(0, 3)\n    .forEach(({ key, value }) => {\n      wykresRozkladuDemo[czestoscNaProcentSymulacji(value)] = JSON.parse(\n        key\n      ) as Wynik;\n    });\n\n  return {\n    procentyWOkreguSrednia,\n    odchylenieWOkregu,\n    wykresRozkladu,\n    wykresRozkladuDemo,\n    histogram,\n    // W Warszawie mamy b. szeroki zakres możliwości, szczególnie dla KO i Lewicy, podbijamy więc tam minimalne mandaty, żeby wykres wyglądał lepiej\n    minimumMandatow: {\n      ...minimumMandatow,\n      KO: okreg.nr === 19 ? 8 : minimumMandatow.KO,\n      LEWICA: okreg.nr === 19 ? 2 : minimumMandatow.LEWICA,\n    },\n    zagrozoneMandaty,\n    potencjalneMandaty,\n    ostatnieMandaty,\n    dawcyGlosow,\n  };\n}\n\nexport function losowanieWyniku(procentyWOkreguSrednia: Wynik, odchylenieWOkregu: Wynik, bucketFn: (num: any, bucket: any) => number) {\n  let procentWOkreguLosoweUncapped: Wynik = {};\n  for (const [partia, procent] of Object.entries(procentyWOkreguSrednia)) {\n    const wynikLosowyUncapped = Math.max(random.normal(\n      procent,\n      odchylenieWOkregu[partia]\n    )(), 0);\n    procentWOkreguLosoweUncapped[partia] = wynikLosowyUncapped;\n  }\n  procentWOkreguLosoweUncapped = NormalizujWynik(procentWOkreguLosoweUncapped);\n  let procentWOkreguLosoweCapped: Wynik = {};\n  for (const [partia, procent] of Object.entries(\n    procentWOkreguLosoweUncapped\n  )) {\n    // Musimy używać tego samego odchylenia w każdej symulacji do cappowania\n    const procentOczekiwany = procentyWOkreguSrednia[partia];\n    const stddev = odchylenieWOkregu[partia];\n    const wynikLosowyCapped = bucketFn(\n      Math.max(\n        Math.min(procent, procentOczekiwany + stddev * ZAKRES_GORA),\n        Math.max(procentOczekiwany - stddev * ZAKRES_DOL, 0)\n      ),\n      5 // dzielimy kazdy procent na przedziały co 0.2%, czyli na 5 bucketów\n    );\n    procentWOkreguLosoweCapped[partia] = wynikLosowyCapped;\n  }\n  return { procentWOkreguLosoweUncapped, procentWOkreguLosoweCapped };\n}\n","export interface Wynik {\n  PIS?: number;\n  KO?: number;\n  TD?: number;\n  LEWICA?: number;\n  KONF?: number;\n  BS?: number;\n  PJJ?: number;\n  PSL?: number;\n  KO_zagrozenie?: boolean;\n  TD_zagrozenie?: boolean;\n  LEWICA_zagrozenie?: boolean;\n  KO_szansa?: boolean;\n  TD_szansa?: boolean;\n  LEWICA_szansa?: boolean;\n  KO_ostatnie?: boolean;\n  TD_ostatnie?: boolean;\n  LEWICA_ostatnie?: boolean;\n  KO_dawca?: boolean;\n  TD_dawca?: boolean;\n  LEWICA_dawca?: boolean;\n  denominator?: number;\n  cenaMandatu?: number;\n}\n\nexport interface WynikPolDemo {\n  KO: number;\n  TD: number;\n  LEWICA: number;\n  NIEDEMO: number;\n}\n\nexport interface WynikDemo {\n  DEMO: number;\n  NIEDEMO: number;\n}\n\nexport interface Sondaze {\n  [sondaz: string]: Wynik | WynikDemo;\n}\n\nexport type Okreg = {\n  nr: number;\n  miasto: string;\n  mandaty: number;\n  mandatyPKW: number;\n  wynik2019: Wynik;\n  glosy2019?: number;\n};\n\nexport interface CzestoscMandatow {\n  [mandaty: string]: number;\n}\n\nexport interface PoparciePartii {\n  [procent: string]: CzestoscMandatow;\n}\n\nexport interface Histogram {\n  [partia: string]: PoparciePartii;\n}\n\nexport type Rekomendacja = {\n  nrOkregu: number;\n  nazwaOkregu: string;\n  rekomendacjePartii: string[];\n}\n\nexport interface Rekomendacje {\n  [okreg: string]: Rekomendacja;\n}\n\n\nexport const ILE_SYMULACJI = 200000;","import seedrandom from 'seedrandom';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar RNG = /*#__PURE__*/function () {\n  function RNG() {}\n  var _proto = RNG.prototype;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _proto._seed = function _seed(seed, _opts) {\n    // TODO: add entropy and stuff\n    if (seed === (seed || 0)) {\n      return seed;\n    } else {\n      var strSeed = '' + seed;\n      var s = 0;\n      for (var k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0;\n      }\n      return s;\n    }\n  };\n  return RNG;\n}();\n\nvar RNGFunction = /*#__PURE__*/function (_RNG) {\n  _inheritsLoose(RNGFunction, _RNG);\n  function RNGFunction(thunk, opts) {\n    var _this;\n    _this = _RNG.call(this) || this;\n    _this._rng = void 0;\n    _this.seed(thunk, opts);\n    return _this;\n  }\n  var _proto = RNGFunction.prototype;\n  _proto.next = function next() {\n    return this._rng();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ;\n  _proto.seed = function seed(thunk, _opts) {\n    this._rng = thunk;\n  };\n  _proto.clone = function clone(_, opts) {\n    return new RNGFunction(this._rng, opts);\n  };\n  _createClass(RNGFunction, [{\n    key: \"name\",\n    get: function get() {\n      return 'function';\n    }\n  }]);\n  return RNGFunction;\n}(RNG);\n\n/**\r\n * Construct an RNG with variable inputs. Used in calls to Random constructor\r\n * @param {...*} args - Distribution-specific arguments\r\n * @return RNG\r\n *\r\n * @example\r\n * new Random(RNGFactory(...args))\r\n */\nvar RNGFactory = (function () {\n  var args = [].slice.call(arguments);\n  var _args = args,\n    _args$ = _args[0],\n    arg0 = _args$ === void 0 ? 'default' : _args$;\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0;\n      }\n      break;\n    case 'function':\n      return new RNGFunction(arg0);\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom.apply(void 0, args));\n  }\n  throw new Error(\"invalid RNG \\\"\" + arg0 + \"\\\"\");\n});\n\nvar uniform = (function (random, min, max) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (max === void 0) {\n    max = 1;\n  }\n  return function () {\n    return random.next() * (max - min) + min;\n  };\n});\n\nfunction numberValidator(num) {\n  return new NumberValidator(num);\n}\nvar NumberValidator = function NumberValidator(num) {\n  var _this = this;\n  this.n = void 0;\n  this.isInt = function () {\n    if (Number.isInteger(_this.n)) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be an integer, got \" + _this.n);\n  };\n  this.isPositive = function () {\n    if (_this.n > 0) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be positive, got \" + _this.n);\n  };\n  this.lessThan = function (v) {\n    if (_this.n < v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be less than \" + v + \", got \" + _this.n);\n  };\n  this.greaterThanOrEqual = function (v) {\n    if (_this.n >= v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be greater than or equal to \" + v + \", got \" + _this.n);\n  };\n  this.greaterThan = function (v) {\n    if (_this.n > v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be greater than \" + v + \", got \" + _this.n);\n  };\n  this.n = num;\n};\n\nvar uniformInt = (function (random, min, max) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (max === void 0) {\n    max = 1;\n  }\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  numberValidator(min).isInt();\n  numberValidator(max).isInt();\n  return function () {\n    return Math.floor(random.next() * (max - min + 1) + min);\n  };\n});\n\nvar uniformBoolean = (function (random) {\n  return function () {\n    return random.next() >= 0.5;\n  };\n});\n\nvar normal = (function (random, mu, sigma) {\n  if (mu === void 0) {\n    mu = 0;\n  }\n  if (sigma === void 0) {\n    sigma = 1;\n  }\n  return function () {\n    var x, y, r;\n    do {\n      x = random.next() * 2 - 1;\n      y = random.next() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n});\n\nvar logNormal = (function (random, mu, sigma) {\n  if (mu === void 0) {\n    mu = 0;\n  }\n  if (sigma === void 0) {\n    sigma = 1;\n  }\n  var normal = random.normal(mu, sigma);\n  return function () {\n    return Math.exp(normal());\n  };\n});\n\nvar bernoulli = (function (random, p) {\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n  return function () {\n    return Math.floor(random.next() + p);\n  };\n});\n\nvar binomial = (function (random, n, p) {\n  if (n === void 0) {\n    n = 1;\n  }\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(n).isInt().isPositive();\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n  return function () {\n    var i = 0;\n    var x = 0;\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++;\n      }\n    }\n    return x;\n  };\n});\n\nvar geometric = (function (random, p) {\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(p).greaterThan(0).lessThan(1);\n  var invLogP = 1.0 / Math.log(1.0 - p);\n  return function () {\n    return Math.floor(1 + Math.log(random.next()) * invLogP);\n  };\n});\n\nvar logFactorialTable = [0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458, 4.7874917427820458, 6.5792512120101012, 8.5251613610654147, 10.604602902745251, 12.801827480081469];\nvar logFactorial = function logFactorial(k) {\n  return logFactorialTable[k];\n};\nvar logSqrt2PI = 0.91893853320467267;\nvar poisson = (function (random, lambda) {\n  if (lambda === void 0) {\n    lambda = 1;\n  }\n  numberValidator(lambda).isPositive();\n  if (lambda < 10) {\n    // inversion method\n    var expMean = Math.exp(-lambda);\n    return function () {\n      var p = expMean;\n      var x = 0;\n      var u = random.next();\n      while (u > p) {\n        u = u - p;\n        p = lambda * p / ++x;\n      }\n      return x;\n    };\n  } else {\n    // generative method\n    var smu = Math.sqrt(lambda);\n    var b = 0.931 + 2.53 * smu;\n    var a = -0.059 + 0.02483 * b;\n    var invAlpha = 1.1239 + 1.1328 / (b - 3.4);\n    var vR = 0.9277 - 3.6224 / (b - 2);\n    return function () {\n      while (true) {\n        var u = void 0;\n        var v = random.next();\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43;\n          return Math.floor((2 * a / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445);\n        }\n        if (v >= vR) {\n          u = random.next() - 0.5;\n        } else {\n          u = v / vR - 0.93;\n          u = (u < 0 ? -0.5 : 0.5) - u;\n          v = random.next() * vR;\n        }\n        var us = 0.5 - Math.abs(u);\n        if (us < 0.013 && v > us) {\n          continue;\n        }\n        var k = Math.floor((2 * a / us + b) * u + lambda + 0.445);\n        v = v * invAlpha / (a / (us * us) + b);\n        if (k >= 10) {\n          var t = (k + 0.5) * Math.log(lambda / k) - lambda - logSqrt2PI + k - (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k;\n          if (Math.log(v * smu) <= t) {\n            return k;\n          }\n        } else if (k >= 0) {\n          var _logFactorial;\n          var f = (_logFactorial = logFactorial(k)) != null ? _logFactorial : 0;\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k;\n          }\n        }\n      }\n    };\n  }\n});\n\nvar exponential = (function (random, lambda) {\n  if (lambda === void 0) {\n    lambda = 1;\n  }\n  numberValidator(lambda).isPositive();\n  return function () {\n    return -Math.log(1 - random.next()) / lambda;\n  };\n});\n\nvar irwinHall = (function (random, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n  numberValidator(n).isInt().greaterThanOrEqual(0);\n  return function () {\n    var sum = 0;\n    for (var i = 0; i < n; ++i) {\n      sum += random.next();\n    }\n    return sum;\n  };\n});\n\nvar bates = (function (random, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n  numberValidator(n).isInt().isPositive();\n  var irwinHall = random.irwinHall(n);\n  return function () {\n    return irwinHall() / n;\n  };\n});\n\nvar pareto = (function (random, alpha) {\n  if (alpha === void 0) {\n    alpha = 1;\n  }\n  numberValidator(alpha).greaterThanOrEqual(0);\n  var invAlpha = 1.0 / alpha;\n  return function () {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha);\n  };\n});\n\nvar RNGMathRandom = /*#__PURE__*/function (_RNG) {\n  _inheritsLoose(RNGMathRandom, _RNG);\n  function RNGMathRandom() {\n    return _RNG.apply(this, arguments) || this;\n  }\n  var _proto = RNGMathRandom.prototype;\n  _proto.next = function next() {\n    return Math.random();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ;\n  _proto.seed = function seed(_seed, _opts) {\n    // intentionally empty\n  };\n  _proto.clone = function clone() {\n    return new RNGMathRandom();\n  };\n  _createClass(RNGMathRandom, [{\n    key: \"name\",\n    get: function get() {\n      return 'default';\n    }\n  }]);\n  return RNGMathRandom;\n}(RNG);\n\n/**\r\n * Seedable random number generator supporting many common distributions.\r\n *\r\n * Defaults to Math.random as its underlying pseudorandom number generator.\r\n *\r\n * @name Random\r\n * @class\r\n *\r\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\r\n */\nvar Random = /*#__PURE__*/function () {\n  function Random(rng) {\n    var _this = this;\n    this._rng = void 0;\n    this._patch = void 0;\n    this._cache = {};\n    this.next = function () {\n      return _this._rng.next();\n    };\n    this[\"float\"] = function (min, max) {\n      return _this.uniform(min, max)();\n    };\n    this[\"int\"] = function (min, max) {\n      return _this.uniformInt(min, max)();\n    };\n    this.integer = function (min, max) {\n      return _this.uniformInt(min, max)();\n    };\n    this.bool = function () {\n      return _this.uniformBoolean()();\n    };\n    this[\"boolean\"] = function () {\n      return _this.uniformBoolean()();\n    };\n    this.uniform = function (min, max) {\n      return _this._memoize('uniform', uniform, min, max);\n    };\n    this.uniformInt = function (min, max) {\n      return _this._memoize('uniformInt', uniformInt, min, max);\n    };\n    this.uniformBoolean = function () {\n      return _this._memoize('uniformBoolean', uniformBoolean);\n    };\n    this.normal = function (mu, sigma) {\n      return normal(_this, mu, sigma);\n    };\n    this.logNormal = function (mu, sigma) {\n      return logNormal(_this, mu, sigma);\n    };\n    this.bernoulli = function (p) {\n      return bernoulli(_this, p);\n    };\n    this.binomial = function (n, p) {\n      return binomial(_this, n, p);\n    };\n    this.geometric = function (p) {\n      return geometric(_this, p);\n    };\n    this.poisson = function (lambda) {\n      return poisson(_this, lambda);\n    };\n    this.exponential = function (lambda) {\n      return exponential(_this, lambda);\n    };\n    this.irwinHall = function (n) {\n      return irwinHall(_this, n);\n    };\n    this.bates = function (n) {\n      return bates(_this, n);\n    };\n    this.pareto = function (alpha) {\n      return pareto(_this, alpha);\n    };\n    if (rng && rng instanceof RNG) {\n      this.use(rng);\n    } else {\n      this.use(new RNGMathRandom());\n    }\n    this._cache = {};\n  }\n  /**\r\n   * @member {RNG} Underlying pseudo-random number generator\r\n   */\n  var _proto = Random.prototype;\n  /**\r\n   * Creates a new `Random` instance, optionally specifying parameters to\r\n   * set a new seed.\r\n   *\r\n   * @see RNG.clone\r\n   *\r\n   * @param {string} [seed] - Optional seed for new RNG.\r\n   * @param {object} [opts] - Optional config for new RNG options.\r\n   * @return {Random}\r\n   */\n  _proto.clone = function clone() {\n    var args = [].slice.call(arguments);\n    if (args.length) {\n      return new Random(RNGFactory.apply(void 0, args));\n    } else {\n      return new Random(this.rng.clone());\n    }\n  }\n  /**\r\n   * Sets the underlying pseudorandom number generator used via\r\n   * either an instance of `seedrandom`, a custom instance of RNG\r\n   * (for PRNG plugins), or a string specifying the PRNG to use\r\n   * along with an optional `seed` and `opts` to initialize the\r\n   * RNG.\r\n   *\r\n   * @example\r\n   * import random from 'random'\r\n   *\r\n   * random.use('example_seedrandom_string')\r\n   * // or\r\n   * random.use(seedrandom('kittens'))\r\n   * // or\r\n   * random.use(Math.random)\r\n   *\r\n   * @param {...*} args\r\n   */;\n  _proto.use = function use() {\n    this._rng = RNGFactory.apply(void 0, [].slice.call(arguments));\n  }\n  /**\r\n   * Patches `Math.random` with this Random instance's PRNG.\r\n   */;\n  _proto.patch = function patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched');\n    }\n    this._patch = Math.random;\n    Math.random = this.uniform();\n  }\n  /**\r\n   * Restores a previously patched `Math.random` to its original value.\r\n   */;\n  _proto.unpatch = function unpatch() {\n    if (this._patch) {\n      Math.random = this._patch;\n      delete this._patch;\n    }\n  }\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n  /**\r\n   * Convenience wrapper around `this.rng.next()`\r\n   *\r\n   * Returns a floating point number in [0, 1).\r\n   *\r\n   * @return {number}\r\n   */;\n  /**\r\n   * Returns an item chosen uniformly at trandom from the given array.\r\n   *\r\n   * Convence wrapper around `random.uniformInt()`\r\n   *\r\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\r\n   * @return {T | undefined}\r\n   */\n  _proto.choice = function choice(array) {\n    if (!Array.isArray(array)) {\n      throw new Error(\"Random.choice expected input to be an array, got \" + typeof array);\n    }\n    var length = array == null ? void 0 : array.length;\n    if (length > 0) {\n      var index = this.uniformInt(0, length - 1)();\n      return array[index];\n    } else {\n      return undefined;\n    }\n  }\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n  /**\r\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\r\n   *\r\n   * @param {number} [min=0] - Lower bound (float, inclusive)\r\n   * @param {number} [max=1] - Upper bound (float, exclusive)\r\n   * @return {function}\r\n   */;\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n  /**\r\n   * Memoizes distributions to ensure they're only created when necessary.\r\n   *\r\n   * Returns a thunk which that returns independent, identically distributed\r\n   * samples from the specified distribution.\r\n   *\r\n   * @private\r\n   *\r\n   * @param {string} label - Name of distribution\r\n   * @param {function} getter - Function which generates a new distribution\r\n   * @param {...*} args - Distribution-specific arguments\r\n   *\r\n   * @return {function}\r\n   */\n  _proto._memoize = function _memoize(label, getter) {\n    var args = [].slice.call(arguments, 2);\n    var key = \"\" + args.join(';');\n    var value = this._cache[label];\n    if (value === undefined || value.key !== key) {\n      value = {\n        key: key,\n        distribution: getter.apply(void 0, [this].concat(args))\n      };\n      this._cache[label] = value;\n    }\n    return value.distribution;\n  };\n  _createClass(Random, [{\n    key: \"rng\",\n    get: function get() {\n      return this._rng;\n    }\n  }]);\n  return Random;\n}();\n// defaults to Math.random as its RNG\nvar random = new Random();\n\nexport { RNG, RNGFactory, Random, random as default };\n//# sourceMappingURL=random.module.js.map\n","export type SeedFn = () => number\nexport type SeedType = number | string | SeedFn | RNG\n\nexport default abstract class RNG {\n  abstract get name(): string\n\n  abstract next(): number\n\n  abstract seed(_seed?: SeedType, _opts?: Record<string, unknown>): void\n\n  abstract clone(_seed?: SeedType, _opts?: Record<string, unknown>): RNG\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _seed(seed: number, _opts?: Record<string, unknown>) {\n    // TODO: add entropy and stuff\n\n    if (seed === (seed || 0)) {\n      return seed\n    } else {\n      const strSeed = '' + seed\n      let s = 0\n\n      for (let k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0\n      }\n\n      return s\n    }\n  }\n}\n","import RNG, { SeedFn } from '../rng'\n\nexport default class RNGFunction extends RNG {\n  _rng: SeedFn\n\n  constructor(thunk: SeedFn, opts?: Record<string, unknown>) {\n    super()\n\n    this.seed(thunk, opts)\n  }\n\n  get name() {\n    return 'function'\n  }\n\n  next() {\n    return this._rng()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(thunk: SeedFn, _opts?: Record<string, unknown>) {\n    this._rng = thunk\n  }\n\n  clone(_: undefined, opts: Record<string, unknown>) {\n    return new RNGFunction(this._rng, opts)\n  }\n}\n","import seedrandom from 'seedrandom'\n\nimport RNG from './rng'\nimport RNGFunction from './generators/function'\n\n/**\n * Construct an RNG with variable inputs. Used in calls to Random constructor\n * @param {...*} args - Distribution-specific arguments\n * @return RNG\n *\n * @example\n * new Random(RNGFactory(...args))\n */\nexport default <T extends any[]>(...args: T) => {\n  const [arg0 = 'default'] = args\n\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0\n      }\n      break\n\n    case 'function':\n      return new RNGFunction(arg0)\n\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom(...args))\n  }\n\n  throw new Error(`invalid RNG \"${arg0}\"`)\n}\n","import { Random } from '../random'\n\nexport default (random: Random, min = 0, max = 1) => {\n  return () => {\n    return random.next() * (max - min) + min\n  }\n}\n","export function numberValidator(num: number) {\n  return new NumberValidator(num)\n}\n\nexport class NumberValidator {\n  private n: number\n  constructor(num: number) {\n    this.n = num\n  }\n\n  public isInt = (): this => {\n    if (Number.isInteger(this.n)) {\n      return this\n    }\n    throw new Error(`Expected number to be an integer, got ${this.n}`)\n  }\n\n  public isPositive = (): this => {\n    if (this.n > 0) {\n      return this\n    }\n    throw new Error(`Expected number to be positive, got ${this.n}`)\n  }\n\n  public lessThan = (v: number): this => {\n    if (this.n < v) {\n      return this\n    }\n    throw new Error(`Expected number to be less than ${v}, got ${this.n}`)\n  }\n\n  public greaterThanOrEqual = (v: number): this => {\n    if (this.n >= v) {\n      return this\n    }\n    throw new Error(\n      `Expected number to be greater than or equal to ${v}, got ${this.n}`\n    )\n  }\n\n  public greaterThan = (v: number): this => {\n    if (this.n > v) {\n      return this\n    }\n    throw new Error(`Expected number to be greater than ${v}, got ${this.n}`)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, min = 0, max = 1) => {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min\n    min = 0\n  }\n\n  numberValidator(min).isInt()\n  numberValidator(max).isInt()\n\n  return () => {\n    return Math.floor(random.next() * (max - min + 1) + min)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random) => {\n  return () => {\n    return random.next() >= 0.5\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  return () => {\n    let x: number, y: number, r: number\n\n    do {\n      x = random.next() * 2 - 1\n      y = random.next() * 2 - 1\n      r = x * x + y * y\n    } while (!r || r > 1)\n\n    return mu + sigma * y * Math.sqrt((-2 * Math.log(r)) / r)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  const normal = random.normal(mu, sigma)\n  return () => {\n    return Math.exp(normal())\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    return Math.floor(random.next() + p)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1, p = 0.5) => {\n  numberValidator(n).isInt().isPositive()\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    let i = 0\n    let x = 0\n\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++\n      }\n    }\n    return x\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThan(0).lessThan(1)\n  const invLogP = 1.0 / Math.log(1.0 - p)\n\n  return () => {\n    return Math.floor(1 + Math.log(random.next()) * invLogP)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nconst logFactorialTable = [\n  0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458,\n  4.7874917427820458, 6.5792512120101012, 8.5251613610654147,\n  10.604602902745251, 12.801827480081469\n]\n\nconst logFactorial = (k: number) => {\n  return logFactorialTable[k]\n}\n\nconst logSqrt2PI = 0.91893853320467267\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  if (lambda < 10) {\n    // inversion method\n    const expMean = Math.exp(-lambda)\n\n    return () => {\n      let p = expMean\n      let x = 0\n      let u = random.next()\n\n      while (u > p) {\n        u = u - p\n        p = (lambda * p) / ++x\n      }\n\n      return x\n    }\n  } else {\n    // generative method\n    const smu = Math.sqrt(lambda)\n    const b = 0.931 + 2.53 * smu\n    const a = -0.059 + 0.02483 * b\n    const invAlpha = 1.1239 + 1.1328 / (b - 3.4)\n    const vR = 0.9277 - 3.6224 / (b - 2)\n\n    return () => {\n      while (true) {\n        let u\n        let v = random.next()\n\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43\n          return Math.floor(\n            ((2 * a) / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445\n          )\n        }\n\n        if (v >= vR) {\n          u = random.next() - 0.5\n        } else {\n          u = v / vR - 0.93\n          u = (u < 0 ? -0.5 : 0.5) - u\n          v = random.next() * vR\n        }\n\n        const us = 0.5 - Math.abs(u)\n        if (us < 0.013 && v > us) {\n          continue\n        }\n\n        const k = Math.floor(((2 * a) / us + b) * u + lambda + 0.445)\n        v = (v * invAlpha) / (a / (us * us) + b)\n\n        if (k >= 10) {\n          const t =\n            (k + 0.5) * Math.log(lambda / k) -\n            lambda -\n            logSqrt2PI +\n            k -\n            (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k\n\n          if (Math.log(v * smu) <= t) {\n            return k\n          }\n        } else if (k >= 0) {\n          const f = logFactorial(k) ?? 0\n\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k\n          }\n        }\n      }\n    }\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  return () => {\n    return -Math.log(1 - random.next()) / lambda\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().greaterThanOrEqual(0)\n\n  return () => {\n    let sum = 0\n    for (let i = 0; i < n; ++i) {\n      sum += random.next()\n    }\n\n    return sum\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().isPositive()\n  const irwinHall = random.irwinHall(n)\n\n  return () => {\n    return irwinHall() / n\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, alpha = 1) => {\n  numberValidator(alpha).greaterThanOrEqual(0)\n  const invAlpha = 1.0 / alpha\n\n  return () => {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha)\n  }\n}\n","import RNG from '../rng'\n\nexport default class RNGMathRandom extends RNG {\n  get name() {\n    return 'default'\n  }\n\n  next() {\n    return Math.random()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(_seed: unknown, _opts: Record<string, unknown>) {\n    // intentionally empty\n  }\n\n  clone() {\n    return new RNGMathRandom()\n  }\n}\n","import RNG from './rng'\nimport RNGFactory from './rng-factory'\n\nimport uniform from './distributions/uniform'\nimport uniformInt from './distributions/uniform-int'\nimport uniformBoolean from './distributions/uniform-boolean'\nimport normal from './distributions/normal'\nimport logNormal from './distributions/log-normal'\nimport bernoulli from './distributions/bernoulli'\nimport binomial from './distributions/binomial'\nimport geometric from './distributions/geometric'\nimport poisson from './distributions/poisson'\nimport exponential from './distributions/exponential'\nimport irwinHall from './distributions/irwin-hall'\nimport bates from './distributions/bates'\nimport pareto from './distributions/pareto'\nimport RNGMathRandom from './generators/math-random'\n\n/**\n * Distribution function\n */\ninterface IDistFn<R> {\n  (random: Random, ...argv: any): R\n}\n\n/**\n * Distribution\n */\ninterface IDist<R> {\n  (): R\n}\n\n/**\n * Keyed cache entry\n */\ninterface ICacheEntry<T> {\n  key: string\n  distribution: () => T\n}\n\nexport { RNG, RNGFactory }\n\n/**\n * Seedable random number generator supporting many common distributions.\n *\n * Defaults to Math.random as its underlying pseudorandom number generator.\n *\n * @name Random\n * @class\n *\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\n */\nexport class Random {\n  protected _rng: RNG\n  protected _patch: typeof Math.random | undefined\n  protected _cache: {\n    [k: string]: ICacheEntry<any>\n  } = {}\n\n  constructor(rng?: RNG) {\n    if (rng && rng instanceof RNG) {\n      this.use(rng)\n    } else {\n      this.use(new RNGMathRandom())\n    }\n    this._cache = {}\n  }\n\n  /**\n   * @member {RNG} Underlying pseudo-random number generator\n   */\n  get rng() {\n    return this._rng\n  }\n\n  /**\n   * Creates a new `Random` instance, optionally specifying parameters to\n   * set a new seed.\n   *\n   * @see RNG.clone\n   *\n   * @param {string} [seed] - Optional seed for new RNG.\n   * @param {object} [opts] - Optional config for new RNG options.\n   * @return {Random}\n   */\n  clone<T>(...args: [T]): Random {\n    if (args.length) {\n      return new Random(RNGFactory(...args))\n    } else {\n      return new Random(this.rng.clone())\n    }\n  }\n\n  /**\n   * Sets the underlying pseudorandom number generator used via\n   * either an instance of `seedrandom`, a custom instance of RNG\n   * (for PRNG plugins), or a string specifying the PRNG to use\n   * along with an optional `seed` and `opts` to initialize the\n   * RNG.\n   *\n   * @example\n   * import random from 'random'\n   *\n   * random.use('example_seedrandom_string')\n   * // or\n   * random.use(seedrandom('kittens'))\n   * // or\n   * random.use(Math.random)\n   *\n   * @param {...*} args\n   */\n  use(...args: [RNG]) {\n    this._rng = RNGFactory(...args)\n  }\n\n  /**\n   * Patches `Math.random` with this Random instance's PRNG.\n   */\n  patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched')\n    }\n\n    this._patch = Math.random\n    Math.random = this.uniform()\n  }\n\n  /**\n   * Restores a previously patched `Math.random` to its original value.\n   */\n  unpatch() {\n    if (this._patch) {\n      Math.random = this._patch\n      delete this._patch\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Convenience wrapper around `this.rng.next()`\n   *\n   * Returns a floating point number in [0, 1).\n   *\n   * @return {number}\n   */\n  next = (): number => {\n    return this._rng.next()\n  }\n\n  /**\n   * Samples a uniform random floating point number, optionally specifying\n   * lower and upper bounds.\n   *\n   * Convence wrapper around `random.uniform()`\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {number}\n   */\n  float = (min?: number, max?: number): number => {\n    return this.uniform(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  int = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @alias `random.int`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  integer = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @alias `random.boolean`\n   *\n   * @return {boolean}\n   */\n  bool = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @return {boolean}\n   */\n  boolean = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Returns an item chosen uniformly at trandom from the given array.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\n   * @return {T | undefined}\n   */\n  choice<T>(array: Array<T>): T | undefined {\n    if (!Array.isArray(array)) {\n      throw new Error(\n        `Random.choice expected input to be an array, got ${typeof array}`\n      )\n    }\n\n    const length = array?.length\n\n    if (length > 0) {\n      const index = this.uniformInt(0, length - 1)()\n      return array[index]\n    } else {\n      return undefined\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {function}\n   */\n  uniform = (min?: number, max?: number) => {\n    return this._memoize<number>('uniform', uniform, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {function}\n   */\n  uniformInt = (min?: number, max?: number) => {\n    return this._memoize<number>('uniformInt', uniformInt, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),\n   * with two possible outcomes, `true` or `false.\n   *\n   * This method is analogous to flipping a coin.\n   *\n   * @return {function}\n   */\n  uniformBoolean = () => {\n    return this._memoize<boolean>('uniformBoolean', uniformBoolean)\n  }\n\n  // --------------------------------------------------------------------------\n  // Normal distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean\n   * @param {number} [sigma=1] - Standard deviation\n   * @return {function}\n   */\n  normal = (mu?: number, sigma?: number) => {\n    return normal(this, mu, sigma)\n  }\n\n  /**\n   * Generates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean of underlying normal distribution\n   * @param {number} [sigma=1] - Standard deviation of underlying normal distribution\n   * @return {function}\n   */\n  logNormal = (mu?: number, sigma?: number) => {\n    return logNormal(this, mu, sigma)\n  }\n\n  // --------------------------------------------------------------------------\n  // Bernoulli distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  bernoulli = (p?: number) => {\n    return bernoulli(this, p)\n  }\n\n  /**\n   * Generates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).\n   *\n   * @param {number} [n=1] - Number of trials.\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  binomial = (n?: number, p?: number) => {\n    return binomial(this, n, p)\n  }\n\n  /**\n   * Generates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  geometric = (p?: number) => {\n    return geometric(this, p)\n  }\n\n  // --------------------------------------------------------------------------\n  // Poisson distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).\n   *\n   * @param {number} [lambda=1] - Mean (lambda > 0)\n   * @return {function}\n   */\n  poisson = (lambda?: number) => {\n    return poisson(this, lambda)\n  }\n\n  /**\n   * Generates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).\n   *\n   * @param {number} [lambda=1] - Inverse mean (lambda > 0)\n   * @return {function}\n   */\n  exponential = (lambda?: number) => {\n    return exponential(this, lambda)\n  }\n\n  // --------------------------------------------------------------------------\n  // Misc distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to sum (n >= 0)\n   * @return {function}\n   */\n  irwinHall = (n?: number) => {\n    return irwinHall(this, n)\n  }\n\n  /**\n   * Generates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to average (n >= 1)\n   * @return {function}\n   */\n  bates = (n?: number) => {\n    return bates(this, n)\n  }\n\n  /**\n   * Generates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).\n   *\n   * @param {number} [alpha=1] - Alpha\n   * @return {function}\n   */\n  pareto = (alpha?: number) => {\n    return pareto(this, alpha)\n  }\n\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n\n  /**\n   * Memoizes distributions to ensure they're only created when necessary.\n   *\n   * Returns a thunk which that returns independent, identically distributed\n   * samples from the specified distribution.\n   *\n   * @private\n   *\n   * @param {string} label - Name of distribution\n   * @param {function} getter - Function which generates a new distribution\n   * @param {...*} args - Distribution-specific arguments\n   *\n   * @return {function}\n   */\n  _memoize<T>(label: string, getter: IDistFn<any>, ...args: any[]): IDist<T> {\n    const key = `${args.join(';')}`\n    let value = this._cache[label]\n\n    if (value === undefined || value.key !== key) {\n      value = {\n        key,\n        distribution: getter(this, ...args)\n      }\n      this._cache[label] = value\n    }\n\n    return value.distribution\n  }\n}\n\n// defaults to Math.random as its RNG\nexport default new Random()\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","\"use strict\";","import { HistogramPartiiInternal, PoparciePartii, Wynik, WynikDemo } from \"./typy\";\n\nexport function sortedStringify(wynik: Wynik | WynikDemo) {\n  const sortedObj = {};\n  Object.keys(wynik)\n    .sort()\n    .forEach((key) => {\n      sortedObj[key] = wynik[key];\n    });\n  return JSON.stringify(sortedObj);\n}\n\nexport function sortObjectByValues(obj: { [key: string]: number }):\n  {key: string, value: number}[] {\n  // Convert the object to an array of key-value pairs\n  const keyValueArray = Object.entries(obj);\n\n  // Sort the array based on the values (ascending order)\n  return keyValueArray.sort((a, b) => b[1] - a[1]).map(([key, value]) => {\n    return { key, value};\n  });\n}\n","// Źródło:\n// https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=592625443&range=AI4:AI44,\n\n// import { Partia, Partie, sondaz_uliczny } from \"./sondaz_uliczny\";\n\n// const TD = Object.entries(sondaz_uliczny).map(([okreg, partie]) => {\n//   return partie['TD'].poparcie\n// });\n\n// console.log(TD);\n\nexport const ROZKLAD: { [key: string]: number[] } = {\n  LEWICA: [\n    0.0282571335,\n0.01488150667,\n0.0478222815,\n0.02984793983,\n0.029476448,\n0.0180548925,\n0.010392221,\n0.02975490417,\n0.03759809833,\n0.01542527167,\n0.0236883605,\n0.01100846683,\n0.0397647275,\n0.0091506275,\n0.007909908333,\n0.014014961,\n0.008859429833,\n0.010201509,\n0.118083528,\n0.03675424117,\n0.020347473,\n0.008839666333,\n0.0155574055,\n0.017031283,\n0.032726717,\n0.03074119817,\n0.020098175,\n0.0194996075,\n0.01982511017,\n0.01285778183,\n0.02496772,\n0.032462213,\n0.0220234625,\n0.0126734095,\n0.01999657117,\n0.02434270517,\n0.021791153,\n0.01856165517,\n0.0379657795,\n0.01779259133,\n0.02895186617  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=592625443&range=AN4:AN44,\n  LEWICA_BLAD: [\n    5.44, 4.35, 9.6, 7.9, 7.12, 3.38, 7.34, 3.42, 7.25, 3.99, 5.89, 3.0, 6.74,\n    3.41, 3.53, 6.97, 6.73, 5.94, 9.39, 8.1, 1.61, 5.79, 2.92, 7.77, 5.7, 2.09,\n    3.51, 8.74, 2.27, 5.02, 3.17, 5.67, 6.45, 4.54, 3.6, 6.46, 8.97, 7.86, 6.82,\n    5.23, 3.79,\n  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1383721529&range=U3:U43,\n  KO: [\n    0.02095042333,\n0.01835469433,\n0.04189383883,\n0.02857291333,\n0.02348052333,\n0.02197197817,\n0.01186840483,\n0.02720124583,\n0.0292574625,\n0.01053707333,\n0.0189868865,\n0.01425199983,\n0.03839594083,\n0.009164819667,\n0.008615772,\n0.01198455117,\n0.01145744533,\n0.01229867283,\n0.1181621912,\n0.0343164895,\n0.02074295667,\n0.01193354767,\n0.01593256617,\n0.0210371165,\n0.0441507985,\n0.04206959417,\n0.020244877,\n0.01245059417,\n0.02117911833,\n0.01750180833,\n0.034037158,\n0.01911514317,\n0.019047872,\n0.01428191817,\n0.017092405,\n0.02281050867,\n0.01443454267,\n0.02173799933,\n0.047433574,\n0.01732140367,\n0.03372117283  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1383721529&range=X3:X43,\n  KO_BLAD: [\n    2.38, 4.81, 2.31, 6.08, 5.05, 1.21, 1.82, 2.96, 5.81, 1.72, 4.21, 1.47,\n    3.91, 6.86, 6.03, 2.58, 1.74, 1.66, 6.52, 2.43, 3.08, 2.44, 3.1, 2.78, 6.05,\n    3.14, 2.42, 3.58, 3.46, 5.66, 4.79, 1.11, 1.82, 4.67, 2.93, 2.28, 1.65,\n    4.96, 4.83, 5.98, 3.32,\n  ],\n  // TRZEBA POSORTOWAĆ ARKUSZ!!!\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=1231789773&range=R4:R44,\n  TD: [\n    0.022415876,\n0.0140898335,\n0.03175889317,\n0.0283710235,\n0.02891201475,\n0.026946886,\n0.022047627,\n0.03287808558,\n0.01753570292,\n0.01884171267,\n0.02608876458,\n0.01569827233,\n0.03346774583,\n0.0150046695,\n0.02292685725,\n0.02517498925,\n0.01684268933,\n0.02528291583,\n0.05741305392,\n0.03330098842,\n0.02768583583,\n0.0156986055,\n0.0244913335,\n0.03222947392,\n0.02653349625,\n0.033979463,\n0.02036296842,\n0.01573798425,\n0.017095344,\n0.01606130233,\n0.02022854192,\n0.01415383625,\n0.02527398442,\n0.01563157683,\n0.02427266483,\n0.03357863792,\n0.02057061317,\n0.02859777067,\n0.0285236385,\n0.01738948992,\n0.02690483617  ],\n  // stały\n  TD_BLAD: [\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=418600979&range=V3:V43,\n  PIS: [\n    0.02289047833,\n0.014539447,\n0.02776369267,\n0.02131711167,\n0.02294950533,\n0.03838390783,\n0.02973062217,\n0.01900597067,\n0.01591571983,\n0.02408826683,\n0.02904836917,\n0.02130995067,\n0.0311625805,\n0.02963938367,\n0.02562634467,\n0.02475671167,\n0.02382695067,\n0.033949261,\n0.04304594533,\n0.02970509583,\n0.01980732767,\n0.03061604567,\n0.04447523967,\n0.03270840817,\n0.02036073383,\n0.02608811483,\n0.0227350815,\n0.0159613145,\n0.016143496,\n0.02084102017,\n0.02295180183,\n0.01589586733,\n0.04070432767,\n0.013169903,\n0.01636291267,\n0.02526424917,\n0.02164847417,\n0.01629085967,\n0.01578302817,\n0.012774997,\n0.02076148367  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=418600979&range=X3:X43,\n  PIS_BLAD: [\n    1.25, 2.27, 2.65, 3.22, 1.73, 6.49, 10.69, 2.54, 2.74, 8.62, 6.18, 1.37,\n    7.92, 5.76, 3.48, 5.35, 7.48, 8.33, 7.79, 4.64, 3.03, 4.2, 3.39, 3.23, 3.62,\n    3.23, 5.0, 2.05, 4.8, 3.58, 5.93, 3.25, 6.75, 3.18, 2.45, 3.75, 5.87, 3.43,\n    6.49, 2.91, 2.37,\n  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=173675036&range=W3:W43,\n  KONF: [\n    0.02060562967,\n0.01229549835,\n0.03603269929,\n0.02187492114,\n0.022931464,\n0.03703330869,\n0.02519996845,\n0.02217074937,\n0.01722519479,\n0.01994023364,\n0.02252087825,\n0.02050570213,\n0.03539542744,\n0.02552712404,\n0.02291576829,\n0.01795242761,\n0.01920071307,\n0.02779108581,\n0.05962854781,\n0.02940181365,\n0.02027409076,\n0.02730411279,\n0.04747821146,\n0.03286621146,\n0.0258593653,\n0.03152217595,\n0.0235678845,\n0.01403419925,\n0.01896100225,\n0.02215147004,\n0.02308606074,\n0.01587827245,\n0.03247476995,\n0.01196144868,\n0.01944236486,\n0.0257290283,\n0.01804960345,\n0.01795606471,\n0.02234484537,\n0.01189939569,\n0.02101026617  ],\n  // https://docs.google.com/spreadsheets/d/1e7Tww7BT1zWkAuYC5zWIbX9k3GhzveAWqSR8U0iDzn0/edit#gid=173675036&range=Z3:Z43,\n  KONF_BLAD: [\n    1.14, 3.14, 6.32, 4.99, 7.07, 13.57, 20.14, 3.12, 2.92, 6.45, 2.25, 10.94,\n    13.54, 15.52, 13.43, 2.83, 7.4, 14.28, 11.92, 3.44, 3.64, 18.1, 12.97,\n    10.15, 8.59, 3.48, 4.35, 9.07, 11.42, 5.82, 12.97, 2.62, 3.15, 8.41, 2.01,\n    1.66, 6.39, 4.99, 7.92, 7.85, 7.46,\n  ],\n};","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","export type Komentarz = {\n  nazwaOkregu?: string,\n  nrOkregu?: number,\n  txt?: string;\n  rekomendacjePartii?: string[];\n};\nexport interface Komentarze {\n  [key: string]: Komentarz,\n}\n\n// komitet - jeśli są dwa komitety w nazwie, to muszą być posortowane alfabetycznie\nexport const komentarze: Komentarze = {\n  Legnica: {\n    nazwaOkregu: \"Legnica\",\n    nrOkregu: 1,\n    rekomendacjePartii: [\"KO\", \"LEWICA\"],\n    txt: \"Lewica i KO konkuruje o ostatni mandat z PiS i Konfederacją, warto wesprzeć swym głosem jedną z nich.\",\n  },\n  Wałbrzych: {\n    nazwaOkregu: \"Wałbrzych\",\n    nrOkregu: 2,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Lewica i Trzecia Droga konkuruje o ostatni mandat z PiS, warto wesprzeć swym głosem jedną z nich.\",\n  },\n  Wrocław: {\n    nazwaOkregu: \"Wrocław\",\n    nrOkregu: 3,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"KO ma największe szanse zdobyć 6 mandatów. Trzecia Droga ma szanse na drugi mandat. Warto wesprzeć swym głosem jedną z nich, bo mają największe szanse zdobyć mandat kosztem PiS lub Konfederacji.\",\n  },\n  Bydgoszcz: {\n    nazwaOkregu: \"Bydgoszcz\",\n    nrOkregu: 4,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Trzy partie opozycyjne razem konkurują o mandat z Konfederacją. Należy wesprzeć Lewicę i Trzecią Drogę, bo mają najbardziej przewidywalne, wysokie szanse na kolejne mandaty.\",\n  },\n  Toruń: {\n    nazwaOkregu: \"Toruń\",\n    nrOkregu: 5,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Trzy partie opozycyjne razem konkurują o mandat z Konfederacją. Należy wesprzeć Lewicę i Trzecią Drogę, bo ma najwyższą szansę na kolejny mandat.\",\n  },\n  Lublin: {\n    nazwaOkregu: \"Lublin\",\n    nrOkregu: 6,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"Wszystkie 5 ugrupowań walczy na równych szansach o 3 ostatnie mandaty. Warto wesprzeć KO i Trzecią Drogę, gdyż mają największe szanse w walce z PiS i Konfederacją.\",\n  },\n  Chełm: {\n    nazwaOkregu: \"Chełm\",\n    nrOkregu: 7,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Lewica walczy z PiS o ostatni mandat i potrzebuje w tym okręgu wsparcia.\",\n  },\n  \"Zielona Góra\": {\n    nazwaOkregu: \"Zielona Góra\",\n    nrOkregu: 8,\n    rekomendacjePartii: [\"LEWICA\"],\n    txt: \"O ostatni mandat walczy PiS, Konfederacja i Trzecia Droga. Na pewno trzeba wesprzeć Trzecią Drogę, ale poparcie KO również jest uzasadnione.\",\n  },\n  Łódź: {\n    nazwaOkregu: \"Łódź\",\n    nrOkregu: 9,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"O ostatni mandat walczy PiS, Konfederacja i Trzecia Droga. Na pewno trzeba wesprzeć Trzecią Drogę, ale poparcie KO również jest uzasadnione.\",\n  },\n  \"Piotrków Trybunalski\": {\n    nazwaOkregu: \"Piotrków Trybunalski\",\n    nrOkregu: 10,\n    rekomendacjePartii: [\"KO\", \"LEWICA\"],\n    txt: \"Cztery partie walczą o ostatnie trzy przydzielane mandaty: KO, Lewica, PiS i Konfederacja. By nie stracić jednego z mandatów demokratycznych potrzebne jest wsparcie dla KO i Lewicy.\",\n  },\n  Sieradz: {\n    nazwaOkregu: \"Sieradz\",\n    nrOkregu: 11,\n    rekomendacjePartii: [\"TD\"],\n    txt: \"PiS i Trzecia Droga walczą o ostatni mandat, dodatkowe wsparcie Trzeciej Drogi z okręgów Kalisz i Konin pomoże odebrać PiS mandat.\",\n  },\n  Chrzanów: {\n    nazwaOkregu: \"Chrzanów\",\n    nrOkregu: 12,\n    rekomendacjePartii: [\"TD\"],\n    txt: \"PiS, Konfederacja i Trzecia Droga walczą o ostatnie dwa mandaty, dodatkowe wsparcie Trzeciej Drogi daje największe szanse na odebranie PiS mandatu.\",\n  },\n  Kraków: {\n    nazwaOkregu: \"Kraków\",\n    nrOkregu: 13,\n    rekomendacjePartii: [\"LEWICA\"],\n    txt: \"Trzy ugrupowania walczą z PiS o ostatnie 3 mandaty. Jedna z partii może stracić ten mandat na rzecz PiS, dlatego każda partia wymaga poparcia. Sugerujemy Lewicę, gdyż KO i Trzecia droga mogą strategicznie wyjechać odpowiednio do Tarnowa i Chrzanowa.\",\n  },\n  \"Nowy Sącz\": {\n    nazwaOkregu: \"Nowy Sącz\",\n    nrOkregu: 14,\n    rekomendacjePartii: [\"LEWICA\"],\n    txt: \"W tym okręgu rekomendujemy wsparcie Lewicy, za pomocą wyborców niezdecydowanych z tego okręgu oraz turystyki wyborczej Lewicy z okręgów Tarnów i Chrzanów. Więcej o tej strategi w artykule podlinkowanym pod logo Lewicy.\",\n  },\n  Tarnów: {\n    nazwaOkregu: \"Tarnów\",\n    nrOkregu: 15,\n    rekomendacjePartii: [\"TD\"],\n    txt: \"Domowy okręg Władysława Kosiniaka-Kamysza, Trzecia Droga z realnymi szansami na drugi mandat. Wyborcy Lewicy powinni głosować w okręgu Nowy Sącz, gdzie Lewica wsparta wyborcami z Tarnowa i Chrzanowa walczy o pierwszy mandat.\",\n  },\n  Płock: {\n    nazwaOkregu: \"Płock\",\n    nrOkregu: 16,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Lewica i Trzecia Droga mają szanse odebrać mandat Konfederacji. Obydwie te partie powinny liczyć na wsparcie ich wyborców z okręgów 20 w przypadku Trzeciej Drogi, oraz 17 w przypadku Lewicy. Warto wesprzeć swym głosem jedną z nich.\",\n  },\n  Radom: {\n    nazwaOkregu: \"Radom\",\n    nrOkregu: 17,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Wyborcy Lewicy powinni wesprzeć turystyką wyborczą Piotrków Trybunalski i częściowo okręg płocki. Jest to okręg, gdzie spodziewanych jest wielu wyborców z Warszawy. Dla wzmocnienia tego efektu rekomendowane jest wsparcie KO.\",\n  },\n  Siedlce: {\n    nazwaOkregu: \"Siedlce\",\n    nrOkregu: 18,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"To jest okręg, w którym spodziewany jest największy udział wyborców, którzy przyjadą tu z Warszawy, będą to głównie wyborcy KO. Trzecia Droga zdobędzie prawdopodobnie dwa mandaty, Lewica ma zbyt niskie poparcie na pierwszy mandat. <br/>Rekomendacja wsparcia KO, dla wzmocnienia efektu turystyki wyborczej.<br/> Potrzebne jest wsparcie Trzeciej Drogi by nie doszło do odebrania mandatu nie PiS a Trzeciej Drodze przez KO\",\n  },\n  \"Warszawa I\": {\n    nazwaOkregu: \"Warszawa I\",\n    nrOkregu: 19,\n    rekomendacjePartii: [\"LEWICA\", \"TD\"],\n    txt: \"Warszawa I: Wyborcy KO powinni masowo zagłosować w okręgach Siedlce i Radom. Jest to strategia oparta na głosowaniu tam, gdzie jest większa siła głosu. Przy masowym wyjeździe z Warszawy do okręgu siedleckiego i radomskiego KO może stracić mandat, ale z dużym prawdopodobieństwem zostanie on przejęty przez Lewicę albo Trzecią Drogę. <br/>Część wyborców KO (mieszkańcy Bielan) powinni zagłosować w okręgu podwarszawskim dla zapewnienia piątego mandatu dla KO w tym okręgu. <br/>Wyborco Lewicy, Trzeciej Drogi, niezdecydowani lub gotowi działać strategicznie - Lewica w okręgu 19 (Warszawa) walczy o 4. mandat a Trzecia o 2. Więc jeśli chcesz to zagwarantować zagłosuj na jedną z tych partii lub wyjedź.\",\n  },\n  \"Warszawa II\": {\n    nazwaOkregu: \"Warszawa II\",\n    nrOkregu: 20,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"W tym okręgu po jednym mandacie zdobędą Lewica, Trzecia Droga i Konfederacja. Pozostałe 9 podzielą KO i PiS i może zadecydować różnica jednego głosu. Wyborcy KO powinni głosować w swoim domowym okręgu. Wyborcy Lewicy mają bezpieczne poparcie zapewniające pierwszy mandat. Wyborcy Lewicy mieszkający blisko okręgu płockiego, powinny wesprzeć Lewicę w okręgu płockim. Wyborcy Trzeciej Drogi, którzy mogą głosować w innym okręgu, powinni wybrać okręg płocki lub siedlecki.\",\n  },\n  Opole: {\n    nazwaOkregu: \"Opole\",\n    nrOkregu: 21,\n    rekomendacjePartii: [],\n    txt: \"Założyliśmy, że w Opolu mandat weźmie (tak jak w kilku ostatnich wyborach) Mniejszość Niemiecka, a uwzględnienie jej w modelu zaciemniłoby obraz całości. Policzenie, że w Opolu jest 11 mandatów (a nie 12) było tutaj najłatwiejszym rozwiązaniem.\",\n  },\n  Krosno: {\n    nazwaOkregu: \"Krosno\",\n    nrOkregu: 22,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Największe szanse na kolejny mandat ma KO. Lewica bez realnych szans na mandat. Jej wyborcy powinni wesprzeć okręg rzeszowski.\",\n  },\n  Rzeszów: {\n    nazwaOkregu: \"Rzeszów\",\n    nrOkregu: 23,\n    rekomendacjePartii: [\"LEWICA\"],\n    txt: \"Lewica walczy o mandat przy wsparciu turystyki wyborczej z Krosna, Pozostałe partie ze stabilnym poparciem.\",\n  },\n  Białystok: {\n    nazwaOkregu: \"Białystok\",\n    nrOkregu: 24,\n    rekomendacjePartii: [\"KO\", \"LEWICA\"],\n    txt: \"Lewica walczy o ostatnie dwa mandaty z PiS i Konfederacją. Aby ochronić mandat należy wspierać Lewicę. Próba przejęcia dodatkowego mandatu jest związana z głosem na KO, której najbliżej do kolejnego mandatu.\",\n  },\n  Gdańsk: {\n    nazwaOkregu: \"Gdańsk\",\n    nrOkregu: 25,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"KO i Konfederacja walczą o ostatni mandat w okręgu, dlatego należy wesprzeć KO.\",\n  },\n  Gdynia: {\n    nazwaOkregu: \"Gdynia\",\n    nrOkregu: 26,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Trzecia Droga i Lewica ze stabilnym poparciem na jeden mandat. Najwieksze szanse walki o kolejny mandat ma KO.\",\n  },\n  \"Bielsko-Biała\": {\n    nazwaOkregu: \"Bielsko-Biała\",\n    nrOkregu: 27,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"KO walczy Konfederacja i PiS o ostatni mandat w okręgu, dlatego należy wesprzeć KO.\",\n  },\n  Częstochowa: {\n    nazwaOkregu: \"Częstochowa\",\n    nrOkregu: 28,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"PiS i KO walczą o ostatni mandat, wobec tego należy tutaj wesprzeć KO.\",\n  },\n  Gliwice: {\n    nazwaOkregu: \"Gliwice\",\n    nrOkregu: 29,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"KO może być jedynym ugrupowaniem, które może odebrać Konfederacji pierwszy mandat. Twój głos wspierający to upgrupowanie tą szanse zwieksza.\",\n  },\n  Rybnik: {\n    nazwaOkregu: \"Rybnik\",\n    nrOkregu: 30,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Trzy ugrupowania demokratyczne walczą z Konfederacją o ostatnie 3 mandaty. KO i Lewica mają najmniej pewną sytuację, warto wesprzeć swym głosem jedną z nich.\",\n  },\n  Katowice: {\n    nazwaOkregu: \"Katowice\",\n    nrOkregu: 31,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"KO walczy z PiS o ostatni mandat w okręgu, należy wesprzeć KO w tych wysiłkach.\",\n  },\n  Sosnowiec: {\n    nazwaOkregu: \"Sosnowiec\",\n    nrOkregu: 32,\n    rekomendacjePartii: [\"TD\"],\n    txt: \"Trzecia Droga walczy z Konfederacja o ostatni mandat. Należy ją wesprzeć w tych wysiłkach.\",\n  },\n  Kielce: {\n    nazwaOkregu: \"Kielce\",\n    nrOkregu: 33,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"Kielce jako okręg o dużej sile głosu będzie zapewne celem turystyki wyborczej z innych okręgów. Jest to miejsce, gdzie Giertych na liście KO konkuruje z Kaczyńskim na liście PiS. Warto wesprzeć KO, które może liczyć na dodatkowych wyborców związanych z turystyką wyborczą. Trzecia Droga może potrzebować wsparcia by pewnie zdobyć 2 mandat.\",\n  },\n  Elbląg: {\n    nazwaOkregu: \"Elbląg\",\n    nrOkregu: 34,\n    rekomendacjePartii: [\"KO\", \"LEWICA\"],\n    txt: \"KO ze stabilnym poparciem na 3 mandaty. Elbląg jako okręg o największej sile głosu będzie zapewne celem turystyki wyborczej motywowanej siłą głosu. Tacy wyborcy powinni wesprzeć KO lub Lewicę.\",\n  },\n  Olsztyn: {\n    nazwaOkregu: \"Olsztyn\",\n    nrOkregu: 35,\n    rekomendacjePartii: [\"KO\", \"TD\"],\n    txt: \"Walka o ostatni mandat między Trzecią Drogą, KO i PiS. Twój głos na Trzecią Drogę lub KO zwiększa ich szanse na mandat.\",\n  },\n  Kalisz: {\n    nazwaOkregu: \"Kalisz\",\n    nrOkregu: 36,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Wyborcy Lewicy mają pewny jeden mandat, wyborcy Trzeciej Drogi moga wspierać turystyką wyborczą okręg 11. Najbliżej zdobycia mandatu jest KO, które należy wspierać.\",\n  },\n  Konin: {\n    nazwaOkregu: \"Konin\",\n    nrOkregu: 37,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"Wyborcy Lewicy mają pewny jeden mandat, wyborcy Trzeciej Drogi moga wspierać turystyką wyborczą okręg 11. Najbliżej zdobycia mandatu jest KO, które należy wspierać.\",\n  },\n  Piła: {\n    nazwaOkregu: \"Piła\",\n    nrOkregu: 38,\n    rekomendacjePartii: [\"TD\"],\n    txt: \"Trzecia droga ma największe szanse na kolejny mandat, również przy wsparciu turystyką wyborczą z Poznania i Koszalina.\",\n  },\n  Poznań: {\n    nazwaOkregu: \"Poznań\",\n    nrOkregu: 39,\n    rekomendacjePartii: [\"KO\", \"LEWICA\"],\n    txt: \"KO i Lewica walczą o ostani mandat z Konfederacją, warto wesprzeć swym głosem jedną z nich.\",\n  },\n  Koszalin: {\n    nazwaOkregu: \"Koszalin\",\n    nrOkregu: 40,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"PIS z dużym prawdopodobieństwem zdobędzie ostatni mandat. Ponieważ żadna z mniejszych partii demokratycznych nie ma wystarczającej liczby głosów by była szansa na drugi mandat należy poprzeć KO. Wyborcy Trzeciej Drogi mogą wspierać turystyką wyborczą walkę o dodatkowy mandat w Pile.\",\n  },\n  Szczecin: {\n    nazwaOkregu: \"Szczecin\",\n    nrOkregu: 41,\n    rekomendacjePartii: [\"KO\"],\n    txt: \"PiS i Konfederacja mają największe szanse na ostatnie mandaty. Wspierając Trzecią Drogę lub Lewicę zwiększasz szanse na odebranie im tych mandatów.\",\n  },\n};\n\nexport const komentarzKoncowy = [\n\"KO zdobyło +2 mandaty kosztem Lewicy i Konfederacji. 11k zaświadczeń, x2 do 2019. KO wyprzedziło Konfederację o 2k mandatów. Turystyka mogła mieć tu wpływ.\",\n\"Nie przydatna rekomendacja, bo nie dała Lewicy mandatu (zabrakło 5k). Trzecia Droga miała mandat i tak zapewniony z zapasem 9k głosów. Na szczęście stracony mandat Lewicy był na rzecz KO.\",\n\"We Wrocławiu ostatni mandat dostała KO ale 7k przed Lewicą. Trudno powiedziec kim było 14k osób z zaświadczeniem, było to 1.6x stanu z 2019, zapewne Studenci i osoby spoza Wrocławia pracujące we Wrocławiu. \",\n\"KO odebrała ostani mandat Konfederacji przewagą 3k głosów. To nie była nasza rekomendacja. Kto dał te 3k głosów? Może turyści, bo było 8.6k zaświadczeń i było to 2.5x to co w 2019.\",\n\"Tu nasze przewidywania się nie sprawdziły - Lewica nie dostała -1 a PiS +1 mandatu, jednak żadne działania na poziomie kilku tysięcy by nic nie zmieniły. Ostatni mandat dostała Konfederacja z dużą przewagą nad wszystkimi 4 pozostałymi partiami.\",\n\"W stosunku do przewidywań Trzecia odbiła 1 mandat Konfederacji. Jednak zrobiła to z bezpiecznym zapasem 30k głosów, przy 6k dodatkowych głosach mogłaby zdobyć 3 mandat i zabrać go PIS, który dostał ostani Mandat.  Zaświadczeń było 9.4k i było to prawie x2 do 2019.\",\n\"Tu wynik jest zgodny z przewidywaniami, choć zgodnie z rekomendacją Trzeciej (ostatni mandat) i Lewicy (zabrakło 4k) potrzeba by było dodatkowych głosów aby odebrać ostatni mandat PiS.\",\n\"Błędna rekomendacja, wbrew rekomendacji KO odbiło mandat Konfederacji. KO przegoniła PiS o 12 tyś głosów. Było tutaj dużo turystyki - 10k zaświadczeń 3.3x tego co w 2019.\",\n\"Tu żadna rekomendacja nie była potrzebna - ostatni mandat dostała KO z dużą przewagą nad pozostałymi 4 partiami. Liczyliśmy na +1 mandat dla Lewicy i -1 mandat dla KO. Wynik nie zmienił notowań demokratów. NIe przewidzieliśmy tak dużego wyniku Trzeciej.\",\n\"Tu rekomendacja głosowania na Lewicę nie wystarczyła, zabrakło 5k głosów by odebrać PiS ostatni mandat. W kolejce po ostatni głos zaraz za PiS była Konfederacja - zabrakło im 600 głosów, Natomiast mandat KO był bezpieczny.\",\n\"Trzecia dostała 1 mandat więcej niż oczekiwaliśmy kosztem Konfederacji. Przegoniła ona PIS o 3.5k a Konfederację o 4k. Osób głosujących z zaświadczeniem było 7k i to było 3.1x tego co w 2019.\",\n\"Nasza rekomendacja zakładała niższe poparcie TD. Do kolejnego mandatu brakowało im 8k głosów natomiast KO tylko 4k, i bylo to 2.3 x stan z 2019. Konfederacji zabrakło 3k głosów do odebrania mandatu ale PiS, a nie partiom demokratycznym.\",\n\"Mimo rekomendacji Lewicy, zabrakło jej 9k do 2. mandatu. Na szczescie mandat ten wzieła TD, ale nie wymagał on wsparcia bo to był mandat przedostani.\",\n\"Tu nasza rekomendacja była naiwna. Mieliśmy nadzieję, że wyborcy Lewicy z sąsiadujacych okręgów mogą tu przyjechać i się zjednoczyć, ale tak się nie stało.\",\n\"KO i Trzecia odebrały po jednym mandacie PiS i Konfederacji. Rekomendacja prawie dobra, bo KO nie dostała rekomendacji a nie wiele brakowało (2k głosów) aby odebrać mandat Konfederacji. Mandat TD był wzięty z górką 6.5k głosów, więc pewnie nie wymagało to głosowania strategicznego na TD.\",\n\"KO zdobyło ostatni mandat przewagą 4k przed PiS i 5k przed Konfederacją i Lewicą. TD zdobyła +1 w stosunku do przewidywań. Można zakładać duży wpływ Turystyki bo było 7.5k głosujących z zaświadczeniem - x4 w stosunku do 2019.\",\n\"Tu nasza rekomendacja nic nie dała KO - realnie to PiS i Konfederacja walczyły o ostatni mandat. Wygrała PiS przewagą 2.5k mandatów.  \",\n\"Tu mandaty rozdano zgodnie z przewidywaniami nie uwzgledniającymi turystyki. Czyli Turystyka nie miała tu znaczenia mimo że było to 10k głosujących - 4.1x wynik z 2019. Zarówno KO jak i Trzeciej Drodze zabrakło po 12k do mandatu i odebrania go PiS. Rekomendacja trafna ale poparcie nie było wystarczające.\",\n\"Tu rekomendacja była prawidłowa - za wsparciem Trzeciej Drogi i Lewicy. Lewica wzięła przewidywane 3 mandaty a Trzecia dostała o 1 więcej niż przewidywaliśmy. Liczba zaświadczeń to 63k czyli 1.6x liczby z 2023, ale połowa tego za granicą. KO straciło mandat przez turystykę bo zabrakło im 15k do 10 mandatu. ale zyskaliśmy dzięki temu mandaty w Płocku i Kielcach oraz było bardzo blisko dodatkowego mandatu w Obwarzanku (Okręg 20). Jednak szansa na stratę mandatu w okręgu 19 przez KO na rzecz partii populistycznych wynosiła tylko 25% i mieliśmy szczęście bo to się nie zdarzyło - KO oddało swój mandat TD a zyskała tam, gdzie pojechali turyści (Płock i Kielce).\",\n\"Tu rekomendacje były dobre ale niewystarczające - gdyby KO zdobyło 311 głosów więcej a Lewica o 20 więcej to KO zdobyło by jeszcze jeden mandat od PiS. Pewnie wystarczyło by 500 turystów więcej.  Zaświadczeń było 20k czyli 3.8x tego co w 2019.\",\n\"Tu nie mieliśmy rekomendacji, baliśmy się zaszkodzić tracącej z wyborów na wybory MN. Wygląda na to że już nie odzyskają swojego mandatu. W stosunku do przewidywań KO dostało +2 a TD -1 i MN-1.\",\n\"Otrzymane mandaty zgodnie z prognozą, wsparcie KO nie zaszkodziło, ale też nie pomogło realnie KO - wzieła ona przedostatni mandat 1k głosów przed PIS ale daleko przed Lewica i TD. 10k zaświadczeń i to było 1.4x tego co w 2019.\",\n\"Bilans partii demokratycznych +1 w stosunku do przewidywań. Jednak wbrew rekomendacji Lewicy nie wystarczyło 6k głosów do zabrania ostaniego mandatu PiS. Prawie 8k zaświadczeń to tylko 1.7 w stosunku do 2019.\",\n\"W stosunku do przewidywań TD +1 a Lewica -1, ostatni mandat PIS przed Trzecią, może być duży wpływ turystyki bo 15k zaświadczeń, i x4 w stosunku do 2019. Prawdopodobnie to przyjezdne glosy na Hołownię. Jednak ten mandat był bezpieczny dla Trzeciej, bo żadne ugrupowanie nie było blisko za TD poza PiS ktore i tak dostało mandat.\",\n\"KO odebrało Konfederacji ostatni mandat. Wyprzedziło ją o 4k. Było 13k zaświadczeń tylko 1.6x 2019. Prawdopodobnie to studenci i osoby przyjezdne.\",\n\"Wynik zgodny z przewidywaniami, rzeczywiście KO dostało ostani mandat, ale daleko przed PiS (16k+). Choć może dzięki turystyce bo było 14k zaświdaczeń - x2 w stosunku do 2019.\",\n\"Zła rekomendacja, KO nie walczyła o ostatni mandat - robiły to Lewica i TD. Lewicy zabrakło 300 głosów by odebrać mandat Konfederacji.\",\n\"KO odebrało mandat Lewicy w stosunku do przewidywań. Wyprzedziło lewicę o 600 głosów. Nie było zagrożenia w relacji KO / PiS. Demokraci dostali zgodnie z szacunkami.\",\n\"KO odebrał Konfederacji mandat w stosunku do przewidywań, rekomendacja prawidłowa bo KO dostała ostatni mandat. Wpływ turystyki prawdopodobnie był znikomy, bo tylko 4k zaświadczeń - x2 do 2019.\",\n\"Rozklad zgodny z przewidywaniami, ale wskazana strategia powinna być tylko na Lewicę, bo zabrakło jej 4k aby przegonić Konfederacje w biegu o ostani mandat. Tu niemal nie było turystyki - tylko 3.5k, ale to i tak wzrost do 2019 x3.\",\n\"Rozkład zgodny z przewidywaniami, choć rekomendacja na TD mogła dać 1 mandat więcej dla opozycji demokratycznej. TD zabrakło tylko 1k mandatów by odebrać mandat Konfederacji. 7k zaświadczeń to 2.5x w stosunku do 2019.\",\n\"Zgodnie z przewidywaniami Trzecia dostała ostatni mandat, więc rekomendacja prawidłowa, choć było on bezpieczny, bo Konfederacja daleko z tyłu. Rozkład mandatów zgodny z przewidywaniami. 6k zaświadczeń to x4 w stosunku do 2019.\",\n\"KO odebrało PiS mandat w stosunku do przewidywań, przegoniła PiS o ok 100 głosów, czyli rekomendacja była prawidłowa. 12k zaświadczeń to 2.5x w stosunku do 2019.\",\n\"PiS odebrał Lewicy mandat, wbrew przewidywanemu scenariuszowi. Rekomendowane wsparcie dla Lewicy było wymagane, ale nie wystarczyło, zabrakło jej 2k głosów by odebrać mandat PiS. 5k zaświadczeń to x3 w stosunku do 2019, ale pewnie większość na KO, ktore z zapasem zdobyło 3 mandaty.\",\n\"Rekomendacja prawidłowa, ale odzew nie wystarczający. Wyglada na to że Turystyka mogła pomoc, 8k zaświadczeń w stosunku to x2 w stosunku do 2019. KO wzięło przedostani mandat +3k przed PiS, któtre zabrało mandat TD - zabrakło jej zaledwie 300 głosów do mandatu. Przewidziana liczba mandatów dla demokratów.\",\n\"KO wzięło ostatni mandat, przeganiając o 1000 głosów Konfederację. Osób z zaświadczeniem 5k, czyli prawie 3x tego co w 2019. Turystyka mogłą mieć więc wpływ.\",\n\"KO rzeczywiście walczyło o mandat ale zostało wyminięte przez TD o 5000 głosów (wynik lepszy niż przewidywany). 5k zaświadczeń, czyli 3.5x tego co w 2019. Konfederacja 1000 głosów za KO. Rekomendacja bez znaczenia ale nie błędna. KO wzieło i tak przewidywaną liczbę mandatówm ale dawaliśmy szanse na +1 na KO, podczas gdy realnie +1 wzieło TD a -1 Konfederacja.\",\n\"KO wzięło ostatni mandat, Trzecia Droga przedostatni o 900 głosów wcześniej. Dobra rekomendacja - rzeczywiście Trzecia Droga potrzebowała wsparcia. Wszystkich głosów z zaświadczeniem było 5k, a więc ponad 3x więcej niż w 2019. Przewidywaliśmy na podstawie lepszych sondaży Lewicy +1 dla Lewicy i zagrożenie -1 dla KO.\",\n\"Ostatni mandat wzięła Trzecia Droga, rekomendacja była zła. Przewidywaliśmy +1 dla KO i -1 dla Trzeciej.\",\n\"Ostatni mandat zdobyła KO, 14k osób zagłosowało z zaświadczeniem - jest to 48% kwoty mandatu i prawie x2 w stosunku do 2019. Jednak KO ten mandat odebrała Lewicy. Nie przewidzieliśmy tak niskiego poparcia dla Lewicy, a więc ryzyka straty mandatu.\",\n\"Ostatni mandat zdobyła KO, 13k osób z zaświadczeniem, odebrała ona ostatni mandat TD i Konfederacji, którym zabrakło po 5k do ostatniego mandatu. Prawdopodobnie część osób z zaświadczeniem to osoby mieszkające na stałe w Niemczech.\",\n];\n\nexport const zaswiadczenia = [\n{ zaswiadczenia2019: 5597, zaswiadczenia2023: 11196},\n{ zaswiadczenia2019: 4854, zaswiadczenia2023: 7157},\n{ zaswiadczenia2019: 8921, zaswiadczenia2023: 14233},\n{ zaswiadczenia2019: 3538, zaswiadczenia2023: 8692},\n{ zaswiadczenia2019: 5302, zaswiadczenia2023: 11762},\n{ zaswiadczenia2019: 4939, zaswiadczenia2023: 9488},\n{ zaswiadczenia2019: 3251, zaswiadczenia2023: 7632},\n{ zaswiadczenia2019: 3003, zaswiadczenia2023: 10170},\n{ zaswiadczenia2019: 2941, zaswiadczenia2023: 7875},\n{ zaswiadczenia2019: 1725, zaswiadczenia2023: 5312},\n{ zaswiadczenia2019: 2206, zaswiadczenia2023: 6920},\n{ zaswiadczenia2019: 1780, zaswiadczenia2023: 3971},\n{ zaswiadczenia2019: 9912, zaswiadczenia2023: 14219},\n{ zaswiadczenia2019: 10724, zaswiadczenia2023: 13737},\n{ zaswiadczenia2019: 1909, zaswiadczenia2023: 4824},\n{ zaswiadczenia2019: 1885, zaswiadczenia2023: 7596},\n{ zaswiadczenia2019: 1728, zaswiadczenia2023: 7378},\n{ zaswiadczenia2019: 2582, zaswiadczenia2023: 10706},\n{ zaswiadczenia2019: 38061, zaswiadczenia2023: 63438},\n{ zaswiadczenia2019: 5330, zaswiadczenia2023: 19912},\n{ zaswiadczenia2019: 2414, zaswiadczenia2023: 6444},\n{ zaswiadczenia2019: 6939, zaswiadczenia2023: 9928},\n{ zaswiadczenia2019: 4375, zaswiadczenia2023: 7669},\n{ zaswiadczenia2019: 3680, zaswiadczenia2023: 15150},\n{ zaswiadczenia2019: 8501, zaswiadczenia2023: 13692},\n{ zaswiadczenia2019: 7362, zaswiadczenia2023: 14709},\n{ zaswiadczenia2019: 4575, zaswiadczenia2023: 8734},\n{ zaswiadczenia2019: 1864, zaswiadczenia2023: 3902},\n{ zaswiadczenia2019: 1759, zaswiadczenia2023: 4218},\n{ zaswiadczenia2019: 1107, zaswiadczenia2023: 3661},\n{ zaswiadczenia2019: 2886, zaswiadczenia2023: 7392},\n{ zaswiadczenia2019: 1516, zaswiadczenia2023: 6292},\n{ zaswiadczenia2019: 4587, zaswiadczenia2023: 12070},\n{ zaswiadczenia2019: 1772, zaswiadczenia2023: 5273},\n{ zaswiadczenia2019: 3804, zaswiadczenia2023: 7975},\n{ zaswiadczenia2019: 1897, zaswiadczenia2023: 5234},\n{ zaswiadczenia2019: 1504, zaswiadczenia2023: 5201},\n{ zaswiadczenia2019: 1825, zaswiadczenia2023: 5834},\n{ zaswiadczenia2019: 6156, zaswiadczenia2023: 10015},\n{ zaswiadczenia2019: 7719, zaswiadczenia2023: 14999},\n{ zaswiadczenia2019: 6380, zaswiadczenia2023: 13499},\n]"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$d0bdfc9e83895ac0$export$54b30390056d406e","$d0bdfc9e83895ac0$export$802aa3ab0f758505","$d0bdfc9e83895ac0$export$f97acfc33e365d7","$d0bdfc9e83895ac0$export$76701ce0616caa92","$d0bdfc9e83895ac0$export$9aace05d0b7af991","$d0bdfc9e83895ac0$export$8d735048c0d75c97","$d0bdfc9e83895ac0$export$df58dec3b5376b15","$d0bdfc9e83895ac0$export$1697adf3f88eb3ce","PIS","LEWICA","KONF","TD","KO","BIAŁY","PKW_20231017","exitpoll_20231015","Opinia24_20231013","IBSP_20231013","IBRiS_20231012","Kantar_20231012","IBRiS_20231011","IBRiS_20231010","entries","forEach","sondaz","wynik","partia","procent","$d0bdfc9e83895ac0$var$sumaProcentow","values","reduce","acc","curr","length","nr","miasto","mandaty","mandatyPKW","glosy2019","wynik2019","PSL","$9bc43309e06c2764$export$c7f05eb85d8ce4ff","$9bc43309e06c2764$export$249f49cfde10ec4a","$9bc43309e06c2764$export$78b00e1dcefd3798","$9bc43309e06c2764$export$ba59b43972503164","$9bc43309e06c2764$export$d6b31143b10bb361","$9bc43309e06c2764$export$5c32ee91b60df44e","$9bc43309e06c2764$export$51a1424039638d72","$9bc43309e06c2764$export$3c6e5268720b9520","$geIQo","$iXaHu","$8OXs6","$h5k33","NIEDEMO","DEMO","okreg","wynikWOkregu","odchylenieWOkregu","ROZKLAD","$9bc43309e06c2764$export$f43f50db268314fa","PROBA_LOSOWA_SONDAZY","sondazeDoSredniej","p","bladProporcji","Math","sqrt","bladOdchyleniaWRegionie","mandatyWKraju","okregi","mandatyWOkregu","options","dhont","i","min","push","iloraz","nrMandatu","log","posortowanyDhont","sort","b","ostatniWzietyMandat","glosyWOkregu2019","accumulator","currentValue","podzial","slice","map","x","cur","d","cenaMandatu","inputWGlosach","round","filter","value","glosy","resztaUlamek","round2Fn","num","tabelka","mandat","rekord","ramka","KOLOR_PARTII","fade","console","suma","mnożnik","procentyWOkreguSrednia","bucketFn","procentWOkreguLosoweUncapped","wynikLosowyUncapped","max","normal","procentWOkreguLosoweCapped","procentOczekiwany","stddev","wynikLosowyCapped","$565b4f3f01e0b40a$export$f88c97427ae2a295","$dcc60992372e5fa5$export$2e2bcd8739ae039","$ftPHE","$dcc60992372e5fa5$var$_defineProperties","target","props","descriptor","writable","$dcc60992372e5fa5$var$_toPropertyKey","arg","key","$dcc60992372e5fa5$var$_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","$dcc60992372e5fa5$var$_createClass","Constructor","protoProps","staticProps","prototype","$dcc60992372e5fa5$var$_inheritsLoose","subClass","superClass","create","constructor","$dcc60992372e5fa5$var$_setPrototypeOf","o","setPrototypeOf","bind","__proto__","$dcc60992372e5fa5$export$7492a095b4ff4e68","RNG","_seed","seed","_opts","strSeed","k","charCodeAt","$dcc60992372e5fa5$var$RNGFunction","_RNG","RNGFunction","thunk","opts","_this","_rng","_proto","next","clone","_","$dcc60992372e5fa5$export$e6cb7150fd4ac6e7","args","arguments","_args$","_args","arg0","apply","$dcc60992372e5fa5$var$uniform","random","$dcc60992372e5fa5$var$numberValidator","$dcc60992372e5fa5$var$NumberValidator","isInt","isInteger","isPositive","lessThan","greaterThanOrEqual","greaterThan","$dcc60992372e5fa5$var$uniformInt","floor","$dcc60992372e5fa5$var$uniformBoolean","$dcc60992372e5fa5$var$logNormal","mu","sigma","exp","$dcc60992372e5fa5$var$geometric","invLogP","$dcc60992372e5fa5$var$logFactorialTable","$dcc60992372e5fa5$var$poisson","lambda","expMean","u","smu","invAlpha","vR","abs","us","_logFactorial","f","$dcc60992372e5fa5$var$bates","irwinHall","$dcc60992372e5fa5$var$pareto","alpha","pow","$dcc60992372e5fa5$var$RNGMathRandom","RNGMathRandom","Random","rng","_patch","_cache","uniform","uniformInt","integer","bool","uniformBoolean","_memoize","y","r","logNormal","bernoulli","binomial","geometric","poisson","exponential","sum","bates","pareto","use","patch","unpatch","choice","array","Array","isArray","label","getter","join","distribution","concat","$1NWL6","$8FlDu","$1rFi6","$iDdZD","$bDA0X","$oBon1","$layLz","alea","xor128","xorwow","xorshift7","xor4096","tychei","module1","define1","Alea","me","mash","data","h","t","s0","c","s1","s2","copy","impl","xg","state","prng","int32","double","quick","amd","define","XorGen","strseed","z","w","top","bot","result","X","j","Date","limit","pool","math","nodecrypto","rngname","startdenom","significance","overflow","seedrandom","callback","shortseed","mixkey","flatten","obj","depth","prop","typ","entropy","tostring","autoseed","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","arc4","ARC4","g","S","pass","is_math_call","keylen","mask","width","count","smear","stringseed","fromCharCode","ex","$b21b317d60618aca$export$637321ccaed74326","sortedObj","keys","JSON","stringify","$b21b317d60618aca$export$8ac25fd097dcfc2","keyValueArray","$dd9e9330ab7ef6b5$export$3ef61f55ef8769bb","LEWICA_BLAD","KO_BLAD","TD_BLAD","PIS_BLAD","KONF_BLAD","$b5NLL","$3JNfW","$c7027472f2342e55$var$skippedModels","$c7027472f2342e55$var$hashedModelKeys","model","labels","$c7027472f2342e55$var$limiters","$c7027472f2342e55$var$Color","object","channels","color","valpha","newArray","$c7027472f2342e55$var$zeroArray","splice","indexOf","hashedKeys","freeze","toString","string","toJSON","places","to","rgb","percentString","percent","unitArray","unitObject","number","toFixed","red","$c7027472f2342e55$var$getset","$c7027472f2342e55$var$maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","l","keyword","hex","hexa","rgbArray","alphaHex","toUpperCase","rgbNumber","luminosity","lum","element","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","raw","channel","modifier","m","$iXgRS","$fiNA2","$8136c47c546fcb63$var$hasOwnProperty","hasOwnProperty","$8136c47c546fcb63$var$reverseNames","$8136c47c546fcb63$var$name","$8136c47c546fcb63$var$cs","$8136c47c546fcb63$var$clamp","$8136c47c546fcb63$var$hexDouble","str","val","substring","toLowerCase","match","hexAlpha","i2","parseInt","parseFloat","isNaN","rgba","hsla","hwba","$eRiD0","$b23eff0c3c350e64$var$concat","$b23eff0c3c350e64$var$slice","$b23eff0c3c350e64$var$swizzle","results","len","wrap","fn","Function","getOwnPropertyDescriptor","name","$34eeA","$lIrBP","$2b8bc8511c5c8bbe$var$convert","$2b8bc8511c5c8bbe$var$models","fromModel","routes","routeModels","toModel","$2b8bc8511c5c8bbe$var$wrapRounded","wrappedFn","conversion","$2b8bc8511c5c8bbe$var$wrapRaw","$23bcc96f08b27157$var$reverseKeywords","$23bcc96f08b27157$var$convert","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","delta","rdif","gdif","bdif","diff","diffc","currentClosestKeyword","reversed","currentClosestDistance","Infinity","distance","t2","t3","t1","smin","lmin","sv","hi","q","sl","vmin","wh","bl","y2","x2","z2","hr","atan2","PI","cos","sin","saturation","ansi","mult","rem","colorString","split","char","pure","mg","graph","$fcf31fa4f4290ffc$var$deriveBFS","$fcf31fa4f4290ffc$var$buildGraph","models","parent","queue","current","pop","adjacents","adjacent","node","unshift","$fcf31fa4f4290ffc$var$wrapConversion","path","$fcf31fa4f4290ffc$var$link","from","$efd47c46dd00e93d$export$fdd7a3ba59c98337","$efd47c46dd00e93d$export$fcd124d90160e604","$efd47c46dd00e93d$export$53397944e62b6ac5","Legnica","nazwaOkregu","nrOkregu","rekomendacjePartii","txt","Wałbrzych","Wrocław","Bydgoszcz","Toruń","Lublin","Chełm","Łódź","Sieradz","Chrzanów","Kraków","Tarnów","Płock","Radom","Siedlce","Opole","Krosno","Rzeszów","Białystok","Gdańsk","Gdynia","Częstochowa","Gliwice","Rybnik","Katowice","Sosnowiec","Kielce","Elbląg","Olsztyn","Kalisz","Konin","Piła","Poznań","Koszalin","Szczecin","zaswiadczenia2019","zaswiadczenia2023","numberValidator","NumberValidator","logFactorialTable","logFactorial","logSqrt2PI","RNGFactory","index"],"version":3,"file":"index.04aa80cf.js.map"}